
NV3-Kethopchucnang.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000326c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000714  08003400  08003400  00013400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003b14  08003b14  00020028  2**0
                  CONTENTS
  4 .ARM          00000000  08003b14  08003b14  00020028  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003b14  08003b14  00020028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003b14  08003b14  00013b14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003b18  08003b18  00013b18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000028  20000000  08003b1c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001274  20000028  08003b44  00020028  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000129c  08003b44  0002129c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020028  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  00020058  2**0
                  CONTENTS, READONLY
 13 .debug_info   00034595  00000000  00000000  00020116  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000241a  00000000  00000000  000546ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000910  00000000  00000000  00056ac8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000212  00000000  00000000  000573d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00012b75  00000000  00000000  000575ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00008278  00000000  00000000  0006a15f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000461de  00000000  00000000  000723d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000223c  00000000  00000000  000b85b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000ba7f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000518  00000000  00000000  000ba85d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000028 	.word	0x20000028
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080033e8 	.word	0x080033e8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000002c 	.word	0x2000002c
 80001d0:	080033e8 	.word	0x080033e8

080001d4 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001d8:	4b16      	ldr	r3, [pc, #88]	; (8000234 <SystemInit+0x60>)
 80001da:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001de:	4a15      	ldr	r2, [pc, #84]	; (8000234 <SystemInit+0x60>)
 80001e0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80001e4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 80001e8:	4b13      	ldr	r3, [pc, #76]	; (8000238 <SystemInit+0x64>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	4a12      	ldr	r2, [pc, #72]	; (8000238 <SystemInit+0x64>)
 80001ee:	f043 0301 	orr.w	r3, r3, #1
 80001f2:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80001f4:	4b10      	ldr	r3, [pc, #64]	; (8000238 <SystemInit+0x64>)
 80001f6:	2200      	movs	r2, #0
 80001f8:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80001fa:	4b0f      	ldr	r3, [pc, #60]	; (8000238 <SystemInit+0x64>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	4a0e      	ldr	r2, [pc, #56]	; (8000238 <SystemInit+0x64>)
 8000200:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000204:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000208:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 800020a:	4b0b      	ldr	r3, [pc, #44]	; (8000238 <SystemInit+0x64>)
 800020c:	4a0b      	ldr	r2, [pc, #44]	; (800023c <SystemInit+0x68>)
 800020e:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000210:	4b09      	ldr	r3, [pc, #36]	; (8000238 <SystemInit+0x64>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a08      	ldr	r2, [pc, #32]	; (8000238 <SystemInit+0x64>)
 8000216:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800021a:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 800021c:	4b06      	ldr	r3, [pc, #24]	; (8000238 <SystemInit+0x64>)
 800021e:	2200      	movs	r2, #0
 8000220:	60da      	str	r2, [r3, #12]
  SystemInit_ExtMemCtl(); 
#endif /* DATA_IN_ExtSRAM */
         
  /* Configure the System clock source, PLL Multiplier and Divider factors, 
     AHB/APBx prescalers and Flash settings ----------------------------------*/
  SetSysClock();
 8000222:	f000 f88f 	bl	8000344 <SetSysClock>

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <SystemInit+0x60>)
 8000228:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800022c:	609a      	str	r2, [r3, #8]
#endif
}
 800022e:	bf00      	nop
 8000230:	bd80      	pop	{r7, pc}
 8000232:	bf00      	nop
 8000234:	e000ed00 	.word	0xe000ed00
 8000238:	40023800 	.word	0x40023800
 800023c:	24003010 	.word	0x24003010

08000240 <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8000240:	b480      	push	{r7}
 8000242:	b087      	sub	sp, #28
 8000244:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8000246:	2300      	movs	r3, #0
 8000248:	613b      	str	r3, [r7, #16]
 800024a:	2300      	movs	r3, #0
 800024c:	617b      	str	r3, [r7, #20]
 800024e:	2302      	movs	r3, #2
 8000250:	60fb      	str	r3, [r7, #12]
 8000252:	2300      	movs	r3, #0
 8000254:	60bb      	str	r3, [r7, #8]
 8000256:	2302      	movs	r3, #2
 8000258:	607b      	str	r3, [r7, #4]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800025a:	4b35      	ldr	r3, [pc, #212]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 800025c:	689b      	ldr	r3, [r3, #8]
 800025e:	f003 030c 	and.w	r3, r3, #12
 8000262:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8000264:	693b      	ldr	r3, [r7, #16]
 8000266:	2b08      	cmp	r3, #8
 8000268:	d011      	beq.n	800028e <SystemCoreClockUpdate+0x4e>
 800026a:	693b      	ldr	r3, [r7, #16]
 800026c:	2b08      	cmp	r3, #8
 800026e:	d844      	bhi.n	80002fa <SystemCoreClockUpdate+0xba>
 8000270:	693b      	ldr	r3, [r7, #16]
 8000272:	2b00      	cmp	r3, #0
 8000274:	d003      	beq.n	800027e <SystemCoreClockUpdate+0x3e>
 8000276:	693b      	ldr	r3, [r7, #16]
 8000278:	2b04      	cmp	r3, #4
 800027a:	d004      	beq.n	8000286 <SystemCoreClockUpdate+0x46>
 800027c:	e03d      	b.n	80002fa <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 800027e:	4b2d      	ldr	r3, [pc, #180]	; (8000334 <SystemCoreClockUpdate+0xf4>)
 8000280:	4a2d      	ldr	r2, [pc, #180]	; (8000338 <SystemCoreClockUpdate+0xf8>)
 8000282:	601a      	str	r2, [r3, #0]
      break;
 8000284:	e03d      	b.n	8000302 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8000286:	4b2b      	ldr	r3, [pc, #172]	; (8000334 <SystemCoreClockUpdate+0xf4>)
 8000288:	4a2c      	ldr	r2, [pc, #176]	; (800033c <SystemCoreClockUpdate+0xfc>)
 800028a:	601a      	str	r2, [r3, #0]
      break;
 800028c:	e039      	b.n	8000302 <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 800028e:	4b28      	ldr	r3, [pc, #160]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 8000290:	685b      	ldr	r3, [r3, #4]
 8000292:	0d9b      	lsrs	r3, r3, #22
 8000294:	f003 0301 	and.w	r3, r3, #1
 8000298:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800029a:	4b25      	ldr	r3, [pc, #148]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 800029c:	685b      	ldr	r3, [r3, #4]
 800029e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80002a2:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 80002a4:	68bb      	ldr	r3, [r7, #8]
 80002a6:	2b00      	cmp	r3, #0
 80002a8:	d00c      	beq.n	80002c4 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80002aa:	4a24      	ldr	r2, [pc, #144]	; (800033c <SystemCoreClockUpdate+0xfc>)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80002b2:	4a1f      	ldr	r2, [pc, #124]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 80002b4:	6852      	ldr	r2, [r2, #4]
 80002b6:	0992      	lsrs	r2, r2, #6
 80002b8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80002bc:	fb02 f303 	mul.w	r3, r2, r3
 80002c0:	617b      	str	r3, [r7, #20]
 80002c2:	e00b      	b.n	80002dc <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80002c4:	4a1c      	ldr	r2, [pc, #112]	; (8000338 <SystemCoreClockUpdate+0xf8>)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80002cc:	4a18      	ldr	r2, [pc, #96]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 80002ce:	6852      	ldr	r2, [r2, #4]
 80002d0:	0992      	lsrs	r2, r2, #6
 80002d2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80002d6:	fb02 f303 	mul.w	r3, r2, r3
 80002da:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80002dc:	4b14      	ldr	r3, [pc, #80]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 80002de:	685b      	ldr	r3, [r3, #4]
 80002e0:	0c1b      	lsrs	r3, r3, #16
 80002e2:	f003 0303 	and.w	r3, r3, #3
 80002e6:	3301      	adds	r3, #1
 80002e8:	005b      	lsls	r3, r3, #1
 80002ea:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80002ec:	697a      	ldr	r2, [r7, #20]
 80002ee:	68fb      	ldr	r3, [r7, #12]
 80002f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80002f4:	4a0f      	ldr	r2, [pc, #60]	; (8000334 <SystemCoreClockUpdate+0xf4>)
 80002f6:	6013      	str	r3, [r2, #0]
      break;
 80002f8:	e003      	b.n	8000302 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 80002fa:	4b0e      	ldr	r3, [pc, #56]	; (8000334 <SystemCoreClockUpdate+0xf4>)
 80002fc:	4a0e      	ldr	r2, [pc, #56]	; (8000338 <SystemCoreClockUpdate+0xf8>)
 80002fe:	601a      	str	r2, [r3, #0]
      break;
 8000300:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8000302:	4b0b      	ldr	r3, [pc, #44]	; (8000330 <SystemCoreClockUpdate+0xf0>)
 8000304:	689b      	ldr	r3, [r3, #8]
 8000306:	091b      	lsrs	r3, r3, #4
 8000308:	f003 030f 	and.w	r3, r3, #15
 800030c:	4a0c      	ldr	r2, [pc, #48]	; (8000340 <SystemCoreClockUpdate+0x100>)
 800030e:	5cd3      	ldrb	r3, [r2, r3]
 8000310:	b2db      	uxtb	r3, r3
 8000312:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8000314:	4b07      	ldr	r3, [pc, #28]	; (8000334 <SystemCoreClockUpdate+0xf4>)
 8000316:	681a      	ldr	r2, [r3, #0]
 8000318:	693b      	ldr	r3, [r7, #16]
 800031a:	fa22 f303 	lsr.w	r3, r2, r3
 800031e:	4a05      	ldr	r2, [pc, #20]	; (8000334 <SystemCoreClockUpdate+0xf4>)
 8000320:	6013      	str	r3, [r2, #0]
}
 8000322:	bf00      	nop
 8000324:	371c      	adds	r7, #28
 8000326:	46bd      	mov	sp, r7
 8000328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032c:	4770      	bx	lr
 800032e:	bf00      	nop
 8000330:	40023800 	.word	0x40023800
 8000334:	20000000 	.word	0x20000000
 8000338:	00f42400 	.word	0x00f42400
 800033c:	017d7840 	.word	0x017d7840
 8000340:	20000004 	.word	0x20000004

08000344 <SetSysClock>:
  *         is reset to the default reset state (done in SystemInit() function).   
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 8000344:	b480      	push	{r7}
 8000346:	af00      	add	r7, sp, #0
/******************************************************************************/

  /* At this stage the HSI is already enabled and used as System clock source */

    /* Select regulator voltage output Scale 1 mode, System frequency up to 168 MHz */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000348:	4b23      	ldr	r3, [pc, #140]	; (80003d8 <SetSysClock+0x94>)
 800034a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800034c:	4a22      	ldr	r2, [pc, #136]	; (80003d8 <SetSysClock+0x94>)
 800034e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000352:	6413      	str	r3, [r2, #64]	; 0x40
    PWR->CR |= PWR_CR_VOS;
 8000354:	4b21      	ldr	r3, [pc, #132]	; (80003dc <SetSysClock+0x98>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a20      	ldr	r2, [pc, #128]	; (80003dc <SetSysClock+0x98>)
 800035a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800035e:	6013      	str	r3, [r2, #0]

  /* HCLK = SYSCLK / 1*/
  RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 8000360:	4b1d      	ldr	r3, [pc, #116]	; (80003d8 <SetSysClock+0x94>)
 8000362:	4a1d      	ldr	r2, [pc, #116]	; (80003d8 <SetSysClock+0x94>)
 8000364:	689b      	ldr	r3, [r3, #8]
 8000366:	6093      	str	r3, [r2, #8]

  /* PCLK2 = HCLK / 1*/
  RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;
 8000368:	4b1b      	ldr	r3, [pc, #108]	; (80003d8 <SetSysClock+0x94>)
 800036a:	4a1b      	ldr	r2, [pc, #108]	; (80003d8 <SetSysClock+0x94>)
 800036c:	689b      	ldr	r3, [r3, #8]
 800036e:	6093      	str	r3, [r2, #8]
    
  /* PCLK1 = HCLK / 1*/
  RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;
 8000370:	4b19      	ldr	r3, [pc, #100]	; (80003d8 <SetSysClock+0x94>)
 8000372:	689b      	ldr	r3, [r3, #8]
 8000374:	4a18      	ldr	r2, [pc, #96]	; (80003d8 <SetSysClock+0x94>)
 8000376:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800037a:	6093      	str	r3, [r2, #8]

  /* Configure the main PLL */
  RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 800037c:	4b16      	ldr	r3, [pc, #88]	; (80003d8 <SetSysClock+0x94>)
 800037e:	4a18      	ldr	r2, [pc, #96]	; (80003e0 <SetSysClock+0x9c>)
 8000380:	605a      	str	r2, [r3, #4]
                 (RCC_PLLCFGR_PLLSRC_HSI) | (PLL_Q << 24);

  /* Enable the main PLL */
  RCC->CR |= RCC_CR_PLLON;
 8000382:	4b15      	ldr	r3, [pc, #84]	; (80003d8 <SetSysClock+0x94>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	4a14      	ldr	r2, [pc, #80]	; (80003d8 <SetSysClock+0x94>)
 8000388:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800038c:	6013      	str	r3, [r2, #0]

  /* Wait till the main PLL is ready */
  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 800038e:	bf00      	nop
 8000390:	4b11      	ldr	r3, [pc, #68]	; (80003d8 <SetSysClock+0x94>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000398:	2b00      	cmp	r3, #0
 800039a:	d0f9      	beq.n	8000390 <SetSysClock+0x4c>
  {
  }
   
  /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
  FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_2WS;
 800039c:	4b11      	ldr	r3, [pc, #68]	; (80003e4 <SetSysClock+0xa0>)
 800039e:	f240 6202 	movw	r2, #1538	; 0x602
 80003a2:	601a      	str	r2, [r3, #0]

  /* Select the main PLL as system clock source */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80003a4:	4b0c      	ldr	r3, [pc, #48]	; (80003d8 <SetSysClock+0x94>)
 80003a6:	689b      	ldr	r3, [r3, #8]
 80003a8:	4a0b      	ldr	r2, [pc, #44]	; (80003d8 <SetSysClock+0x94>)
 80003aa:	f023 0303 	bic.w	r3, r3, #3
 80003ae:	6093      	str	r3, [r2, #8]
  RCC->CFGR |= RCC_CFGR_SW_PLL;
 80003b0:	4b09      	ldr	r3, [pc, #36]	; (80003d8 <SetSysClock+0x94>)
 80003b2:	689b      	ldr	r3, [r3, #8]
 80003b4:	4a08      	ldr	r2, [pc, #32]	; (80003d8 <SetSysClock+0x94>)
 80003b6:	f043 0302 	orr.w	r3, r3, #2
 80003ba:	6093      	str	r3, [r2, #8]

  /* Wait till the main PLL is used as system clock source */
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 80003bc:	bf00      	nop
 80003be:	4b06      	ldr	r3, [pc, #24]	; (80003d8 <SetSysClock+0x94>)
 80003c0:	689b      	ldr	r3, [r3, #8]
 80003c2:	f003 030c 	and.w	r3, r3, #12
 80003c6:	2b08      	cmp	r3, #8
 80003c8:	d1f9      	bne.n	80003be <SetSysClock+0x7a>
}
 80003ca:	bf00      	nop
 80003cc:	bf00      	nop
 80003ce:	46bd      	mov	sp, r7
 80003d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d4:	4770      	bx	lr
 80003d6:	bf00      	nop
 80003d8:	40023800 	.word	0x40023800
 80003dc:	40007000 	.word	0x40007000
 80003e0:	08015410 	.word	0x08015410
 80003e4:	40023c00 	.word	0x40023c00

080003e8 <RCC_GetClocksFreq>:
  *         configuration based on this function will be incorrect.
  *
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 80003e8:	b480      	push	{r7}
 80003ea:	b089      	sub	sp, #36	; 0x24
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 80003f0:	2300      	movs	r3, #0
 80003f2:	61bb      	str	r3, [r7, #24]
 80003f4:	2300      	movs	r3, #0
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	2300      	movs	r3, #0
 80003fa:	61fb      	str	r3, [r7, #28]
 80003fc:	2302      	movs	r3, #2
 80003fe:	613b      	str	r3, [r7, #16]
 8000400:	2300      	movs	r3, #0
 8000402:	60fb      	str	r3, [r7, #12]
 8000404:	2302      	movs	r3, #2
 8000406:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8000408:	4b4a      	ldr	r3, [pc, #296]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 800040a:	689b      	ldr	r3, [r3, #8]
 800040c:	f003 030c 	and.w	r3, r3, #12
 8000410:	61bb      	str	r3, [r7, #24]

  switch (tmp)
 8000412:	69bb      	ldr	r3, [r7, #24]
 8000414:	2b08      	cmp	r3, #8
 8000416:	d011      	beq.n	800043c <RCC_GetClocksFreq+0x54>
 8000418:	69bb      	ldr	r3, [r7, #24]
 800041a:	2b08      	cmp	r3, #8
 800041c:	d844      	bhi.n	80004a8 <RCC_GetClocksFreq+0xc0>
 800041e:	69bb      	ldr	r3, [r7, #24]
 8000420:	2b00      	cmp	r3, #0
 8000422:	d003      	beq.n	800042c <RCC_GetClocksFreq+0x44>
 8000424:	69bb      	ldr	r3, [r7, #24]
 8000426:	2b04      	cmp	r3, #4
 8000428:	d004      	beq.n	8000434 <RCC_GetClocksFreq+0x4c>
 800042a:	e03d      	b.n	80004a8 <RCC_GetClocksFreq+0xc0>
  {
  case 0x00:  /* HSI used as system clock source */
    RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	4a42      	ldr	r2, [pc, #264]	; (8000538 <RCC_GetClocksFreq+0x150>)
 8000430:	601a      	str	r2, [r3, #0]
    break;
 8000432:	e03d      	b.n	80004b0 <RCC_GetClocksFreq+0xc8>
  case 0x04:  /* HSE used as system clock  source */
    RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a41      	ldr	r2, [pc, #260]	; (800053c <RCC_GetClocksFreq+0x154>)
 8000438:	601a      	str	r2, [r3, #0]
    break;
 800043a:	e039      	b.n	80004b0 <RCC_GetClocksFreq+0xc8>
  case 0x08:  /* PLL P used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLP
    */
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 800043c:	4b3d      	ldr	r3, [pc, #244]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 800043e:	685b      	ldr	r3, [r3, #4]
 8000440:	0d9b      	lsrs	r3, r3, #22
 8000442:	f003 0301 	and.w	r3, r3, #1
 8000446:	60fb      	str	r3, [r7, #12]
    pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8000448:	4b3a      	ldr	r3, [pc, #232]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 800044a:	685b      	ldr	r3, [r3, #4]
 800044c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000450:	60bb      	str	r3, [r7, #8]

    if (pllsource != 0)
 8000452:	68fb      	ldr	r3, [r7, #12]
 8000454:	2b00      	cmp	r3, #0
 8000456:	d00c      	beq.n	8000472 <RCC_GetClocksFreq+0x8a>
    {
      /* HSE used as PLL clock source */
      pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8000458:	4a38      	ldr	r2, [pc, #224]	; (800053c <RCC_GetClocksFreq+0x154>)
 800045a:	68bb      	ldr	r3, [r7, #8]
 800045c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000460:	4a34      	ldr	r2, [pc, #208]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 8000462:	6852      	ldr	r2, [r2, #4]
 8000464:	0992      	lsrs	r2, r2, #6
 8000466:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800046a:	fb02 f303 	mul.w	r3, r2, r3
 800046e:	61fb      	str	r3, [r7, #28]
 8000470:	e00b      	b.n	800048a <RCC_GetClocksFreq+0xa2>
    }
    else
    {
      /* HSI used as PLL clock source */
      pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8000472:	4a31      	ldr	r2, [pc, #196]	; (8000538 <RCC_GetClocksFreq+0x150>)
 8000474:	68bb      	ldr	r3, [r7, #8]
 8000476:	fbb2 f3f3 	udiv	r3, r2, r3
 800047a:	4a2e      	ldr	r2, [pc, #184]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 800047c:	6852      	ldr	r2, [r2, #4]
 800047e:	0992      	lsrs	r2, r2, #6
 8000480:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000484:	fb02 f303 	mul.w	r3, r2, r3
 8000488:	61fb      	str	r3, [r7, #28]
    }

    pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 800048a:	4b2a      	ldr	r3, [pc, #168]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 800048c:	685b      	ldr	r3, [r3, #4]
 800048e:	0c1b      	lsrs	r3, r3, #16
 8000490:	f003 0303 	and.w	r3, r3, #3
 8000494:	3301      	adds	r3, #1
 8000496:	005b      	lsls	r3, r3, #1
 8000498:	613b      	str	r3, [r7, #16]
    RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 800049a:	69fa      	ldr	r2, [r7, #28]
 800049c:	693b      	ldr	r3, [r7, #16]
 800049e:	fbb2 f2f3 	udiv	r2, r2, r3
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	601a      	str	r2, [r3, #0]
    break;
 80004a6:	e003      	b.n	80004b0 <RCC_GetClocksFreq+0xc8>
  default:
    RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	4a23      	ldr	r2, [pc, #140]	; (8000538 <RCC_GetClocksFreq+0x150>)
 80004ac:	601a      	str	r2, [r3, #0]
    break;
 80004ae:	bf00      	nop
  }
  /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/

  /* Get HCLK prescaler */
  tmp = RCC->CFGR & RCC_CFGR_HPRE;
 80004b0:	4b20      	ldr	r3, [pc, #128]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 80004b2:	689b      	ldr	r3, [r3, #8]
 80004b4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80004b8:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 4;
 80004ba:	69bb      	ldr	r3, [r7, #24]
 80004bc:	091b      	lsrs	r3, r3, #4
 80004be:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 80004c0:	4a1f      	ldr	r2, [pc, #124]	; (8000540 <RCC_GetClocksFreq+0x158>)
 80004c2:	69bb      	ldr	r3, [r7, #24]
 80004c4:	4413      	add	r3, r2
 80004c6:	781b      	ldrb	r3, [r3, #0]
 80004c8:	b2db      	uxtb	r3, r3
 80004ca:	617b      	str	r3, [r7, #20]
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681a      	ldr	r2, [r3, #0]
 80004d0:	697b      	ldr	r3, [r7, #20]
 80004d2:	40da      	lsrs	r2, r3
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	605a      	str	r2, [r3, #4]

  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 80004d8:	4b16      	ldr	r3, [pc, #88]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 80004da:	689b      	ldr	r3, [r3, #8]
 80004dc:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80004e0:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 10;
 80004e2:	69bb      	ldr	r3, [r7, #24]
 80004e4:	0a9b      	lsrs	r3, r3, #10
 80004e6:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 80004e8:	4a15      	ldr	r2, [pc, #84]	; (8000540 <RCC_GetClocksFreq+0x158>)
 80004ea:	69bb      	ldr	r3, [r7, #24]
 80004ec:	4413      	add	r3, r2
 80004ee:	781b      	ldrb	r3, [r3, #0]
 80004f0:	b2db      	uxtb	r3, r3
 80004f2:	617b      	str	r3, [r7, #20]
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	685a      	ldr	r2, [r3, #4]
 80004f8:	697b      	ldr	r3, [r7, #20]
 80004fa:	40da      	lsrs	r2, r3
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	609a      	str	r2, [r3, #8]

  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 8000500:	4b0c      	ldr	r3, [pc, #48]	; (8000534 <RCC_GetClocksFreq+0x14c>)
 8000502:	689b      	ldr	r3, [r3, #8]
 8000504:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000508:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 13;
 800050a:	69bb      	ldr	r3, [r7, #24]
 800050c:	0b5b      	lsrs	r3, r3, #13
 800050e:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8000510:	4a0b      	ldr	r2, [pc, #44]	; (8000540 <RCC_GetClocksFreq+0x158>)
 8000512:	69bb      	ldr	r3, [r7, #24]
 8000514:	4413      	add	r3, r2
 8000516:	781b      	ldrb	r3, [r3, #0]
 8000518:	b2db      	uxtb	r3, r3
 800051a:	617b      	str	r3, [r7, #20]
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	685a      	ldr	r2, [r3, #4]
 8000520:	697b      	ldr	r3, [r7, #20]
 8000522:	40da      	lsrs	r2, r3
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	60da      	str	r2, [r3, #12]
}
 8000528:	bf00      	nop
 800052a:	3724      	adds	r7, #36	; 0x24
 800052c:	46bd      	mov	sp, r7
 800052e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000532:	4770      	bx	lr
 8000534:	40023800 	.word	0x40023800
 8000538:	00f42400 	.word	0x00f42400
 800053c:	017d7840 	.word	0x017d7840
 8000540:	20000014 	.word	0x20000014

08000544 <RCC_AHB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
 800054c:	460b      	mov	r3, r1
 800054e:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));

  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 8000550:	78fb      	ldrb	r3, [r7, #3]
 8000552:	2b00      	cmp	r3, #0
 8000554:	d006      	beq.n	8000564 <RCC_AHB1PeriphClockCmd+0x20>
  {
    RCC->AHB1ENR |= RCC_AHB1Periph;
 8000556:	4b0a      	ldr	r3, [pc, #40]	; (8000580 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800055a:	4909      	ldr	r1, [pc, #36]	; (8000580 <RCC_AHB1PeriphClockCmd+0x3c>)
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	4313      	orrs	r3, r2
 8000560:	630b      	str	r3, [r1, #48]	; 0x30
  }
  else
  {
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
  }
}
 8000562:	e006      	b.n	8000572 <RCC_AHB1PeriphClockCmd+0x2e>
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
 8000564:	4b06      	ldr	r3, [pc, #24]	; (8000580 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000566:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	43db      	mvns	r3, r3
 800056c:	4904      	ldr	r1, [pc, #16]	; (8000580 <RCC_AHB1PeriphClockCmd+0x3c>)
 800056e:	4013      	ands	r3, r2
 8000570:	630b      	str	r3, [r1, #48]	; 0x30
}
 8000572:	bf00      	nop
 8000574:	370c      	adds	r7, #12
 8000576:	46bd      	mov	sp, r7
 8000578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop
 8000580:	40023800 	.word	0x40023800

08000584 <bufInit>:
bufInit(
    void *pBuffer,
    buffqueue_p pQueue,
	uint8_t sizeofElement,
	uint16_t numberOfElement
) {
 8000584:	b580      	push	{r7, lr}
 8000586:	b084      	sub	sp, #16
 8000588:	af00      	add	r7, sp, #0
 800058a:	60f8      	str	r0, [r7, #12]
 800058c:	60b9      	str	r1, [r7, #8]
 800058e:	4611      	mov	r1, r2
 8000590:	461a      	mov	r2, r3
 8000592:	460b      	mov	r3, r1
 8000594:	71fb      	strb	r3, [r7, #7]
 8000596:	4613      	mov	r3, r2
 8000598:	80bb      	strh	r3, [r7, #4]
    pQueue->wSize = numberOfElement;
 800059a:	68bb      	ldr	r3, [r7, #8]
 800059c:	88ba      	ldrh	r2, [r7, #4]
 800059e:	801a      	strh	r2, [r3, #0]
    pQueue->byItemSize = sizeofElement;
 80005a0:	68bb      	ldr	r3, [r7, #8]
 80005a2:	79fa      	ldrb	r2, [r7, #7]
 80005a4:	711a      	strb	r2, [r3, #4]
    pQueue->pData = (uint8_t *)pBuffer;
 80005a6:	68bb      	ldr	r3, [r7, #8]
 80005a8:	68fa      	ldr	r2, [r7, #12]
 80005aa:	60da      	str	r2, [r3, #12]
    bufFlush(pQueue);
 80005ac:	68b8      	ldr	r0, [r7, #8]
 80005ae:	f000 f836 	bl	800061e <bufFlush>
}
 80005b2:	bf00      	nop
 80005b4:	3710      	adds	r7, #16
 80005b6:	46bd      	mov	sp, r7
 80005b8:	bd80      	pop	{r7, pc}

080005ba <bufNumItems>:
 * @return The number of items in the ring buffer
 */
uint16_t
bufNumItems(
	buffqueue_p pQueue
) {
 80005ba:	b480      	push	{r7}
 80005bc:	b083      	sub	sp, #12
 80005be:	af00      	add	r7, sp, #0
 80005c0:	6078      	str	r0, [r7, #4]
    return pQueue->wCountEle;
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	885b      	ldrh	r3, [r3, #2]
}
 80005c6:	4618      	mov	r0, r3
 80005c8:	370c      	adds	r7, #12
 80005ca:	46bd      	mov	sp, r7
 80005cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d0:	4770      	bx	lr

080005d2 <bufIsFull>:
 * @return 1 if full; 0 otherwise
 */
uint8_t
bufIsFull(
    buffqueue_p pQueue
) {
 80005d2:	b480      	push	{r7}
 80005d4:	b083      	sub	sp, #12
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	6078      	str	r0, [r7, #4]
    return (pQueue->wCountEle >= pQueue->wSize);
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	885a      	ldrh	r2, [r3, #2]
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	881b      	ldrh	r3, [r3, #0]
 80005e2:	429a      	cmp	r2, r3
 80005e4:	bf2c      	ite	cs
 80005e6:	2301      	movcs	r3, #1
 80005e8:	2300      	movcc	r3, #0
 80005ea:	b2db      	uxtb	r3, r3
}
 80005ec:	4618      	mov	r0, r3
 80005ee:	370c      	adds	r7, #12
 80005f0:	46bd      	mov	sp, r7
 80005f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f6:	4770      	bx	lr

080005f8 <bufIsEmpty>:
 * @return 1 if empty; 0 otherwise
 */
uint8_t
bufIsEmpty(
    buffqueue_p pQueue
) {
 80005f8:	b480      	push	{r7}
 80005fa:	b083      	sub	sp, #12
 80005fc:	af00      	add	r7, sp, #0
 80005fe:	6078      	str	r0, [r7, #4]
    return (pQueue->wHeadIndex == pQueue->wTailIndex);
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	88da      	ldrh	r2, [r3, #6]
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	891b      	ldrh	r3, [r3, #8]
 8000608:	429a      	cmp	r2, r3
 800060a:	bf0c      	ite	eq
 800060c:	2301      	moveq	r3, #1
 800060e:	2300      	movne	r3, #0
 8000610:	b2db      	uxtb	r3, r3
}
 8000612:	4618      	mov	r0, r3
 8000614:	370c      	adds	r7, #12
 8000616:	46bd      	mov	sp, r7
 8000618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800061c:	4770      	bx	lr

0800061e <bufFlush>:
 * @retval None
 */
void
bufFlush(
    buffqueue_p pQueue
) {
 800061e:	b580      	push	{r7, lr}
 8000620:	b082      	sub	sp, #8
 8000622:	af00      	add	r7, sp, #0
 8000624:	6078      	str	r0, [r7, #4]
    pQueue->wHeadIndex = 0;
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	2200      	movs	r2, #0
 800062a:	80da      	strh	r2, [r3, #6]
    pQueue->wTailIndex = 0;
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	2200      	movs	r2, #0
 8000630:	811a      	strh	r2, [r3, #8]
    pQueue->wCountEle = 0;
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	2200      	movs	r2, #0
 8000636:	805a      	strh	r2, [r3, #2]
    
    memsetl(pQueue->pData, 0, pQueue->wSize);
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	68d8      	ldr	r0, [r3, #12]
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	881b      	ldrh	r3, [r3, #0]
 8000640:	461a      	mov	r2, r3
 8000642:	2100      	movs	r1, #0
 8000644:	f000 f899 	bl	800077a <memsetl>
}
 8000648:	bf00      	nop
 800064a:	3708      	adds	r7, #8
 800064c:	46bd      	mov	sp, r7
 800064e:	bd80      	pop	{r7, pc}

08000650 <bufEnDat>:
 */
uint8_t
bufEnDat(
    buffqueue_p pQueue,
	uint8_t *pReceiverData
) {
 8000650:	b580      	push	{r7, lr}
 8000652:	b084      	sub	sp, #16
 8000654:	af00      	add	r7, sp, #0
 8000656:	6078      	str	r0, [r7, #4]
 8000658:	6039      	str	r1, [r7, #0]
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800065a:	b672      	cpsid	i
}
 800065c:	bf00      	nop
	__disable_irq();
    
    /* Place data in buffer */
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 800065e:	2300      	movs	r3, #0
 8000660:	73fb      	strb	r3, [r7, #15]
 8000662:	e021      	b.n	80006a8 <bufEnDat+0x58>
        pQueue->pData[pQueue->wHeadIndex] = pReceiverData[i];
 8000664:	7bfb      	ldrb	r3, [r7, #15]
 8000666:	683a      	ldr	r2, [r7, #0]
 8000668:	441a      	add	r2, r3
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	68db      	ldr	r3, [r3, #12]
 800066e:	6879      	ldr	r1, [r7, #4]
 8000670:	88c9      	ldrh	r1, [r1, #6]
 8000672:	440b      	add	r3, r1
 8000674:	7812      	ldrb	r2, [r2, #0]
 8000676:	701a      	strb	r2, [r3, #0]
        pQueue->wHeadIndex = ((pQueue->wHeadIndex + 1)  & (pQueue->wSize - 1));
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	88db      	ldrh	r3, [r3, #6]
 800067c:	3301      	adds	r3, #1
 800067e:	b29b      	uxth	r3, r3
 8000680:	b21a      	sxth	r2, r3
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	881b      	ldrh	r3, [r3, #0]
 8000686:	3b01      	subs	r3, #1
 8000688:	b29b      	uxth	r3, r3
 800068a:	b21b      	sxth	r3, r3
 800068c:	4013      	ands	r3, r2
 800068e:	b21b      	sxth	r3, r3
 8000690:	b29a      	uxth	r2, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	80da      	strh	r2, [r3, #6]
        pQueue->wCountEle++;
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	885b      	ldrh	r3, [r3, #2]
 800069a:	3301      	adds	r3, #1
 800069c:	b29a      	uxth	r2, r3
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	805a      	strh	r2, [r3, #2]
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	3301      	adds	r3, #1
 80006a6:	73fb      	strb	r3, [r7, #15]
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	791b      	ldrb	r3, [r3, #4]
 80006ac:	7bfa      	ldrb	r2, [r7, #15]
 80006ae:	429a      	cmp	r2, r3
 80006b0:	d3d8      	bcc.n	8000664 <bufEnDat+0x14>
    }
    
    if (bufIsFull(pQueue)) {
 80006b2:	6878      	ldr	r0, [r7, #4]
 80006b4:	f7ff ff8d 	bl	80005d2 <bufIsFull>
 80006b8:	4603      	mov	r3, r0
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	d011      	beq.n	80006e2 <bufEnDat+0x92>
        /* Is going to overwrite the oldest byte */
        /* Increase tail index */
        pQueue->wTailIndex = (pQueue->wTailIndex + pQueue->byItemSize) & (pQueue->wSize - 1);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	891a      	ldrh	r2, [r3, #8]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	791b      	ldrb	r3, [r3, #4]
 80006c6:	b29b      	uxth	r3, r3
 80006c8:	4413      	add	r3, r2
 80006ca:	b29b      	uxth	r3, r3
 80006cc:	b21a      	sxth	r2, r3
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	881b      	ldrh	r3, [r3, #0]
 80006d2:	3b01      	subs	r3, #1
 80006d4:	b29b      	uxth	r3, r3
 80006d6:	b21b      	sxth	r3, r3
 80006d8:	4013      	ands	r3, r2
 80006da:	b21b      	sxth	r3, r3
 80006dc:	b29a      	uxth	r2, r3
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	811a      	strh	r2, [r3, #8]
  __ASM volatile ("cpsie i" : : : "memory");
 80006e2:	b662      	cpsie	i
}
 80006e4:	bf00      	nop
    }
    
    __enable_irq();
    return ERR_OK;
 80006e6:	2300      	movs	r3, #0
}
 80006e8:	4618      	mov	r0, r3
 80006ea:	3710      	adds	r7, #16
 80006ec:	46bd      	mov	sp, r7
 80006ee:	bd80      	pop	{r7, pc}

080006f0 <bufDeDat>:
 */
uint8_t
bufDeDat(
    buffqueue_p pQueue,
	uint8_t *pBuffer
) {
 80006f0:	b580      	push	{r7, lr}
 80006f2:	b084      	sub	sp, #16
 80006f4:	af00      	add	r7, sp, #0
 80006f6:	6078      	str	r0, [r7, #4]
 80006f8:	6039      	str	r1, [r7, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 80006fa:	b672      	cpsid	i
}
 80006fc:	bf00      	nop
	__disable_irq();
    
    if (bufIsEmpty(pQueue)) {
 80006fe:	6878      	ldr	r0, [r7, #4]
 8000700:	f7ff ff7a 	bl	80005f8 <bufIsEmpty>
 8000704:	4603      	mov	r3, r0
 8000706:	2b00      	cmp	r3, #0
 8000708:	d006      	beq.n	8000718 <bufDeDat+0x28>
        /* No items */
        pQueue->wCountEle = 0;
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	2200      	movs	r2, #0
 800070e:	805a      	strh	r2, [r3, #2]
  __ASM volatile ("cpsie i" : : : "memory");
 8000710:	b662      	cpsie	i
}
 8000712:	bf00      	nop
        __enable_irq();
        return ERR_BUF_EMPTY;
 8000714:	2302      	movs	r3, #2
 8000716:	e02c      	b.n	8000772 <bufDeDat+0x82>
    }
    
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 8000718:	2300      	movs	r3, #0
 800071a:	73fb      	strb	r3, [r7, #15]
 800071c:	e021      	b.n	8000762 <bufDeDat+0x72>
        pBuffer[i] = pQueue->pData[pQueue->wTailIndex];
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	68db      	ldr	r3, [r3, #12]
 8000722:	687a      	ldr	r2, [r7, #4]
 8000724:	8912      	ldrh	r2, [r2, #8]
 8000726:	441a      	add	r2, r3
 8000728:	7bfb      	ldrb	r3, [r7, #15]
 800072a:	6839      	ldr	r1, [r7, #0]
 800072c:	440b      	add	r3, r1
 800072e:	7812      	ldrb	r2, [r2, #0]
 8000730:	701a      	strb	r2, [r3, #0]
        pQueue->wTailIndex = ((pQueue->wTailIndex + 1) & (pQueue->wSize - 1));
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	891b      	ldrh	r3, [r3, #8]
 8000736:	3301      	adds	r3, #1
 8000738:	b29b      	uxth	r3, r3
 800073a:	b21a      	sxth	r2, r3
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	881b      	ldrh	r3, [r3, #0]
 8000740:	3b01      	subs	r3, #1
 8000742:	b29b      	uxth	r3, r3
 8000744:	b21b      	sxth	r3, r3
 8000746:	4013      	ands	r3, r2
 8000748:	b21b      	sxth	r3, r3
 800074a:	b29a      	uxth	r2, r3
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	811a      	strh	r2, [r3, #8]
        pQueue->wCountEle--;
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	885b      	ldrh	r3, [r3, #2]
 8000754:	3b01      	subs	r3, #1
 8000756:	b29a      	uxth	r2, r3
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	805a      	strh	r2, [r3, #2]
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 800075c:	7bfb      	ldrb	r3, [r7, #15]
 800075e:	3301      	adds	r3, #1
 8000760:	73fb      	strb	r3, [r7, #15]
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	791b      	ldrb	r3, [r3, #4]
 8000766:	7bfa      	ldrb	r2, [r7, #15]
 8000768:	429a      	cmp	r2, r3
 800076a:	d3d8      	bcc.n	800071e <bufDeDat+0x2e>
  __ASM volatile ("cpsie i" : : : "memory");
 800076c:	b662      	cpsie	i
}
 800076e:	bf00      	nop
    }
    
    __enable_irq();
    return ERR_OK;
 8000770:	2300      	movs	r3, #0
}
 8000772:	4618      	mov	r0, r3
 8000774:	3710      	adds	r7, #16
 8000776:	46bd      	mov	sp, r7
 8000778:	bd80      	pop	{r7, pc}

0800077a <memsetl>:
void
memsetl(
	uint8_t *dst,
	uint8_t value,
	uint16_t size
) {
 800077a:	b480      	push	{r7}
 800077c:	b083      	sub	sp, #12
 800077e:	af00      	add	r7, sp, #0
 8000780:	6078      	str	r0, [r7, #4]
 8000782:	460b      	mov	r3, r1
 8000784:	70fb      	strb	r3, [r7, #3]
 8000786:	4613      	mov	r3, r2
 8000788:	803b      	strh	r3, [r7, #0]
    while (size--) {
 800078a:	e004      	b.n	8000796 <memsetl+0x1c>
        *dst++ = value;
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	1c5a      	adds	r2, r3, #1
 8000790:	607a      	str	r2, [r7, #4]
 8000792:	78fa      	ldrb	r2, [r7, #3]
 8000794:	701a      	strb	r2, [r3, #0]
    while (size--) {
 8000796:	883b      	ldrh	r3, [r7, #0]
 8000798:	1e5a      	subs	r2, r3, #1
 800079a:	803a      	strh	r2, [r7, #0]
 800079c:	2b00      	cmp	r3, #0
 800079e:	d1f5      	bne.n	800078c <memsetl+0x12>
    }    
}
 80007a0:	bf00      	nop
 80007a2:	bf00      	nop
 80007a4:	370c      	adds	r7, #12
 80007a6:	46bd      	mov	sp, r7
 80007a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ac:	4770      	bx	lr
	...

080007b0 <main>:
/******************************************************************************/




int main(void_t) {
 80007b0:	b580      	push	{r7, lr}
 80007b2:	b084      	sub	sp, #16
 80007b4:	af02      	add	r7, sp, #8
    uint8_t status = 1;
 80007b6:	2301      	movs	r3, #1
 80007b8:	71fb      	strb	r3, [r7, #7]
    SystemCoreClockUpdate();
 80007ba:	f7ff fd41 	bl	8000240 <SystemCoreClockUpdate>
    TimerInit();
 80007be:	f000 fa5d 	bl	8000c7c <TimerInit>
    Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID);
 80007c2:	2100      	movs	r1, #0
 80007c4:	483a      	ldr	r0, [pc, #232]	; (80008b0 <main+0x100>)
 80007c6:	f000 fd8f 	bl	80012e8 <Ucglib4WireSWSPI_begin>
    ucg_ClearScreen(&ucg);
 80007ca:	4839      	ldr	r0, [pc, #228]	; (80008b0 <main+0x100>)
 80007cc:	f000 fdd3 	bl	8001376 <ucg_ClearScreen>
    ucg_SetFont(&ucg, ucg_font_courB12_tr);
 80007d0:	4938      	ldr	r1, [pc, #224]	; (80008b4 <main+0x104>)
 80007d2:	4837      	ldr	r0, [pc, #220]	; (80008b0 <main+0x100>)
 80007d4:	f001 fee8 	bl	80025a8 <ucg_SetFont>
    ucg_SetColor(&ucg, 0, 0, 255, 0);
 80007d8:	2300      	movs	r3, #0
 80007da:	9300      	str	r3, [sp, #0]
 80007dc:	23ff      	movs	r3, #255	; 0xff
 80007de:	2200      	movs	r2, #0
 80007e0:	2100      	movs	r1, #0
 80007e2:	4833      	ldr	r0, [pc, #204]	; (80008b0 <main+0x100>)
 80007e4:	f001 ffbf 	bl	8002766 <ucg_SetColor>
    ucg_SetColor(&ucg, 1, 0, 0, 0);
 80007e8:	2300      	movs	r3, #0
 80007ea:	9300      	str	r3, [sp, #0]
 80007ec:	2300      	movs	r3, #0
 80007ee:	2200      	movs	r2, #0
 80007f0:	2101      	movs	r1, #1
 80007f2:	482f      	ldr	r0, [pc, #188]	; (80008b0 <main+0x100>)
 80007f4:	f001 ffb7 	bl	8002766 <ucg_SetColor>
    ucg_SetRotate180(&ucg);
 80007f8:	482d      	ldr	r0, [pc, #180]	; (80008b0 <main+0x100>)
 80007fa:	f002 f8af 	bl	800295c <ucg_SetRotate180>
    ucg_DrawString (&ucg, 35, 18, 0, "I LOVE");
 80007fe:	4b2e      	ldr	r3, [pc, #184]	; (80008b8 <main+0x108>)
 8000800:	9300      	str	r3, [sp, #0]
 8000802:	2300      	movs	r3, #0
 8000804:	2212      	movs	r2, #18
 8000806:	2123      	movs	r1, #35	; 0x23
 8000808:	4829      	ldr	r0, [pc, #164]	; (80008b0 <main+0x100>)
 800080a:	f001 fe09 	bl	8002420 <ucg_DrawString>
    ucg_DrawString (&ucg, 25, 36, 0, "Thay HOA");
 800080e:	4b2b      	ldr	r3, [pc, #172]	; (80008bc <main+0x10c>)
 8000810:	9300      	str	r3, [sp, #0]
 8000812:	2300      	movs	r3, #0
 8000814:	2224      	movs	r2, #36	; 0x24
 8000816:	2119      	movs	r1, #25
 8000818:	4825      	ldr	r0, [pc, #148]	; (80008b0 <main+0x100>)
 800081a:	f001 fe01 	bl	8002420 <ucg_DrawString>
    ucg_DrawString(&ucg, 35, 52, 0, "Nhom 1");
 800081e:	4b28      	ldr	r3, [pc, #160]	; (80008c0 <main+0x110>)
 8000820:	9300      	str	r3, [sp, #0]
 8000822:	2300      	movs	r3, #0
 8000824:	2234      	movs	r2, #52	; 0x34
 8000826:	2123      	movs	r1, #35	; 0x23
 8000828:	4821      	ldr	r0, [pc, #132]	; (80008b0 <main+0x100>)
 800082a:	f001 fdf9 	bl	8002420 <ucg_DrawString>
    ucg_DrawString(&ucg, 50, 68, 0, "<3");
 800082e:	4b25      	ldr	r3, [pc, #148]	; (80008c4 <main+0x114>)
 8000830:	9300      	str	r3, [sp, #0]
 8000832:	2300      	movs	r3, #0
 8000834:	2244      	movs	r2, #68	; 0x44
 8000836:	2132      	movs	r1, #50	; 0x32
 8000838:	481d      	ldr	r0, [pc, #116]	; (80008b0 <main+0x100>)
 800083a:	f001 fdf1 	bl	8002420 <ucg_DrawString>
    LEDRED_init();
 800083e:	f000 f8c9 	bl	80009d4 <LEDRED_init>
    buzzer_Init();
 8000842:	f000 f85b 	bl	80008fc <buzzer_Init>
    button_Init();
 8000846:	f000 f877 	bl	8000938 <button_Init>
    while (1) {
        processTimerScheduler();
 800084a:	f000 faf7 	bl	8000e3c <processTimerScheduler>
        if (buttonReadStatus(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN) == BTN_PRESS) {
 800084e:	2120      	movs	r1, #32
 8000850:	481d      	ldr	r0, [pc, #116]	; (80008c8 <main+0x118>)
 8000852:	f000 f8a5 	bl	80009a0 <buttonReadStatus>
 8000856:	4603      	mov	r3, r0
 8000858:	2b00      	cmp	r3, #0
 800085a:	d104      	bne.n	8000866 <main+0xb6>
            delay();
 800085c:	f000 f838 	bl	80008d0 <delay>
            status++;
 8000860:	79fb      	ldrb	r3, [r7, #7]
 8000862:	3301      	adds	r3, #1
 8000864:	71fb      	strb	r3, [r7, #7]
        }
        if (status % 2 == 0) {
 8000866:	79fb      	ldrb	r3, [r7, #7]
 8000868:	f003 0301 	and.w	r3, r3, #1
 800086c:	b2db      	uxtb	r3, r3
 800086e:	2b00      	cmp	r3, #0
 8000870:	d10e      	bne.n	8000890 <main+0xe0>
            delay();
 8000872:	f000 f82d 	bl	80008d0 <delay>
            LEDREDControl_SetStatus(LEDRED_GPIO_PORT, LEDRED_GPIO_PIN, GPIO_PIN_SET);
 8000876:	2201      	movs	r2, #1
 8000878:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800087c:	4812      	ldr	r0, [pc, #72]	; (80008c8 <main+0x118>)
 800087e:	f000 f8c7 	bl	8000a10 <LEDREDControl_SetStatus>
            buzzerControlSetStatus(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, GPIO_PIN_SET);
 8000882:	2201      	movs	r2, #1
 8000884:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000888:	4810      	ldr	r0, [pc, #64]	; (80008cc <main+0x11c>)
 800088a:	f000 f86f 	bl	800096c <buzzerControlSetStatus>
 800088e:	e7dc      	b.n	800084a <main+0x9a>
        } else {
            delay();
 8000890:	f000 f81e 	bl	80008d0 <delay>
            LEDREDControl_SetStatus(LEDRED_GPIO_PORT, LEDRED_GPIO_PIN, GPIO_PIN_RESET);
 8000894:	2200      	movs	r2, #0
 8000896:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800089a:	480b      	ldr	r0, [pc, #44]	; (80008c8 <main+0x118>)
 800089c:	f000 f8b8 	bl	8000a10 <LEDREDControl_SetStatus>
            buzzerControlSetStatus(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, GPIO_PIN_RESET);
 80008a0:	2200      	movs	r2, #0
 80008a2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80008a6:	4809      	ldr	r0, [pc, #36]	; (80008cc <main+0x11c>)
 80008a8:	f000 f860 	bl	800096c <buzzerControlSetStatus>
        processTimerScheduler();
 80008ac:	e7cd      	b.n	800084a <main+0x9a>
 80008ae:	bf00      	nop
 80008b0:	20000044 	.word	0x20000044
 80008b4:	08003510 	.word	0x08003510
 80008b8:	08003400 	.word	0x08003400
 80008bc:	08003408 	.word	0x08003408
 80008c0:	08003414 	.word	0x08003414
 80008c4:	0800341c 	.word	0x0800341c
 80008c8:	40020400 	.word	0x40020400
 80008cc:	40020800 	.word	0x40020800

080008d0 <delay>:
 * @func   delay
 * @brief  use when you want to delay
 * @param  None
 * @retval None
 */
void_t delay(void_t) {
 80008d0:	b480      	push	{r7}
 80008d2:	b083      	sub	sp, #12
 80008d4:	af00      	add	r7, sp, #0
    for (uint32_t i = 0; i < 500000; i++);
 80008d6:	2300      	movs	r3, #0
 80008d8:	607b      	str	r3, [r7, #4]
 80008da:	e002      	b.n	80008e2 <delay+0x12>
 80008dc:	687b      	ldr	r3, [r7, #4]
 80008de:	3301      	adds	r3, #1
 80008e0:	607b      	str	r3, [r7, #4]
 80008e2:	687b      	ldr	r3, [r7, #4]
 80008e4:	4a04      	ldr	r2, [pc, #16]	; (80008f8 <delay+0x28>)
 80008e6:	4293      	cmp	r3, r2
 80008e8:	d9f8      	bls.n	80008dc <delay+0xc>
}
 80008ea:	bf00      	nop
 80008ec:	bf00      	nop
 80008ee:	370c      	adds	r7, #12
 80008f0:	46bd      	mov	sp, r7
 80008f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008f6:	4770      	bx	lr
 80008f8:	0007a11f 	.word	0x0007a11f

080008fc <buzzer_Init>:
 * @func   buzzer_Init
 * @brief  Initialize GPIO for buzzer
 * @param  None
 * @retval None
 */
static void_t buzzer_Init(void_t) {
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b082      	sub	sp, #8
 8000900:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStructure;

    RCC_AHB1PeriphClockCmd(BUZZERControl_SetClock, ENABLE);
 8000902:	2101      	movs	r1, #1
 8000904:	2004      	movs	r0, #4
 8000906:	f7ff fe1d 	bl	8000544 <RCC_AHB1PeriphClockCmd>


    GPIO_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 800090a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800090e:	603b      	str	r3, [r7, #0]


    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000910:	2301      	movs	r3, #1
 8000912:	713b      	strb	r3, [r7, #4]

    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000914:	2302      	movs	r3, #2
 8000916:	717b      	strb	r3, [r7, #5]

    GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000918:	2300      	movs	r3, #0
 800091a:	71bb      	strb	r3, [r7, #6]


    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 800091c:	2302      	movs	r3, #2
 800091e:	71fb      	strb	r3, [r7, #7]


    GPIO_Init(BUZZER_GPIO_PORT, &GPIO_InitStructure);
 8000920:	463b      	mov	r3, r7
 8000922:	4619      	mov	r1, r3
 8000924:	4803      	ldr	r0, [pc, #12]	; (8000934 <buzzer_Init+0x38>)
 8000926:	f000 f8b6 	bl	8000a96 <GPIO_Init>

}
 800092a:	bf00      	nop
 800092c:	3708      	adds	r7, #8
 800092e:	46bd      	mov	sp, r7
 8000930:	bd80      	pop	{r7, pc}
 8000932:	bf00      	nop
 8000934:	40020800 	.word	0x40020800

08000938 <button_Init>:
 * @func   button_Init
 * @brief  Initialize GPIO for button
 * @param  None
 * @retval None
 */
static void_t button_Init(void_t) {
 8000938:	b580      	push	{r7, lr}
 800093a:	b082      	sub	sp, #8
 800093c:	af00      	add	r7, sp, #0

    GPIO_InitTypeDef GPIO_InitStructure;



    RCC_AHB1PeriphClockCmd(BUTTONControl_SetClock, ENABLE);
 800093e:	2101      	movs	r1, #1
 8000940:	2002      	movs	r0, #2
 8000942:	f7ff fdff 	bl	8000544 <RCC_AHB1PeriphClockCmd>


    GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 8000946:	2320      	movs	r3, #32
 8000948:	603b      	str	r3, [r7, #0]


    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800094a:	2300      	movs	r3, #0
 800094c:	713b      	strb	r3, [r7, #4]


    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800094e:	2302      	movs	r3, #2
 8000950:	717b      	strb	r3, [r7, #5]


    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000952:	2301      	movs	r3, #1
 8000954:	71fb      	strb	r3, [r7, #7]


    GPIO_Init(BUTTON_GPIO_PORT, &GPIO_InitStructure);
 8000956:	463b      	mov	r3, r7
 8000958:	4619      	mov	r1, r3
 800095a:	4803      	ldr	r0, [pc, #12]	; (8000968 <button_Init+0x30>)
 800095c:	f000 f89b 	bl	8000a96 <GPIO_Init>
}
 8000960:	bf00      	nop
 8000962:	3708      	adds	r7, #8
 8000964:	46bd      	mov	sp, r7
 8000966:	bd80      	pop	{r7, pc}
 8000968:	40020400 	.word	0x40020400

0800096c <buzzerControlSetStatus>:
 * @brief  control status buzzer
 * @param  Port, pin
 * @retval None
 */
static void_t buzzerControlSetStatus(GPIO_TypeDef *pGPIOx, u16_t wGPIO_Pin,
        u8_t byStatus) {
 800096c:	b480      	push	{r7}
 800096e:	b083      	sub	sp, #12
 8000970:	af00      	add	r7, sp, #0
 8000972:	6078      	str	r0, [r7, #4]
 8000974:	460b      	mov	r3, r1
 8000976:	807b      	strh	r3, [r7, #2]
 8000978:	4613      	mov	r3, r2
 800097a:	707b      	strb	r3, [r7, #1]
    // SET bit in BSRR Registers

    if (byStatus == GPIO_PIN_SET) {
 800097c:	787b      	ldrb	r3, [r7, #1]
 800097e:	2b01      	cmp	r3, #1
 8000980:	d102      	bne.n	8000988 <buzzerControlSetStatus+0x1c>
        pGPIOx->BSRRL = wGPIO_Pin;
 8000982:	687b      	ldr	r3, [r7, #4]
 8000984:	887a      	ldrh	r2, [r7, #2]
 8000986:	831a      	strh	r2, [r3, #24]
    }
    if (byStatus == GPIO_PIN_RESET) {
 8000988:	787b      	ldrb	r3, [r7, #1]
 800098a:	2b00      	cmp	r3, #0
 800098c:	d102      	bne.n	8000994 <buzzerControlSetStatus+0x28>
        pGPIOx->BSRRH = wGPIO_Pin;
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	887a      	ldrh	r2, [r7, #2]
 8000992:	835a      	strh	r2, [r3, #26]
    }
}
 8000994:	bf00      	nop
 8000996:	370c      	adds	r7, #12
 8000998:	46bd      	mov	sp, r7
 800099a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800099e:	4770      	bx	lr

080009a0 <buttonReadStatus>:
 * @func   buttonReadStatus
 * @brief  Read status of button
 * @param  Port, Pin
 * @retval u8_t
 */
static u8_t buttonReadStatus(GPIO_TypeDef *pGPIOx, u16_t wGPIO_Pin) {
 80009a0:	b480      	push	{r7}
 80009a2:	b085      	sub	sp, #20
 80009a4:	af00      	add	r7, sp, #0
 80009a6:	6078      	str	r0, [r7, #4]
 80009a8:	460b      	mov	r3, r1
 80009aa:	807b      	strh	r3, [r7, #2]
    u8_t Read_Pin = Bit_RESET;
 80009ac:	2300      	movs	r3, #0
 80009ae:	73fb      	strb	r3, [r7, #15]

    if ((pGPIOx->IDR & wGPIO_Pin) != (u32_t) Bit_RESET) {
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	691a      	ldr	r2, [r3, #16]
 80009b4:	887b      	ldrh	r3, [r7, #2]
 80009b6:	4013      	ands	r3, r2
 80009b8:	2b00      	cmp	r3, #0
 80009ba:	d002      	beq.n	80009c2 <buttonReadStatus+0x22>
        Read_Pin = (u8_t) Bit_SET;
 80009bc:	2301      	movs	r3, #1
 80009be:	73fb      	strb	r3, [r7, #15]
 80009c0:	e001      	b.n	80009c6 <buttonReadStatus+0x26>
    } else {
        Read_Pin = (u8_t) Bit_RESET;
 80009c2:	2300      	movs	r3, #0
 80009c4:	73fb      	strb	r3, [r7, #15]
    }
    return Read_Pin;
 80009c6:	7bfb      	ldrb	r3, [r7, #15]
}
 80009c8:	4618      	mov	r0, r3
 80009ca:	3714      	adds	r7, #20
 80009cc:	46bd      	mov	sp, r7
 80009ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009d2:	4770      	bx	lr

080009d4 <LEDRED_init>:
 * @func   LEDRED_init
 * @brief  Initialize GPIO for LED RED
 * @param  None
 * @retval None
 */
static void_t LEDRED_init(void_t) {
 80009d4:	b580      	push	{r7, lr}
 80009d6:	b082      	sub	sp, #8
 80009d8:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStructure;
    RCC_AHB1PeriphClockCmd(LEDREDControl_SetClock, ENABLE);
 80009da:	2101      	movs	r1, #1
 80009dc:	2002      	movs	r0, #2
 80009de:	f7ff fdb1 	bl	8000544 <RCC_AHB1PeriphClockCmd>
    GPIO_InitStructure.GPIO_Pin = LEDRED_GPIO_PIN;
 80009e2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80009e6:	603b      	str	r3, [r7, #0]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80009e8:	2301      	movs	r3, #1
 80009ea:	713b      	strb	r3, [r7, #4]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80009ec:	2302      	movs	r3, #2
 80009ee:	717b      	strb	r3, [r7, #5]
    GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80009f0:	2300      	movs	r3, #0
 80009f2:	71bb      	strb	r3, [r7, #6]
    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80009f4:	2302      	movs	r3, #2
 80009f6:	71fb      	strb	r3, [r7, #7]
    GPIO_Init(LEDRED_GPIO_PORT, &GPIO_InitStructure);
 80009f8:	463b      	mov	r3, r7
 80009fa:	4619      	mov	r1, r3
 80009fc:	4803      	ldr	r0, [pc, #12]	; (8000a0c <LEDRED_init+0x38>)
 80009fe:	f000 f84a 	bl	8000a96 <GPIO_Init>
}
 8000a02:	bf00      	nop
 8000a04:	3708      	adds	r7, #8
 8000a06:	46bd      	mov	sp, r7
 8000a08:	bd80      	pop	{r7, pc}
 8000a0a:	bf00      	nop
 8000a0c:	40020400 	.word	0x40020400

08000a10 <LEDREDControl_SetStatus>:
 * @func   LEDREDControl_SetStatus
 * @brief  control status LED RED
 * @param  GPIOx, GPIO_PIN, Status
 * @retval None
 */
static void_t LEDREDControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN, uint8_t Status) {
 8000a10:	b480      	push	{r7}
 8000a12:	b083      	sub	sp, #12
 8000a14:	af00      	add	r7, sp, #0
 8000a16:	6078      	str	r0, [r7, #4]
 8000a18:	460b      	mov	r3, r1
 8000a1a:	807b      	strh	r3, [r7, #2]
 8000a1c:	4613      	mov	r3, r2
 8000a1e:	707b      	strb	r3, [r7, #1]
    if (Status == GPIO_PIN_SET) {
 8000a20:	787b      	ldrb	r3, [r7, #1]
 8000a22:	2b01      	cmp	r3, #1
 8000a24:	d102      	bne.n	8000a2c <LEDREDControl_SetStatus+0x1c>
        GPIOx->BSRRL = GPIO_PIN;
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	887a      	ldrh	r2, [r7, #2]
 8000a2a:	831a      	strh	r2, [r3, #24]
    }
    if (Status == GPIO_PIN_RESET) {
 8000a2c:	787b      	ldrb	r3, [r7, #1]
 8000a2e:	2b00      	cmp	r3, #0
 8000a30:	d102      	bne.n	8000a38 <LEDREDControl_SetStatus+0x28>
        GPIOx->BSRRH = GPIO_PIN;
 8000a32:	687b      	ldr	r3, [r7, #4]
 8000a34:	887a      	ldrh	r2, [r7, #2]
 8000a36:	835a      	strh	r2, [r3, #26]
    }
}
 8000a38:	bf00      	nop
 8000a3a:	370c      	adds	r7, #12
 8000a3c:	46bd      	mov	sp, r7
 8000a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a42:	4770      	bx	lr

08000a44 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000a44:	480d      	ldr	r0, [pc, #52]	; (8000a7c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000a46:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000a48:	f7ff fbc4 	bl	80001d4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a4c:	480c      	ldr	r0, [pc, #48]	; (8000a80 <LoopForever+0x6>)
  ldr r1, =_edata
 8000a4e:	490d      	ldr	r1, [pc, #52]	; (8000a84 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000a50:	4a0d      	ldr	r2, [pc, #52]	; (8000a88 <LoopForever+0xe>)
  movs r3, #0
 8000a52:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a54:	e002      	b.n	8000a5c <LoopCopyDataInit>

08000a56 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a56:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a58:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a5a:	3304      	adds	r3, #4

08000a5c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a5c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a5e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a60:	d3f9      	bcc.n	8000a56 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a62:	4a0a      	ldr	r2, [pc, #40]	; (8000a8c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000a64:	4c0a      	ldr	r4, [pc, #40]	; (8000a90 <LoopForever+0x16>)
  movs r3, #0
 8000a66:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a68:	e001      	b.n	8000a6e <LoopFillZerobss>

08000a6a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a6a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a6c:	3204      	adds	r2, #4

08000a6e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a6e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a70:	d3fb      	bcc.n	8000a6a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000a72:	f002 fc95 	bl	80033a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a76:	f7ff fe9b 	bl	80007b0 <main>

08000a7a <LoopForever>:

LoopForever:
  b LoopForever
 8000a7a:	e7fe      	b.n	8000a7a <LoopForever>
  ldr   r0, =_estack
 8000a7c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000a80:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a84:	20000028 	.word	0x20000028
  ldr r2, =_sidata
 8000a88:	08003b1c 	.word	0x08003b1c
  ldr r2, =_sbss
 8000a8c:	20000028 	.word	0x20000028
  ldr r4, =_ebss
 8000a90:	2000129c 	.word	0x2000129c

08000a94 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a94:	e7fe      	b.n	8000a94 <ADC_IRQHandler>

08000a96 <GPIO_Init>:
 8000a96:	b480      	push	{r7}
 8000a98:	b087      	sub	sp, #28
 8000a9a:	af00      	add	r7, sp, #0
 8000a9c:	6078      	str	r0, [r7, #4]
 8000a9e:	6039      	str	r1, [r7, #0]
 8000aa0:	2300      	movs	r3, #0
 8000aa2:	617b      	str	r3, [r7, #20]
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	613b      	str	r3, [r7, #16]
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	60fb      	str	r3, [r7, #12]
 8000aac:	2300      	movs	r3, #0
 8000aae:	617b      	str	r3, [r7, #20]
 8000ab0:	e076      	b.n	8000ba0 <GPIO_Init+0x10a>
 8000ab2:	2201      	movs	r2, #1
 8000ab4:	697b      	ldr	r3, [r7, #20]
 8000ab6:	fa02 f303 	lsl.w	r3, r2, r3
 8000aba:	613b      	str	r3, [r7, #16]
 8000abc:	683b      	ldr	r3, [r7, #0]
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	693a      	ldr	r2, [r7, #16]
 8000ac2:	4013      	ands	r3, r2
 8000ac4:	60fb      	str	r3, [r7, #12]
 8000ac6:	68fa      	ldr	r2, [r7, #12]
 8000ac8:	693b      	ldr	r3, [r7, #16]
 8000aca:	429a      	cmp	r2, r3
 8000acc:	d165      	bne.n	8000b9a <GPIO_Init+0x104>
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	681a      	ldr	r2, [r3, #0]
 8000ad2:	697b      	ldr	r3, [r7, #20]
 8000ad4:	005b      	lsls	r3, r3, #1
 8000ad6:	2103      	movs	r1, #3
 8000ad8:	fa01 f303 	lsl.w	r3, r1, r3
 8000adc:	43db      	mvns	r3, r3
 8000ade:	401a      	ands	r2, r3
 8000ae0:	687b      	ldr	r3, [r7, #4]
 8000ae2:	601a      	str	r2, [r3, #0]
 8000ae4:	687b      	ldr	r3, [r7, #4]
 8000ae6:	681a      	ldr	r2, [r3, #0]
 8000ae8:	683b      	ldr	r3, [r7, #0]
 8000aea:	791b      	ldrb	r3, [r3, #4]
 8000aec:	4619      	mov	r1, r3
 8000aee:	697b      	ldr	r3, [r7, #20]
 8000af0:	005b      	lsls	r3, r3, #1
 8000af2:	fa01 f303 	lsl.w	r3, r1, r3
 8000af6:	431a      	orrs	r2, r3
 8000af8:	687b      	ldr	r3, [r7, #4]
 8000afa:	601a      	str	r2, [r3, #0]
 8000afc:	683b      	ldr	r3, [r7, #0]
 8000afe:	791b      	ldrb	r3, [r3, #4]
 8000b00:	2b01      	cmp	r3, #1
 8000b02:	d003      	beq.n	8000b0c <GPIO_Init+0x76>
 8000b04:	683b      	ldr	r3, [r7, #0]
 8000b06:	791b      	ldrb	r3, [r3, #4]
 8000b08:	2b02      	cmp	r3, #2
 8000b0a:	d12e      	bne.n	8000b6a <GPIO_Init+0xd4>
 8000b0c:	687b      	ldr	r3, [r7, #4]
 8000b0e:	689a      	ldr	r2, [r3, #8]
 8000b10:	697b      	ldr	r3, [r7, #20]
 8000b12:	005b      	lsls	r3, r3, #1
 8000b14:	2103      	movs	r1, #3
 8000b16:	fa01 f303 	lsl.w	r3, r1, r3
 8000b1a:	43db      	mvns	r3, r3
 8000b1c:	401a      	ands	r2, r3
 8000b1e:	687b      	ldr	r3, [r7, #4]
 8000b20:	609a      	str	r2, [r3, #8]
 8000b22:	687b      	ldr	r3, [r7, #4]
 8000b24:	689a      	ldr	r2, [r3, #8]
 8000b26:	683b      	ldr	r3, [r7, #0]
 8000b28:	795b      	ldrb	r3, [r3, #5]
 8000b2a:	4619      	mov	r1, r3
 8000b2c:	697b      	ldr	r3, [r7, #20]
 8000b2e:	005b      	lsls	r3, r3, #1
 8000b30:	fa01 f303 	lsl.w	r3, r1, r3
 8000b34:	431a      	orrs	r2, r3
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	609a      	str	r2, [r3, #8]
 8000b3a:	687b      	ldr	r3, [r7, #4]
 8000b3c:	685a      	ldr	r2, [r3, #4]
 8000b3e:	697b      	ldr	r3, [r7, #20]
 8000b40:	b29b      	uxth	r3, r3
 8000b42:	4619      	mov	r1, r3
 8000b44:	2301      	movs	r3, #1
 8000b46:	408b      	lsls	r3, r1
 8000b48:	43db      	mvns	r3, r3
 8000b4a:	401a      	ands	r2, r3
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	605a      	str	r2, [r3, #4]
 8000b50:	687b      	ldr	r3, [r7, #4]
 8000b52:	685b      	ldr	r3, [r3, #4]
 8000b54:	683a      	ldr	r2, [r7, #0]
 8000b56:	7992      	ldrb	r2, [r2, #6]
 8000b58:	4611      	mov	r1, r2
 8000b5a:	697a      	ldr	r2, [r7, #20]
 8000b5c:	b292      	uxth	r2, r2
 8000b5e:	fa01 f202 	lsl.w	r2, r1, r2
 8000b62:	b292      	uxth	r2, r2
 8000b64:	431a      	orrs	r2, r3
 8000b66:	687b      	ldr	r3, [r7, #4]
 8000b68:	605a      	str	r2, [r3, #4]
 8000b6a:	687b      	ldr	r3, [r7, #4]
 8000b6c:	68da      	ldr	r2, [r3, #12]
 8000b6e:	697b      	ldr	r3, [r7, #20]
 8000b70:	b29b      	uxth	r3, r3
 8000b72:	005b      	lsls	r3, r3, #1
 8000b74:	2103      	movs	r1, #3
 8000b76:	fa01 f303 	lsl.w	r3, r1, r3
 8000b7a:	43db      	mvns	r3, r3
 8000b7c:	401a      	ands	r2, r3
 8000b7e:	687b      	ldr	r3, [r7, #4]
 8000b80:	60da      	str	r2, [r3, #12]
 8000b82:	687b      	ldr	r3, [r7, #4]
 8000b84:	68da      	ldr	r2, [r3, #12]
 8000b86:	683b      	ldr	r3, [r7, #0]
 8000b88:	79db      	ldrb	r3, [r3, #7]
 8000b8a:	4619      	mov	r1, r3
 8000b8c:	697b      	ldr	r3, [r7, #20]
 8000b8e:	005b      	lsls	r3, r3, #1
 8000b90:	fa01 f303 	lsl.w	r3, r1, r3
 8000b94:	431a      	orrs	r2, r3
 8000b96:	687b      	ldr	r3, [r7, #4]
 8000b98:	60da      	str	r2, [r3, #12]
 8000b9a:	697b      	ldr	r3, [r7, #20]
 8000b9c:	3301      	adds	r3, #1
 8000b9e:	617b      	str	r3, [r7, #20]
 8000ba0:	697b      	ldr	r3, [r7, #20]
 8000ba2:	2b0f      	cmp	r3, #15
 8000ba4:	d985      	bls.n	8000ab2 <GPIO_Init+0x1c>
 8000ba6:	bf00      	nop
 8000ba8:	371c      	adds	r7, #28
 8000baa:	46bd      	mov	sp, r7
 8000bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bb0:	4770      	bx	lr

08000bb2 <GPIO_WriteBit>:
 8000bb2:	b480      	push	{r7}
 8000bb4:	b083      	sub	sp, #12
 8000bb6:	af00      	add	r7, sp, #0
 8000bb8:	6078      	str	r0, [r7, #4]
 8000bba:	460b      	mov	r3, r1
 8000bbc:	807b      	strh	r3, [r7, #2]
 8000bbe:	4613      	mov	r3, r2
 8000bc0:	707b      	strb	r3, [r7, #1]
 8000bc2:	787b      	ldrb	r3, [r7, #1]
 8000bc4:	2b00      	cmp	r3, #0
 8000bc6:	d003      	beq.n	8000bd0 <GPIO_WriteBit+0x1e>
 8000bc8:	687b      	ldr	r3, [r7, #4]
 8000bca:	887a      	ldrh	r2, [r7, #2]
 8000bcc:	831a      	strh	r2, [r3, #24]
 8000bce:	e002      	b.n	8000bd6 <GPIO_WriteBit+0x24>
 8000bd0:	687b      	ldr	r3, [r7, #4]
 8000bd2:	887a      	ldrh	r2, [r7, #2]
 8000bd4:	835a      	strh	r2, [r3, #26]
 8000bd6:	bf00      	nop
 8000bd8:	370c      	adds	r7, #12
 8000bda:	46bd      	mov	sp, r7
 8000bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000be0:	4770      	bx	lr
	...

08000be4 <NVIC_SetPriority>:
 8000be4:	b480      	push	{r7}
 8000be6:	b083      	sub	sp, #12
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	4603      	mov	r3, r0
 8000bec:	6039      	str	r1, [r7, #0]
 8000bee:	71fb      	strb	r3, [r7, #7]
 8000bf0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	da0b      	bge.n	8000c10 <NVIC_SetPriority+0x2c>
 8000bf8:	683b      	ldr	r3, [r7, #0]
 8000bfa:	b2da      	uxtb	r2, r3
 8000bfc:	490c      	ldr	r1, [pc, #48]	; (8000c30 <NVIC_SetPriority+0x4c>)
 8000bfe:	79fb      	ldrb	r3, [r7, #7]
 8000c00:	f003 030f 	and.w	r3, r3, #15
 8000c04:	3b04      	subs	r3, #4
 8000c06:	0112      	lsls	r2, r2, #4
 8000c08:	b2d2      	uxtb	r2, r2
 8000c0a:	440b      	add	r3, r1
 8000c0c:	761a      	strb	r2, [r3, #24]
 8000c0e:	e009      	b.n	8000c24 <NVIC_SetPriority+0x40>
 8000c10:	683b      	ldr	r3, [r7, #0]
 8000c12:	b2da      	uxtb	r2, r3
 8000c14:	4907      	ldr	r1, [pc, #28]	; (8000c34 <NVIC_SetPriority+0x50>)
 8000c16:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c1a:	0112      	lsls	r2, r2, #4
 8000c1c:	b2d2      	uxtb	r2, r2
 8000c1e:	440b      	add	r3, r1
 8000c20:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000c24:	bf00      	nop
 8000c26:	370c      	adds	r7, #12
 8000c28:	46bd      	mov	sp, r7
 8000c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c2e:	4770      	bx	lr
 8000c30:	e000ed00 	.word	0xe000ed00
 8000c34:	e000e100 	.word	0xe000e100

08000c38 <SysTick_Config>:
 8000c38:	b580      	push	{r7, lr}
 8000c3a:	b082      	sub	sp, #8
 8000c3c:	af00      	add	r7, sp, #0
 8000c3e:	6078      	str	r0, [r7, #4]
 8000c40:	687b      	ldr	r3, [r7, #4]
 8000c42:	3b01      	subs	r3, #1
 8000c44:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000c48:	d301      	bcc.n	8000c4e <SysTick_Config+0x16>
 8000c4a:	2301      	movs	r3, #1
 8000c4c:	e00f      	b.n	8000c6e <SysTick_Config+0x36>
 8000c4e:	4a0a      	ldr	r2, [pc, #40]	; (8000c78 <SysTick_Config+0x40>)
 8000c50:	687b      	ldr	r3, [r7, #4]
 8000c52:	3b01      	subs	r3, #1
 8000c54:	6053      	str	r3, [r2, #4]
 8000c56:	210f      	movs	r1, #15
 8000c58:	f04f 30ff 	mov.w	r0, #4294967295
 8000c5c:	f7ff ffc2 	bl	8000be4 <NVIC_SetPriority>
 8000c60:	4b05      	ldr	r3, [pc, #20]	; (8000c78 <SysTick_Config+0x40>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	4b04      	ldr	r3, [pc, #16]	; (8000c78 <SysTick_Config+0x40>)
 8000c68:	2207      	movs	r2, #7
 8000c6a:	601a      	str	r2, [r3, #0]
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	4618      	mov	r0, r3
 8000c70:	3708      	adds	r7, #8
 8000c72:	46bd      	mov	sp, r7
 8000c74:	bd80      	pop	{r7, pc}
 8000c76:	bf00      	nop
 8000c78:	e000e010 	.word	0xe000e010

08000c7c <TimerInit>:
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	b084      	sub	sp, #16
 8000c80:	af00      	add	r7, sp, #0
 8000c82:	463b      	mov	r3, r7
 8000c84:	4618      	mov	r0, r3
 8000c86:	f7ff fbaf 	bl	80003e8 <RCC_GetClocksFreq>
 8000c8a:	683b      	ldr	r3, [r7, #0]
 8000c8c:	4a0a      	ldr	r2, [pc, #40]	; (8000cb8 <TimerInit+0x3c>)
 8000c8e:	fba2 2303 	umull	r2, r3, r2, r3
 8000c92:	099b      	lsrs	r3, r3, #6
 8000c94:	4618      	mov	r0, r3
 8000c96:	f7ff ffcf 	bl	8000c38 <SysTick_Config>
 8000c9a:	2101      	movs	r1, #1
 8000c9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000ca0:	f7ff ffa0 	bl	8000be4 <NVIC_SetPriority>
 8000ca4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000ca8:	2100      	movs	r1, #0
 8000caa:	4804      	ldr	r0, [pc, #16]	; (8000cbc <TimerInit+0x40>)
 8000cac:	f7ff fd65 	bl	800077a <memsetl>
 8000cb0:	bf00      	nop
 8000cb2:	3710      	adds	r7, #16
 8000cb4:	46bd      	mov	sp, r7
 8000cb6:	bd80      	pop	{r7, pc}
 8000cb8:	10624dd3 	.word	0x10624dd3
 8000cbc:	200000f8 	.word	0x200000f8

08000cc0 <TimerStart>:
 8000cc0:	b590      	push	{r4, r7, lr}
 8000cc2:	b087      	sub	sp, #28
 8000cc4:	af00      	add	r7, sp, #0
 8000cc6:	60f8      	str	r0, [r7, #12]
 8000cc8:	60b9      	str	r1, [r7, #8]
 8000cca:	603b      	str	r3, [r7, #0]
 8000ccc:	4613      	mov	r3, r2
 8000cce:	71fb      	strb	r3, [r7, #7]
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	75fb      	strb	r3, [r7, #23]
 8000cd4:	e04c      	b.n	8000d70 <TimerStart+0xb0>
 8000cd6:	7dfa      	ldrb	r2, [r7, #23]
 8000cd8:	4929      	ldr	r1, [pc, #164]	; (8000d80 <TimerStart+0xc0>)
 8000cda:	4613      	mov	r3, r2
 8000cdc:	005b      	lsls	r3, r3, #1
 8000cde:	4413      	add	r3, r2
 8000ce0:	00db      	lsls	r3, r3, #3
 8000ce2:	440b      	add	r3, r1
 8000ce4:	3310      	adds	r3, #16
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d13e      	bne.n	8000d6a <TimerStart+0xaa>
 8000cec:	7dfa      	ldrb	r2, [r7, #23]
 8000cee:	4924      	ldr	r1, [pc, #144]	; (8000d80 <TimerStart+0xc0>)
 8000cf0:	4613      	mov	r3, r2
 8000cf2:	005b      	lsls	r3, r3, #1
 8000cf4:	4413      	add	r3, r2
 8000cf6:	00db      	lsls	r3, r3, #3
 8000cf8:	440b      	add	r3, r1
 8000cfa:	68fa      	ldr	r2, [r7, #12]
 8000cfc:	601a      	str	r2, [r3, #0]
 8000cfe:	7dfa      	ldrb	r2, [r7, #23]
 8000d00:	491f      	ldr	r1, [pc, #124]	; (8000d80 <TimerStart+0xc0>)
 8000d02:	4613      	mov	r3, r2
 8000d04:	005b      	lsls	r3, r3, #1
 8000d06:	4413      	add	r3, r2
 8000d08:	00db      	lsls	r3, r3, #3
 8000d0a:	440b      	add	r3, r1
 8000d0c:	3310      	adds	r3, #16
 8000d0e:	683a      	ldr	r2, [r7, #0]
 8000d10:	601a      	str	r2, [r3, #0]
 8000d12:	7dfa      	ldrb	r2, [r7, #23]
 8000d14:	491a      	ldr	r1, [pc, #104]	; (8000d80 <TimerStart+0xc0>)
 8000d16:	4613      	mov	r3, r2
 8000d18:	005b      	lsls	r3, r3, #1
 8000d1a:	4413      	add	r3, r2
 8000d1c:	00db      	lsls	r3, r3, #3
 8000d1e:	440b      	add	r3, r1
 8000d20:	330c      	adds	r3, #12
 8000d22:	79fa      	ldrb	r2, [r7, #7]
 8000d24:	701a      	strb	r2, [r3, #0]
 8000d26:	7dfa      	ldrb	r2, [r7, #23]
 8000d28:	4915      	ldr	r1, [pc, #84]	; (8000d80 <TimerStart+0xc0>)
 8000d2a:	4613      	mov	r3, r2
 8000d2c:	005b      	lsls	r3, r3, #1
 8000d2e:	4413      	add	r3, r2
 8000d30:	00db      	lsls	r3, r3, #3
 8000d32:	440b      	add	r3, r1
 8000d34:	3314      	adds	r3, #20
 8000d36:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000d38:	601a      	str	r2, [r3, #0]
 8000d3a:	7dfc      	ldrb	r4, [r7, #23]
 8000d3c:	f000 f872 	bl	8000e24 <GetMilSecTick>
 8000d40:	4601      	mov	r1, r0
 8000d42:	4a0f      	ldr	r2, [pc, #60]	; (8000d80 <TimerStart+0xc0>)
 8000d44:	4623      	mov	r3, r4
 8000d46:	005b      	lsls	r3, r3, #1
 8000d48:	4423      	add	r3, r4
 8000d4a:	00db      	lsls	r3, r3, #3
 8000d4c:	4413      	add	r3, r2
 8000d4e:	3304      	adds	r3, #4
 8000d50:	6019      	str	r1, [r3, #0]
 8000d52:	7dfa      	ldrb	r2, [r7, #23]
 8000d54:	490a      	ldr	r1, [pc, #40]	; (8000d80 <TimerStart+0xc0>)
 8000d56:	4613      	mov	r3, r2
 8000d58:	005b      	lsls	r3, r3, #1
 8000d5a:	4413      	add	r3, r2
 8000d5c:	00db      	lsls	r3, r3, #3
 8000d5e:	440b      	add	r3, r1
 8000d60:	3308      	adds	r3, #8
 8000d62:	68ba      	ldr	r2, [r7, #8]
 8000d64:	601a      	str	r2, [r3, #0]
 8000d66:	7dfb      	ldrb	r3, [r7, #23]
 8000d68:	e006      	b.n	8000d78 <TimerStart+0xb8>
 8000d6a:	7dfb      	ldrb	r3, [r7, #23]
 8000d6c:	3301      	adds	r3, #1
 8000d6e:	75fb      	strb	r3, [r7, #23]
 8000d70:	7dfb      	ldrb	r3, [r7, #23]
 8000d72:	2b0f      	cmp	r3, #15
 8000d74:	d9af      	bls.n	8000cd6 <TimerStart+0x16>
 8000d76:	23ff      	movs	r3, #255	; 0xff
 8000d78:	4618      	mov	r0, r3
 8000d7a:	371c      	adds	r7, #28
 8000d7c:	46bd      	mov	sp, r7
 8000d7e:	bd90      	pop	{r4, r7, pc}
 8000d80:	200000f8 	.word	0x200000f8

08000d84 <TimerStop>:
 8000d84:	b480      	push	{r7}
 8000d86:	b083      	sub	sp, #12
 8000d88:	af00      	add	r7, sp, #0
 8000d8a:	4603      	mov	r3, r0
 8000d8c:	71fb      	strb	r3, [r7, #7]
 8000d8e:	79fb      	ldrb	r3, [r7, #7]
 8000d90:	2b0f      	cmp	r3, #15
 8000d92:	d80a      	bhi.n	8000daa <TimerStop+0x26>
 8000d94:	79fa      	ldrb	r2, [r7, #7]
 8000d96:	4922      	ldr	r1, [pc, #136]	; (8000e20 <TimerStop+0x9c>)
 8000d98:	4613      	mov	r3, r2
 8000d9a:	005b      	lsls	r3, r3, #1
 8000d9c:	4413      	add	r3, r2
 8000d9e:	00db      	lsls	r3, r3, #3
 8000da0:	440b      	add	r3, r1
 8000da2:	3310      	adds	r3, #16
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d101      	bne.n	8000dae <TimerStop+0x2a>
 8000daa:	2300      	movs	r3, #0
 8000dac:	e031      	b.n	8000e12 <TimerStop+0x8e>
 8000dae:	79fa      	ldrb	r2, [r7, #7]
 8000db0:	491b      	ldr	r1, [pc, #108]	; (8000e20 <TimerStop+0x9c>)
 8000db2:	4613      	mov	r3, r2
 8000db4:	005b      	lsls	r3, r3, #1
 8000db6:	4413      	add	r3, r2
 8000db8:	00db      	lsls	r3, r3, #3
 8000dba:	440b      	add	r3, r1
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	601a      	str	r2, [r3, #0]
 8000dc0:	79fa      	ldrb	r2, [r7, #7]
 8000dc2:	4917      	ldr	r1, [pc, #92]	; (8000e20 <TimerStop+0x9c>)
 8000dc4:	4613      	mov	r3, r2
 8000dc6:	005b      	lsls	r3, r3, #1
 8000dc8:	4413      	add	r3, r2
 8000dca:	00db      	lsls	r3, r3, #3
 8000dcc:	440b      	add	r3, r1
 8000dce:	3310      	adds	r3, #16
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	601a      	str	r2, [r3, #0]
 8000dd4:	79fa      	ldrb	r2, [r7, #7]
 8000dd6:	4912      	ldr	r1, [pc, #72]	; (8000e20 <TimerStop+0x9c>)
 8000dd8:	4613      	mov	r3, r2
 8000dda:	005b      	lsls	r3, r3, #1
 8000ddc:	4413      	add	r3, r2
 8000dde:	00db      	lsls	r3, r3, #3
 8000de0:	440b      	add	r3, r1
 8000de2:	330c      	adds	r3, #12
 8000de4:	2200      	movs	r2, #0
 8000de6:	701a      	strb	r2, [r3, #0]
 8000de8:	79fa      	ldrb	r2, [r7, #7]
 8000dea:	490d      	ldr	r1, [pc, #52]	; (8000e20 <TimerStop+0x9c>)
 8000dec:	4613      	mov	r3, r2
 8000dee:	005b      	lsls	r3, r3, #1
 8000df0:	4413      	add	r3, r2
 8000df2:	00db      	lsls	r3, r3, #3
 8000df4:	440b      	add	r3, r1
 8000df6:	3308      	adds	r3, #8
 8000df8:	2200      	movs	r2, #0
 8000dfa:	601a      	str	r2, [r3, #0]
 8000dfc:	79fa      	ldrb	r2, [r7, #7]
 8000dfe:	4908      	ldr	r1, [pc, #32]	; (8000e20 <TimerStop+0x9c>)
 8000e00:	4613      	mov	r3, r2
 8000e02:	005b      	lsls	r3, r3, #1
 8000e04:	4413      	add	r3, r2
 8000e06:	00db      	lsls	r3, r3, #3
 8000e08:	440b      	add	r3, r1
 8000e0a:	3304      	adds	r3, #4
 8000e0c:	2200      	movs	r2, #0
 8000e0e:	601a      	str	r2, [r3, #0]
 8000e10:	2301      	movs	r3, #1
 8000e12:	4618      	mov	r0, r3
 8000e14:	370c      	adds	r7, #12
 8000e16:	46bd      	mov	sp, r7
 8000e18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e1c:	4770      	bx	lr
 8000e1e:	bf00      	nop
 8000e20:	200000f8 	.word	0x200000f8

08000e24 <GetMilSecTick>:
 8000e24:	b480      	push	{r7}
 8000e26:	af00      	add	r7, sp, #0
 8000e28:	4b03      	ldr	r3, [pc, #12]	; (8000e38 <GetMilSecTick+0x14>)
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	4618      	mov	r0, r3
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e34:	4770      	bx	lr
 8000e36:	bf00      	nop
 8000e38:	20000278 	.word	0x20000278

08000e3c <processTimerScheduler>:
 8000e3c:	b580      	push	{r7, lr}
 8000e3e:	b084      	sub	sp, #16
 8000e40:	af00      	add	r7, sp, #0
 8000e42:	2300      	movs	r3, #0
 8000e44:	73fb      	strb	r3, [r7, #15]
 8000e46:	e068      	b.n	8000f1a <processTimerScheduler+0xde>
 8000e48:	7bfa      	ldrb	r2, [r7, #15]
 8000e4a:	4937      	ldr	r1, [pc, #220]	; (8000f28 <processTimerScheduler+0xec>)
 8000e4c:	4613      	mov	r3, r2
 8000e4e:	005b      	lsls	r3, r3, #1
 8000e50:	4413      	add	r3, r2
 8000e52:	00db      	lsls	r3, r3, #3
 8000e54:	440b      	add	r3, r1
 8000e56:	3310      	adds	r3, #16
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d05a      	beq.n	8000f14 <processTimerScheduler+0xd8>
 8000e5e:	7bfb      	ldrb	r3, [r7, #15]
 8000e60:	4618      	mov	r0, r3
 8000e62:	f000 f863 	bl	8000f2c <TimeExpired>
 8000e66:	4603      	mov	r3, r0
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d053      	beq.n	8000f14 <processTimerScheduler+0xd8>
 8000e6c:	7bfa      	ldrb	r2, [r7, #15]
 8000e6e:	492e      	ldr	r1, [pc, #184]	; (8000f28 <processTimerScheduler+0xec>)
 8000e70:	4613      	mov	r3, r2
 8000e72:	005b      	lsls	r3, r3, #1
 8000e74:	4413      	add	r3, r2
 8000e76:	00db      	lsls	r3, r3, #3
 8000e78:	440b      	add	r3, r1
 8000e7a:	3310      	adds	r3, #16
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	60bb      	str	r3, [r7, #8]
 8000e80:	7bfa      	ldrb	r2, [r7, #15]
 8000e82:	4929      	ldr	r1, [pc, #164]	; (8000f28 <processTimerScheduler+0xec>)
 8000e84:	4613      	mov	r3, r2
 8000e86:	005b      	lsls	r3, r3, #1
 8000e88:	4413      	add	r3, r2
 8000e8a:	00db      	lsls	r3, r3, #3
 8000e8c:	440b      	add	r3, r1
 8000e8e:	3314      	adds	r3, #20
 8000e90:	681b      	ldr	r3, [r3, #0]
 8000e92:	607b      	str	r3, [r7, #4]
 8000e94:	7bfa      	ldrb	r2, [r7, #15]
 8000e96:	4924      	ldr	r1, [pc, #144]	; (8000f28 <processTimerScheduler+0xec>)
 8000e98:	4613      	mov	r3, r2
 8000e9a:	005b      	lsls	r3, r3, #1
 8000e9c:	4413      	add	r3, r2
 8000e9e:	00db      	lsls	r3, r3, #3
 8000ea0:	440b      	add	r3, r1
 8000ea2:	330c      	adds	r3, #12
 8000ea4:	781b      	ldrb	r3, [r3, #0]
 8000ea6:	b2db      	uxtb	r3, r3
 8000ea8:	2bff      	cmp	r3, #255	; 0xff
 8000eaa:	d020      	beq.n	8000eee <processTimerScheduler+0xb2>
 8000eac:	7bfa      	ldrb	r2, [r7, #15]
 8000eae:	491e      	ldr	r1, [pc, #120]	; (8000f28 <processTimerScheduler+0xec>)
 8000eb0:	4613      	mov	r3, r2
 8000eb2:	005b      	lsls	r3, r3, #1
 8000eb4:	4413      	add	r3, r2
 8000eb6:	00db      	lsls	r3, r3, #3
 8000eb8:	440b      	add	r3, r1
 8000eba:	330c      	adds	r3, #12
 8000ebc:	781b      	ldrb	r3, [r3, #0]
 8000ebe:	b2db      	uxtb	r3, r3
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	d014      	beq.n	8000eee <processTimerScheduler+0xb2>
 8000ec4:	7bfa      	ldrb	r2, [r7, #15]
 8000ec6:	4918      	ldr	r1, [pc, #96]	; (8000f28 <processTimerScheduler+0xec>)
 8000ec8:	4613      	mov	r3, r2
 8000eca:	005b      	lsls	r3, r3, #1
 8000ecc:	4413      	add	r3, r2
 8000ece:	00db      	lsls	r3, r3, #3
 8000ed0:	440b      	add	r3, r1
 8000ed2:	330c      	adds	r3, #12
 8000ed4:	781b      	ldrb	r3, [r3, #0]
 8000ed6:	b2db      	uxtb	r3, r3
 8000ed8:	3b01      	subs	r3, #1
 8000eda:	b2d8      	uxtb	r0, r3
 8000edc:	4912      	ldr	r1, [pc, #72]	; (8000f28 <processTimerScheduler+0xec>)
 8000ede:	4613      	mov	r3, r2
 8000ee0:	005b      	lsls	r3, r3, #1
 8000ee2:	4413      	add	r3, r2
 8000ee4:	00db      	lsls	r3, r3, #3
 8000ee6:	440b      	add	r3, r1
 8000ee8:	330c      	adds	r3, #12
 8000eea:	4602      	mov	r2, r0
 8000eec:	701a      	strb	r2, [r3, #0]
 8000eee:	7bfa      	ldrb	r2, [r7, #15]
 8000ef0:	490d      	ldr	r1, [pc, #52]	; (8000f28 <processTimerScheduler+0xec>)
 8000ef2:	4613      	mov	r3, r2
 8000ef4:	005b      	lsls	r3, r3, #1
 8000ef6:	4413      	add	r3, r2
 8000ef8:	00db      	lsls	r3, r3, #3
 8000efa:	440b      	add	r3, r1
 8000efc:	330c      	adds	r3, #12
 8000efe:	781b      	ldrb	r3, [r3, #0]
 8000f00:	b2db      	uxtb	r3, r3
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d103      	bne.n	8000f0e <processTimerScheduler+0xd2>
 8000f06:	7bfb      	ldrb	r3, [r7, #15]
 8000f08:	4618      	mov	r0, r3
 8000f0a:	f7ff ff3b 	bl	8000d84 <TimerStop>
 8000f0e:	68bb      	ldr	r3, [r7, #8]
 8000f10:	6878      	ldr	r0, [r7, #4]
 8000f12:	4798      	blx	r3
 8000f14:	7bfb      	ldrb	r3, [r7, #15]
 8000f16:	3301      	adds	r3, #1
 8000f18:	73fb      	strb	r3, [r7, #15]
 8000f1a:	7bfb      	ldrb	r3, [r7, #15]
 8000f1c:	2b0f      	cmp	r3, #15
 8000f1e:	d993      	bls.n	8000e48 <processTimerScheduler+0xc>
 8000f20:	bf00      	nop
 8000f22:	3710      	adds	r7, #16
 8000f24:	46bd      	mov	sp, r7
 8000f26:	bd80      	pop	{r7, pc}
 8000f28:	200000f8 	.word	0x200000f8

08000f2c <TimeExpired>:
 8000f2c:	b580      	push	{r7, lr}
 8000f2e:	b084      	sub	sp, #16
 8000f30:	af00      	add	r7, sp, #0
 8000f32:	4603      	mov	r3, r0
 8000f34:	71fb      	strb	r3, [r7, #7]
 8000f36:	2300      	movs	r3, #0
 8000f38:	60fb      	str	r3, [r7, #12]
 8000f3a:	b672      	cpsid	i
 8000f3c:	f7ff ff72 	bl	8000e24 <GetMilSecTick>
 8000f40:	60b8      	str	r0, [r7, #8]
 8000f42:	79fb      	ldrb	r3, [r7, #7]
 8000f44:	2b0f      	cmp	r3, #15
 8000f46:	d80a      	bhi.n	8000f5e <TimeExpired+0x32>
 8000f48:	79fa      	ldrb	r2, [r7, #7]
 8000f4a:	492a      	ldr	r1, [pc, #168]	; (8000ff4 <TimeExpired+0xc8>)
 8000f4c:	4613      	mov	r3, r2
 8000f4e:	005b      	lsls	r3, r3, #1
 8000f50:	4413      	add	r3, r2
 8000f52:	00db      	lsls	r3, r3, #3
 8000f54:	440b      	add	r3, r1
 8000f56:	3310      	adds	r3, #16
 8000f58:	681b      	ldr	r3, [r3, #0]
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d102      	bne.n	8000f64 <TimeExpired+0x38>
 8000f5e:	b662      	cpsie	i
 8000f60:	2300      	movs	r3, #0
 8000f62:	e042      	b.n	8000fea <TimeExpired+0xbe>
 8000f64:	79fa      	ldrb	r2, [r7, #7]
 8000f66:	4923      	ldr	r1, [pc, #140]	; (8000ff4 <TimeExpired+0xc8>)
 8000f68:	4613      	mov	r3, r2
 8000f6a:	005b      	lsls	r3, r3, #1
 8000f6c:	4413      	add	r3, r2
 8000f6e:	00db      	lsls	r3, r3, #3
 8000f70:	440b      	add	r3, r1
 8000f72:	3304      	adds	r3, #4
 8000f74:	681b      	ldr	r3, [r3, #0]
 8000f76:	68ba      	ldr	r2, [r7, #8]
 8000f78:	429a      	cmp	r2, r3
 8000f7a:	d30c      	bcc.n	8000f96 <TimeExpired+0x6a>
 8000f7c:	79fa      	ldrb	r2, [r7, #7]
 8000f7e:	491d      	ldr	r1, [pc, #116]	; (8000ff4 <TimeExpired+0xc8>)
 8000f80:	4613      	mov	r3, r2
 8000f82:	005b      	lsls	r3, r3, #1
 8000f84:	4413      	add	r3, r2
 8000f86:	00db      	lsls	r3, r3, #3
 8000f88:	440b      	add	r3, r1
 8000f8a:	3304      	adds	r3, #4
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	68ba      	ldr	r2, [r7, #8]
 8000f90:	1ad3      	subs	r3, r2, r3
 8000f92:	60fb      	str	r3, [r7, #12]
 8000f94:	e00e      	b.n	8000fb4 <TimeExpired+0x88>
 8000f96:	79fa      	ldrb	r2, [r7, #7]
 8000f98:	4916      	ldr	r1, [pc, #88]	; (8000ff4 <TimeExpired+0xc8>)
 8000f9a:	4613      	mov	r3, r2
 8000f9c:	005b      	lsls	r3, r3, #1
 8000f9e:	4413      	add	r3, r2
 8000fa0:	00db      	lsls	r3, r3, #3
 8000fa2:	440b      	add	r3, r1
 8000fa4:	3304      	adds	r3, #4
 8000fa6:	681a      	ldr	r2, [r3, #0]
 8000fa8:	68bb      	ldr	r3, [r7, #8]
 8000faa:	1ad3      	subs	r3, r2, r3
 8000fac:	60fb      	str	r3, [r7, #12]
 8000fae:	68fb      	ldr	r3, [r7, #12]
 8000fb0:	43db      	mvns	r3, r3
 8000fb2:	60fb      	str	r3, [r7, #12]
 8000fb4:	79fa      	ldrb	r2, [r7, #7]
 8000fb6:	490f      	ldr	r1, [pc, #60]	; (8000ff4 <TimeExpired+0xc8>)
 8000fb8:	4613      	mov	r3, r2
 8000fba:	005b      	lsls	r3, r3, #1
 8000fbc:	4413      	add	r3, r2
 8000fbe:	00db      	lsls	r3, r3, #3
 8000fc0:	440b      	add	r3, r1
 8000fc2:	3308      	adds	r3, #8
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	68fa      	ldr	r2, [r7, #12]
 8000fc8:	429a      	cmp	r2, r3
 8000fca:	d202      	bcs.n	8000fd2 <TimeExpired+0xa6>
 8000fcc:	b662      	cpsie	i
 8000fce:	2300      	movs	r3, #0
 8000fd0:	e00b      	b.n	8000fea <TimeExpired+0xbe>
 8000fd2:	79fa      	ldrb	r2, [r7, #7]
 8000fd4:	4907      	ldr	r1, [pc, #28]	; (8000ff4 <TimeExpired+0xc8>)
 8000fd6:	4613      	mov	r3, r2
 8000fd8:	005b      	lsls	r3, r3, #1
 8000fda:	4413      	add	r3, r2
 8000fdc:	00db      	lsls	r3, r3, #3
 8000fde:	440b      	add	r3, r1
 8000fe0:	3304      	adds	r3, #4
 8000fe2:	68ba      	ldr	r2, [r7, #8]
 8000fe4:	601a      	str	r2, [r3, #0]
 8000fe6:	b662      	cpsie	i
 8000fe8:	2301      	movs	r3, #1
 8000fea:	4618      	mov	r0, r3
 8000fec:	3710      	adds	r7, #16
 8000fee:	46bd      	mov	sp, r7
 8000ff0:	bd80      	pop	{r7, pc}
 8000ff2:	bf00      	nop
 8000ff4:	200000f8 	.word	0x200000f8

08000ff8 <SysTick_Handler>:
 8000ff8:	b480      	push	{r7}
 8000ffa:	af00      	add	r7, sp, #0
 8000ffc:	4b04      	ldr	r3, [pc, #16]	; (8001010 <SysTick_Handler+0x18>)
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	3301      	adds	r3, #1
 8001002:	4a03      	ldr	r2, [pc, #12]	; (8001010 <SysTick_Handler+0x18>)
 8001004:	6013      	str	r3, [r2, #0]
 8001006:	bf00      	nop
 8001008:	46bd      	mov	sp, r7
 800100a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800100e:	4770      	bx	lr
 8001010:	20000278 	.word	0x20000278

08001014 <delayMicroseconds>:
 8001014:	b480      	push	{r7}
 8001016:	b083      	sub	sp, #12
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
 800101c:	bf00      	nop
 800101e:	370c      	adds	r7, #12
 8001020:	46bd      	mov	sp, r7
 8001022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001026:	4770      	bx	lr

08001028 <ucg_gpio_init>:
 8001028:	b580      	push	{r7, lr}
 800102a:	b082      	sub	sp, #8
 800102c:	af00      	add	r7, sp, #0
 800102e:	2101      	movs	r1, #1
 8001030:	2007      	movs	r0, #7
 8001032:	f7ff fa87 	bl	8000544 <RCC_AHB1PeriphClockCmd>
 8001036:	2301      	movs	r3, #1
 8001038:	713b      	strb	r3, [r7, #4]
 800103a:	2303      	movs	r3, #3
 800103c:	717b      	strb	r3, [r7, #5]
 800103e:	2300      	movs	r3, #0
 8001040:	71bb      	strb	r3, [r7, #6]
 8001042:	2300      	movs	r3, #0
 8001044:	71fb      	strb	r3, [r7, #7]
 8001046:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 800104a:	603b      	str	r3, [r7, #0]
 800104c:	463b      	mov	r3, r7
 800104e:	4619      	mov	r1, r3
 8001050:	480a      	ldr	r0, [pc, #40]	; (800107c <ucg_gpio_init+0x54>)
 8001052:	f7ff fd20 	bl	8000a96 <GPIO_Init>
 8001056:	f44f 6388 	mov.w	r3, #1088	; 0x440
 800105a:	603b      	str	r3, [r7, #0]
 800105c:	463b      	mov	r3, r7
 800105e:	4619      	mov	r1, r3
 8001060:	4807      	ldr	r0, [pc, #28]	; (8001080 <ucg_gpio_init+0x58>)
 8001062:	f7ff fd18 	bl	8000a96 <GPIO_Init>
 8001066:	2380      	movs	r3, #128	; 0x80
 8001068:	603b      	str	r3, [r7, #0]
 800106a:	463b      	mov	r3, r7
 800106c:	4619      	mov	r1, r3
 800106e:	4805      	ldr	r0, [pc, #20]	; (8001084 <ucg_gpio_init+0x5c>)
 8001070:	f7ff fd11 	bl	8000a96 <GPIO_Init>
 8001074:	bf00      	nop
 8001076:	3708      	adds	r7, #8
 8001078:	46bd      	mov	sp, r7
 800107a:	bd80      	pop	{r7, pc}
 800107c:	40020000 	.word	0x40020000
 8001080:	40020400 	.word	0x40020400
 8001084:	40020800 	.word	0x40020800

08001088 <ucg_com_arduino_send_generic_SW_SPI>:
 8001088:	b580      	push	{r7, lr}
 800108a:	b084      	sub	sp, #16
 800108c:	af00      	add	r7, sp, #0
 800108e:	6078      	str	r0, [r7, #4]
 8001090:	460b      	mov	r3, r1
 8001092:	70fb      	strb	r3, [r7, #3]
 8001094:	2308      	movs	r3, #8
 8001096:	73fb      	strb	r3, [r7, #15]
 8001098:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800109c:	2b00      	cmp	r3, #0
 800109e:	da05      	bge.n	80010ac <ucg_com_arduino_send_generic_SW_SPI+0x24>
 80010a0:	2201      	movs	r2, #1
 80010a2:	2180      	movs	r1, #128	; 0x80
 80010a4:	4814      	ldr	r0, [pc, #80]	; (80010f8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80010a6:	f7ff fd84 	bl	8000bb2 <GPIO_WriteBit>
 80010aa:	e004      	b.n	80010b6 <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 80010ac:	2200      	movs	r2, #0
 80010ae:	2180      	movs	r1, #128	; 0x80
 80010b0:	4811      	ldr	r0, [pc, #68]	; (80010f8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80010b2:	f7ff fd7e 	bl	8000bb2 <GPIO_WriteBit>
 80010b6:	2001      	movs	r0, #1
 80010b8:	f7ff ffac 	bl	8001014 <delayMicroseconds>
 80010bc:	2201      	movs	r2, #1
 80010be:	2120      	movs	r1, #32
 80010c0:	480d      	ldr	r0, [pc, #52]	; (80010f8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80010c2:	f7ff fd76 	bl	8000bb2 <GPIO_WriteBit>
 80010c6:	2001      	movs	r0, #1
 80010c8:	f7ff ffa4 	bl	8001014 <delayMicroseconds>
 80010cc:	7bfb      	ldrb	r3, [r7, #15]
 80010ce:	3b01      	subs	r3, #1
 80010d0:	73fb      	strb	r3, [r7, #15]
 80010d2:	2200      	movs	r2, #0
 80010d4:	2120      	movs	r1, #32
 80010d6:	4808      	ldr	r0, [pc, #32]	; (80010f8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80010d8:	f7ff fd6b 	bl	8000bb2 <GPIO_WriteBit>
 80010dc:	2001      	movs	r0, #1
 80010de:	f7ff ff99 	bl	8001014 <delayMicroseconds>
 80010e2:	78fb      	ldrb	r3, [r7, #3]
 80010e4:	005b      	lsls	r3, r3, #1
 80010e6:	70fb      	strb	r3, [r7, #3]
 80010e8:	7bfb      	ldrb	r3, [r7, #15]
 80010ea:	2b00      	cmp	r3, #0
 80010ec:	d1d4      	bne.n	8001098 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 80010ee:	bf00      	nop
 80010f0:	3710      	adds	r7, #16
 80010f2:	46bd      	mov	sp, r7
 80010f4:	bd80      	pop	{r7, pc}
 80010f6:	bf00      	nop
 80010f8:	40020000 	.word	0x40020000

080010fc <ucg_com_arduino_generic_SW_SPI>:
 80010fc:	b580      	push	{r7, lr}
 80010fe:	b084      	sub	sp, #16
 8001100:	af00      	add	r7, sp, #0
 8001102:	60f8      	str	r0, [r7, #12]
 8001104:	607b      	str	r3, [r7, #4]
 8001106:	460b      	mov	r3, r1
 8001108:	817b      	strh	r3, [r7, #10]
 800110a:	4613      	mov	r3, r2
 800110c:	813b      	strh	r3, [r7, #8]
 800110e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001112:	3b0a      	subs	r3, #10
 8001114:	2b0b      	cmp	r3, #11
 8001116:	f200 80dc 	bhi.w	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800111a:	a201      	add	r2, pc, #4	; (adr r2, 8001120 <ucg_com_arduino_generic_SW_SPI+0x24>)
 800111c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001120:	08001151 	.word	0x08001151
 8001124:	080012d3 	.word	0x080012d3
 8001128:	080011a3 	.word	0x080011a3
 800112c:	080011ad 	.word	0x080011ad
 8001130:	080011bd 	.word	0x080011bd
 8001134:	080011cd 	.word	0x080011cd
 8001138:	080011df 	.word	0x080011df
 800113c:	080011ff 	.word	0x080011ff
 8001140:	08001227 	.word	0x08001227
 8001144:	0800125d 	.word	0x0800125d
 8001148:	0800127b 	.word	0x0800127b
 800114c:	080012cb 	.word	0x080012cb
 8001150:	f7ff ff6a 	bl	8001028 <ucg_gpio_init>
 8001154:	2201      	movs	r2, #1
 8001156:	2180      	movs	r1, #128	; 0x80
 8001158:	4860      	ldr	r0, [pc, #384]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800115a:	f7ff fd2a 	bl	8000bb2 <GPIO_WriteBit>
 800115e:	2201      	movs	r2, #1
 8001160:	2140      	movs	r1, #64	; 0x40
 8001162:	485f      	ldr	r0, [pc, #380]	; (80012e0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001164:	f7ff fd25 	bl	8000bb2 <GPIO_WriteBit>
 8001168:	2201      	movs	r2, #1
 800116a:	2180      	movs	r1, #128	; 0x80
 800116c:	485d      	ldr	r0, [pc, #372]	; (80012e4 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 800116e:	f7ff fd20 	bl	8000bb2 <GPIO_WriteBit>
 8001172:	2201      	movs	r2, #1
 8001174:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001178:	4858      	ldr	r0, [pc, #352]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800117a:	f7ff fd1a 	bl	8000bb2 <GPIO_WriteBit>
 800117e:	2200      	movs	r2, #0
 8001180:	2120      	movs	r1, #32
 8001182:	4856      	ldr	r0, [pc, #344]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001184:	f7ff fd15 	bl	8000bb2 <GPIO_WriteBit>
 8001188:	2201      	movs	r2, #1
 800118a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800118e:	4854      	ldr	r0, [pc, #336]	; (80012e0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001190:	f7ff fd0f 	bl	8000bb2 <GPIO_WriteBit>
 8001194:	2201      	movs	r2, #1
 8001196:	f44f 7180 	mov.w	r1, #256	; 0x100
 800119a:	4850      	ldr	r0, [pc, #320]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800119c:	f7ff fd09 	bl	8000bb2 <GPIO_WriteBit>
 80011a0:	e097      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80011a2:	893b      	ldrh	r3, [r7, #8]
 80011a4:	4618      	mov	r0, r3
 80011a6:	f7ff ff35 	bl	8001014 <delayMicroseconds>
 80011aa:	e092      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80011ac:	893b      	ldrh	r3, [r7, #8]
 80011ae:	b2db      	uxtb	r3, r3
 80011b0:	461a      	mov	r2, r3
 80011b2:	2180      	movs	r1, #128	; 0x80
 80011b4:	484b      	ldr	r0, [pc, #300]	; (80012e4 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 80011b6:	f7ff fcfc 	bl	8000bb2 <GPIO_WriteBit>
 80011ba:	e08a      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80011bc:	893b      	ldrh	r3, [r7, #8]
 80011be:	b2db      	uxtb	r3, r3
 80011c0:	461a      	mov	r2, r3
 80011c2:	2140      	movs	r1, #64	; 0x40
 80011c4:	4846      	ldr	r0, [pc, #280]	; (80012e0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80011c6:	f7ff fcf4 	bl	8000bb2 <GPIO_WriteBit>
 80011ca:	e082      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80011cc:	893b      	ldrh	r3, [r7, #8]
 80011ce:	b2db      	uxtb	r3, r3
 80011d0:	461a      	mov	r2, r3
 80011d2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80011d6:	4841      	ldr	r0, [pc, #260]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80011d8:	f7ff fceb 	bl	8000bb2 <GPIO_WriteBit>
 80011dc:	e079      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80011de:	893b      	ldrh	r3, [r7, #8]
 80011e0:	b2db      	uxtb	r3, r3
 80011e2:	4619      	mov	r1, r3
 80011e4:	68f8      	ldr	r0, [r7, #12]
 80011e6:	f7ff ff4f 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 80011ea:	e072      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80011ec:	687b      	ldr	r3, [r7, #4]
 80011ee:	781b      	ldrb	r3, [r3, #0]
 80011f0:	4619      	mov	r1, r3
 80011f2:	68f8      	ldr	r0, [r7, #12]
 80011f4:	f7ff ff48 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 80011f8:	893b      	ldrh	r3, [r7, #8]
 80011fa:	3b01      	subs	r3, #1
 80011fc:	813b      	strh	r3, [r7, #8]
 80011fe:	893b      	ldrh	r3, [r7, #8]
 8001200:	2b00      	cmp	r3, #0
 8001202:	d1f3      	bne.n	80011ec <ucg_com_arduino_generic_SW_SPI+0xf0>
 8001204:	e065      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001206:	687b      	ldr	r3, [r7, #4]
 8001208:	781b      	ldrb	r3, [r3, #0]
 800120a:	4619      	mov	r1, r3
 800120c:	68f8      	ldr	r0, [r7, #12]
 800120e:	f7ff ff3b 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	3301      	adds	r3, #1
 8001216:	781b      	ldrb	r3, [r3, #0]
 8001218:	4619      	mov	r1, r3
 800121a:	68f8      	ldr	r0, [r7, #12]
 800121c:	f7ff ff34 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 8001220:	893b      	ldrh	r3, [r7, #8]
 8001222:	3b01      	subs	r3, #1
 8001224:	813b      	strh	r3, [r7, #8]
 8001226:	893b      	ldrh	r3, [r7, #8]
 8001228:	2b00      	cmp	r3, #0
 800122a:	d1ec      	bne.n	8001206 <ucg_com_arduino_generic_SW_SPI+0x10a>
 800122c:	e051      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	781b      	ldrb	r3, [r3, #0]
 8001232:	4619      	mov	r1, r3
 8001234:	68f8      	ldr	r0, [r7, #12]
 8001236:	f7ff ff27 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 800123a:	687b      	ldr	r3, [r7, #4]
 800123c:	3301      	adds	r3, #1
 800123e:	781b      	ldrb	r3, [r3, #0]
 8001240:	4619      	mov	r1, r3
 8001242:	68f8      	ldr	r0, [r7, #12]
 8001244:	f7ff ff20 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	3302      	adds	r3, #2
 800124c:	781b      	ldrb	r3, [r3, #0]
 800124e:	4619      	mov	r1, r3
 8001250:	68f8      	ldr	r0, [r7, #12]
 8001252:	f7ff ff19 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 8001256:	893b      	ldrh	r3, [r7, #8]
 8001258:	3b01      	subs	r3, #1
 800125a:	813b      	strh	r3, [r7, #8]
 800125c:	893b      	ldrh	r3, [r7, #8]
 800125e:	2b00      	cmp	r3, #0
 8001260:	d1e5      	bne.n	800122e <ucg_com_arduino_generic_SW_SPI+0x132>
 8001262:	e036      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	1c5a      	adds	r2, r3, #1
 8001268:	607a      	str	r2, [r7, #4]
 800126a:	781b      	ldrb	r3, [r3, #0]
 800126c:	4619      	mov	r1, r3
 800126e:	68f8      	ldr	r0, [r7, #12]
 8001270:	f7ff ff0a 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 8001274:	893b      	ldrh	r3, [r7, #8]
 8001276:	3b01      	subs	r3, #1
 8001278:	813b      	strh	r3, [r7, #8]
 800127a:	893b      	ldrh	r3, [r7, #8]
 800127c:	2b00      	cmp	r3, #0
 800127e:	d1f1      	bne.n	8001264 <ucg_com_arduino_generic_SW_SPI+0x168>
 8001280:	e027      	b.n	80012d2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	781b      	ldrb	r3, [r3, #0]
 8001286:	2b00      	cmp	r3, #0
 8001288:	d010      	beq.n	80012ac <ucg_com_arduino_generic_SW_SPI+0x1b0>
 800128a:	687b      	ldr	r3, [r7, #4]
 800128c:	781b      	ldrb	r3, [r3, #0]
 800128e:	2b01      	cmp	r3, #1
 8001290:	d106      	bne.n	80012a0 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8001292:	2200      	movs	r2, #0
 8001294:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001298:	4810      	ldr	r0, [pc, #64]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800129a:	f7ff fc8a 	bl	8000bb2 <GPIO_WriteBit>
 800129e:	e005      	b.n	80012ac <ucg_com_arduino_generic_SW_SPI+0x1b0>
 80012a0:	2201      	movs	r2, #1
 80012a2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80012a6:	480d      	ldr	r0, [pc, #52]	; (80012dc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80012a8:	f7ff fc83 	bl	8000bb2 <GPIO_WriteBit>
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	3301      	adds	r3, #1
 80012b0:	607b      	str	r3, [r7, #4]
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	781b      	ldrb	r3, [r3, #0]
 80012b6:	4619      	mov	r1, r3
 80012b8:	68f8      	ldr	r0, [r7, #12]
 80012ba:	f7ff fee5 	bl	8001088 <ucg_com_arduino_send_generic_SW_SPI>
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	3301      	adds	r3, #1
 80012c2:	607b      	str	r3, [r7, #4]
 80012c4:	893b      	ldrh	r3, [r7, #8]
 80012c6:	3b01      	subs	r3, #1
 80012c8:	813b      	strh	r3, [r7, #8]
 80012ca:	893b      	ldrh	r3, [r7, #8]
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d1d8      	bne.n	8001282 <ucg_com_arduino_generic_SW_SPI+0x186>
 80012d0:	bf00      	nop
 80012d2:	2301      	movs	r3, #1
 80012d4:	4618      	mov	r0, r3
 80012d6:	3710      	adds	r7, #16
 80012d8:	46bd      	mov	sp, r7
 80012da:	bd80      	pop	{r7, pc}
 80012dc:	40020000 	.word	0x40020000
 80012e0:	40020400 	.word	0x40020400
 80012e4:	40020800 	.word	0x40020800

080012e8 <Ucglib4WireSWSPI_begin>:
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b082      	sub	sp, #8
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]
 80012f0:	460b      	mov	r3, r1
 80012f2:	70fb      	strb	r3, [r7, #3]
 80012f4:	4b07      	ldr	r3, [pc, #28]	; (8001314 <Ucglib4WireSWSPI_begin+0x2c>)
 80012f6:	4a08      	ldr	r2, [pc, #32]	; (8001318 <Ucglib4WireSWSPI_begin+0x30>)
 80012f8:	4908      	ldr	r1, [pc, #32]	; (800131c <Ucglib4WireSWSPI_begin+0x34>)
 80012fa:	6878      	ldr	r0, [r7, #4]
 80012fc:	f001 f9a2 	bl	8002644 <ucg_Init>
 8001300:	78fb      	ldrb	r3, [r7, #3]
 8001302:	4619      	mov	r1, r3
 8001304:	6878      	ldr	r0, [r7, #4]
 8001306:	f000 ff86 	bl	8002216 <ucg_SetFontMode>
 800130a:	bf00      	nop
 800130c:	3708      	adds	r7, #8
 800130e:	46bd      	mov	sp, r7
 8001310:	bd80      	pop	{r7, pc}
 8001312:	bf00      	nop
 8001314:	080010fd 	.word	0x080010fd
 8001318:	08001955 	.word	0x08001955
 800131c:	08001a7d 	.word	0x08001a7d

08001320 <ucg_DrawBox>:
 8001320:	b580      	push	{r7, lr}
 8001322:	b084      	sub	sp, #16
 8001324:	af00      	add	r7, sp, #0
 8001326:	60f8      	str	r0, [r7, #12]
 8001328:	4608      	mov	r0, r1
 800132a:	4611      	mov	r1, r2
 800132c:	461a      	mov	r2, r3
 800132e:	4603      	mov	r3, r0
 8001330:	817b      	strh	r3, [r7, #10]
 8001332:	460b      	mov	r3, r1
 8001334:	813b      	strh	r3, [r7, #8]
 8001336:	4613      	mov	r3, r2
 8001338:	80fb      	strh	r3, [r7, #6]
 800133a:	e014      	b.n	8001366 <ucg_DrawBox+0x46>
 800133c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001340:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001344:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8001348:	68f8      	ldr	r0, [r7, #12]
 800134a:	f001 f9ed 	bl	8002728 <ucg_DrawHLine>
 800134e:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8001352:	b29b      	uxth	r3, r3
 8001354:	3b01      	subs	r3, #1
 8001356:	b29b      	uxth	r3, r3
 8001358:	833b      	strh	r3, [r7, #24]
 800135a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 800135e:	b29b      	uxth	r3, r3
 8001360:	3301      	adds	r3, #1
 8001362:	b29b      	uxth	r3, r3
 8001364:	813b      	strh	r3, [r7, #8]
 8001366:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 800136a:	2b00      	cmp	r3, #0
 800136c:	dce6      	bgt.n	800133c <ucg_DrawBox+0x1c>
 800136e:	bf00      	nop
 8001370:	3710      	adds	r7, #16
 8001372:	46bd      	mov	sp, r7
 8001374:	bd80      	pop	{r7, pc}

08001376 <ucg_ClearScreen>:
 8001376:	b580      	push	{r7, lr}
 8001378:	b084      	sub	sp, #16
 800137a:	af02      	add	r7, sp, #8
 800137c:	6078      	str	r0, [r7, #4]
 800137e:	2300      	movs	r3, #0
 8001380:	9300      	str	r3, [sp, #0]
 8001382:	2300      	movs	r3, #0
 8001384:	2200      	movs	r2, #0
 8001386:	2100      	movs	r1, #0
 8001388:	6878      	ldr	r0, [r7, #4]
 800138a:	f001 f9ec 	bl	8002766 <ucg_SetColor>
 800138e:	6878      	ldr	r0, [r7, #4]
 8001390:	f000 fb3b 	bl	8001a0a <ucg_SetMaxClipRange>
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80013a0:	9300      	str	r3, [sp, #0]
 80013a2:	4613      	mov	r3, r2
 80013a4:	2200      	movs	r2, #0
 80013a6:	2100      	movs	r1, #0
 80013a8:	6878      	ldr	r0, [r7, #4]
 80013aa:	f7ff ffb9 	bl	8001320 <ucg_DrawBox>
 80013ae:	23ff      	movs	r3, #255	; 0xff
 80013b0:	9300      	str	r3, [sp, #0]
 80013b2:	23ff      	movs	r3, #255	; 0xff
 80013b4:	22ff      	movs	r2, #255	; 0xff
 80013b6:	2100      	movs	r1, #0
 80013b8:	6878      	ldr	r0, [r7, #4]
 80013ba:	f001 f9d4 	bl	8002766 <ucg_SetColor>
 80013be:	bf00      	nop
 80013c0:	3708      	adds	r7, #8
 80013c2:	46bd      	mov	sp, r7
 80013c4:	bd80      	pop	{r7, pc}

080013c6 <ucg_ccs_init>:
 80013c6:	b480      	push	{r7}
 80013c8:	b083      	sub	sp, #12
 80013ca:	af00      	add	r7, sp, #0
 80013cc:	6078      	str	r0, [r7, #4]
 80013ce:	4608      	mov	r0, r1
 80013d0:	4611      	mov	r1, r2
 80013d2:	461a      	mov	r2, r3
 80013d4:	4603      	mov	r3, r0
 80013d6:	70fb      	strb	r3, [r7, #3]
 80013d8:	460b      	mov	r3, r1
 80013da:	70bb      	strb	r3, [r7, #2]
 80013dc:	4613      	mov	r3, r2
 80013de:	803b      	strh	r3, [r7, #0]
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	78fa      	ldrb	r2, [r7, #3]
 80013e4:	705a      	strb	r2, [r3, #1]
 80013e6:	78bb      	ldrb	r3, [r7, #2]
 80013e8:	b29a      	uxth	r2, r3
 80013ea:	78fb      	ldrb	r3, [r7, #3]
 80013ec:	b29b      	uxth	r3, r3
 80013ee:	1ad3      	subs	r3, r2, r3
 80013f0:	b29b      	uxth	r3, r3
 80013f2:	b21a      	sxth	r2, r3
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	809a      	strh	r2, [r3, #4]
 80013f8:	883b      	ldrh	r3, [r7, #0]
 80013fa:	3b01      	subs	r3, #1
 80013fc:	b29b      	uxth	r3, r3
 80013fe:	b21a      	sxth	r2, r3
 8001400:	687b      	ldr	r3, [r7, #4]
 8001402:	811a      	strh	r2, [r3, #8]
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	2201      	movs	r2, #1
 8001408:	805a      	strh	r2, [r3, #2]
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001410:	461a      	mov	r2, r3
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001418:	fb92 f3f3 	sdiv	r3, r2, r3
 800141c:	b21a      	sxth	r2, r3
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	80da      	strh	r2, [r3, #6]
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001428:	2b00      	cmp	r3, #0
 800142a:	da0c      	bge.n	8001446 <ucg_ccs_init+0x80>
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001432:	b29b      	uxth	r3, r3
 8001434:	425b      	negs	r3, r3
 8001436:	b29b      	uxth	r3, r3
 8001438:	b21a      	sxth	r2, r3
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	809a      	strh	r2, [r3, #4]
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001444:	805a      	strh	r2, [r3, #2]
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800144c:	687a      	ldr	r2, [r7, #4]
 800144e:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8001452:	fb93 f1f2 	sdiv	r1, r3, r2
 8001456:	fb02 f201 	mul.w	r2, r2, r1
 800145a:	1a9b      	subs	r3, r3, r2
 800145c:	b21a      	sxth	r2, r3
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	815a      	strh	r2, [r3, #10]
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001468:	0fda      	lsrs	r2, r3, #31
 800146a:	4413      	add	r3, r2
 800146c:	105b      	asrs	r3, r3, #1
 800146e:	b21a      	sxth	r2, r3
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	819a      	strh	r2, [r3, #12]
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	78fa      	ldrb	r2, [r7, #3]
 8001478:	701a      	strb	r2, [r3, #0]
 800147a:	bf00      	nop
 800147c:	370c      	adds	r7, #12
 800147e:	46bd      	mov	sp, r7
 8001480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001484:	4770      	bx	lr

08001486 <ucg_ccs_step>:
 8001486:	b480      	push	{r7}
 8001488:	b083      	sub	sp, #12
 800148a:	af00      	add	r7, sp, #0
 800148c:	6078      	str	r0, [r7, #4]
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	781a      	ldrb	r2, [r3, #0]
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8001498:	b2db      	uxtb	r3, r3
 800149a:	4413      	add	r3, r2
 800149c:	b2da      	uxtb	r2, r3
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	701a      	strb	r2, [r3, #0]
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80014a8:	b29a      	uxth	r2, r3
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80014b0:	b29b      	uxth	r3, r3
 80014b2:	4413      	add	r3, r2
 80014b4:	b29b      	uxth	r3, r3
 80014b6:	b21a      	sxth	r2, r3
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	819a      	strh	r2, [r3, #12]
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80014c8:	429a      	cmp	r2, r3
 80014ca:	db16      	blt.n	80014fa <ucg_ccs_step+0x74>
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	781a      	ldrb	r2, [r3, #0]
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80014d6:	b2db      	uxtb	r3, r3
 80014d8:	4413      	add	r3, r2
 80014da:	b2da      	uxtb	r2, r3
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	701a      	strb	r2, [r3, #0]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80014e6:	b29a      	uxth	r2, r3
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80014ee:	b29b      	uxth	r3, r3
 80014f0:	1ad3      	subs	r3, r2, r3
 80014f2:	b29b      	uxth	r3, r3
 80014f4:	b21a      	sxth	r2, r3
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	819a      	strh	r2, [r3, #12]
 80014fa:	bf00      	nop
 80014fc:	370c      	adds	r7, #12
 80014fe:	46bd      	mov	sp, r7
 8001500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001504:	4770      	bx	lr

08001506 <ucg_ccs_seek>:
 8001506:	b480      	push	{r7}
 8001508:	b085      	sub	sp, #20
 800150a:	af00      	add	r7, sp, #0
 800150c:	6078      	str	r0, [r7, #4]
 800150e:	460b      	mov	r3, r1
 8001510:	807b      	strh	r3, [r7, #2]
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8001518:	b2da      	uxtb	r2, r3
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	701a      	strb	r2, [r3, #0]
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	781a      	ldrb	r2, [r3, #0]
 8001522:	887b      	ldrh	r3, [r7, #2]
 8001524:	b2db      	uxtb	r3, r3
 8001526:	fb12 f303 	smulbb	r3, r2, r3
 800152a:	b2da      	uxtb	r2, r3
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	701a      	strb	r2, [r3, #0]
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001536:	b29a      	uxth	r2, r3
 8001538:	887b      	ldrh	r3, [r7, #2]
 800153a:	fb12 f303 	smulbb	r3, r2, r3
 800153e:	b29a      	uxth	r2, r3
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001546:	0fd9      	lsrs	r1, r3, #31
 8001548:	440b      	add	r3, r1
 800154a:	105b      	asrs	r3, r3, #1
 800154c:	b21b      	sxth	r3, r3
 800154e:	b29b      	uxth	r3, r3
 8001550:	4413      	add	r3, r2
 8001552:	b29b      	uxth	r3, r3
 8001554:	81fb      	strh	r3, [r7, #14]
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800155c:	2b00      	cmp	r3, #0
 800155e:	db0e      	blt.n	800157e <ucg_ccs_seek+0x78>
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	781a      	ldrb	r2, [r3, #0]
 8001564:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001568:	6879      	ldr	r1, [r7, #4]
 800156a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800156e:	fb93 f3f1 	sdiv	r3, r3, r1
 8001572:	b2db      	uxtb	r3, r3
 8001574:	4413      	add	r3, r2
 8001576:	b2da      	uxtb	r2, r3
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	701a      	strb	r2, [r3, #0]
 800157c:	e00d      	b.n	800159a <ucg_ccs_seek+0x94>
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	781a      	ldrb	r2, [r3, #0]
 8001582:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001586:	6879      	ldr	r1, [r7, #4]
 8001588:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800158c:	fb93 f3f1 	sdiv	r3, r3, r1
 8001590:	b2db      	uxtb	r3, r3
 8001592:	1ad3      	subs	r3, r2, r3
 8001594:	b2da      	uxtb	r2, r3
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	701a      	strb	r2, [r3, #0]
 800159a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800159e:	687a      	ldr	r2, [r7, #4]
 80015a0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80015a4:	fb93 f1f2 	sdiv	r1, r3, r2
 80015a8:	fb02 f201 	mul.w	r2, r2, r1
 80015ac:	1a9b      	subs	r3, r3, r2
 80015ae:	b21a      	sxth	r2, r3
 80015b0:	687b      	ldr	r3, [r7, #4]
 80015b2:	819a      	strh	r2, [r3, #12]
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	781a      	ldrb	r2, [r3, #0]
 80015b8:	687b      	ldr	r3, [r7, #4]
 80015ba:	785b      	ldrb	r3, [r3, #1]
 80015bc:	4413      	add	r3, r2
 80015be:	b2da      	uxtb	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	701a      	strb	r2, [r3, #0]
 80015c4:	bf00      	nop
 80015c6:	3714      	adds	r7, #20
 80015c8:	46bd      	mov	sp, r7
 80015ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ce:	4770      	bx	lr

080015d0 <ucg_dev_default_cb>:
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b084      	sub	sp, #16
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	60f8      	str	r0, [r7, #12]
 80015d8:	460b      	mov	r3, r1
 80015da:	607a      	str	r2, [r7, #4]
 80015dc:	817b      	strh	r3, [r7, #10]
 80015de:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80015e2:	2b0c      	cmp	r3, #12
 80015e4:	d00a      	beq.n	80015fc <ucg_dev_default_cb+0x2c>
 80015e6:	2b17      	cmp	r3, #23
 80015e8:	d10f      	bne.n	800160a <ucg_dev_default_cb+0x3a>
 80015ea:	68fb      	ldr	r3, [r7, #12]
 80015ec:	68db      	ldr	r3, [r3, #12]
 80015ee:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80015f2:	687a      	ldr	r2, [r7, #4]
 80015f4:	68f8      	ldr	r0, [r7, #12]
 80015f6:	4798      	blx	r3
 80015f8:	4603      	mov	r3, r0
 80015fa:	e007      	b.n	800160c <ucg_dev_default_cb+0x3c>
 80015fc:	68fb      	ldr	r3, [r7, #12]
 80015fe:	687a      	ldr	r2, [r7, #4]
 8001600:	3370      	adds	r3, #112	; 0x70
 8001602:	6810      	ldr	r0, [r2, #0]
 8001604:	6851      	ldr	r1, [r2, #4]
 8001606:	c303      	stmia	r3!, {r0, r1}
 8001608:	bf00      	nop
 800160a:	2301      	movs	r3, #1
 800160c:	4618      	mov	r0, r3
 800160e:	3710      	adds	r7, #16
 8001610:	46bd      	mov	sp, r7
 8001612:	bd80      	pop	{r7, pc}

08001614 <ucg_ext_none>:
 8001614:	b480      	push	{r7}
 8001616:	b085      	sub	sp, #20
 8001618:	af00      	add	r7, sp, #0
 800161a:	60f8      	str	r0, [r7, #12]
 800161c:	460b      	mov	r3, r1
 800161e:	607a      	str	r2, [r7, #4]
 8001620:	817b      	strh	r3, [r7, #10]
 8001622:	2301      	movs	r3, #1
 8001624:	4618      	mov	r0, r3
 8001626:	3714      	adds	r7, #20
 8001628:	46bd      	mov	sp, r7
 800162a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800162e:	4770      	bx	lr

08001630 <ucg_handle_st7735_l90fx>:
 8001630:	b590      	push	{r4, r7, lr}
 8001632:	b085      	sub	sp, #20
 8001634:	af00      	add	r7, sp, #0
 8001636:	6078      	str	r0, [r7, #4]
 8001638:	6878      	ldr	r0, [r7, #4]
 800163a:	f001 fa47 	bl	8002acc <ucg_clip_l90fx>
 800163e:	4603      	mov	r3, r0
 8001640:	2b00      	cmp	r3, #0
 8001642:	d053      	beq.n	80016ec <ucg_handle_st7735_l90fx+0xbc>
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 800164a:	2b01      	cmp	r3, #1
 800164c:	d008      	beq.n	8001660 <ucg_handle_st7735_l90fx+0x30>
 800164e:	2b02      	cmp	r3, #2
 8001650:	d00b      	beq.n	800166a <ucg_handle_st7735_l90fx+0x3a>
 8001652:	2b00      	cmp	r3, #0
 8001654:	d11b      	bne.n	800168e <ucg_handle_st7735_l90fx+0x5e>
 8001656:	4928      	ldr	r1, [pc, #160]	; (80016f8 <ucg_handle_st7735_l90fx+0xc8>)
 8001658:	6878      	ldr	r0, [r7, #4]
 800165a:	f001 fd65 	bl	8003128 <ucg_com_SendCmdSeq>
 800165e:	e028      	b.n	80016b2 <ucg_handle_st7735_l90fx+0x82>
 8001660:	4926      	ldr	r1, [pc, #152]	; (80016fc <ucg_handle_st7735_l90fx+0xcc>)
 8001662:	6878      	ldr	r0, [r7, #4]
 8001664:	f001 fd60 	bl	8003128 <ucg_com_SendCmdSeq>
 8001668:	e023      	b.n	80016b2 <ucg_handle_st7735_l90fx+0x82>
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800166e:	81fb      	strh	r3, [r7, #14]
 8001670:	89fb      	ldrh	r3, [r7, #14]
 8001672:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8001676:	b29b      	uxth	r3, r3
 8001678:	b21a      	sxth	r2, r3
 800167a:	687b      	ldr	r3, [r7, #4]
 800167c:	849a      	strh	r2, [r3, #36]	; 0x24
 800167e:	4920      	ldr	r1, [pc, #128]	; (8001700 <ucg_handle_st7735_l90fx+0xd0>)
 8001680:	6878      	ldr	r0, [r7, #4]
 8001682:	f001 fd51 	bl	8003128 <ucg_com_SendCmdSeq>
 8001686:	687b      	ldr	r3, [r7, #4]
 8001688:	89fa      	ldrh	r2, [r7, #14]
 800168a:	849a      	strh	r2, [r3, #36]	; 0x24
 800168c:	e011      	b.n	80016b2 <ucg_handle_st7735_l90fx+0x82>
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001692:	81fb      	strh	r3, [r7, #14]
 8001694:	89fb      	ldrh	r3, [r7, #14]
 8001696:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 800169a:	b29b      	uxth	r3, r3
 800169c:	b21a      	sxth	r2, r3
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	84da      	strh	r2, [r3, #38]	; 0x26
 80016a2:	4918      	ldr	r1, [pc, #96]	; (8001704 <ucg_handle_st7735_l90fx+0xd4>)
 80016a4:	6878      	ldr	r0, [r7, #4]
 80016a6:	f001 fd3f 	bl	8003128 <ucg_com_SendCmdSeq>
 80016aa:	687b      	ldr	r3, [r7, #4]
 80016ac:	89fa      	ldrh	r2, [r7, #14]
 80016ae:	84da      	strh	r2, [r3, #38]	; 0x26
 80016b0:	bf00      	nop
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80016b8:	723b      	strb	r3, [r7, #8]
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80016c0:	727b      	strb	r3, [r7, #9]
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80016c8:	72bb      	strb	r3, [r7, #10]
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	69dc      	ldr	r4, [r3, #28]
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80016d4:	b29a      	uxth	r2, r3
 80016d6:	f107 0308 	add.w	r3, r7, #8
 80016da:	2113      	movs	r1, #19
 80016dc:	6878      	ldr	r0, [r7, #4]
 80016de:	47a0      	blx	r4
 80016e0:	2101      	movs	r1, #1
 80016e2:	6878      	ldr	r0, [r7, #4]
 80016e4:	f001 fc6c 	bl	8002fc0 <ucg_com_SetCSLineStatus>
 80016e8:	2301      	movs	r3, #1
 80016ea:	e000      	b.n	80016ee <ucg_handle_st7735_l90fx+0xbe>
 80016ec:	2300      	movs	r3, #0
 80016ee:	4618      	mov	r0, r3
 80016f0:	3714      	adds	r7, #20
 80016f2:	46bd      	mov	sp, r7
 80016f4:	bd90      	pop	{r4, r7, pc}
 80016f6:	bf00      	nop
 80016f8:	08003450 	.word	0x08003450
 80016fc:	08003470 	.word	0x08003470
 8001700:	08003494 	.word	0x08003494
 8001704:	080034b8 	.word	0x080034b8

08001708 <ucg_handle_st7735_l90se>:
 8001708:	b590      	push	{r4, r7, lr}
 800170a:	b087      	sub	sp, #28
 800170c:	af00      	add	r7, sp, #0
 800170e:	6078      	str	r0, [r7, #4]
 8001710:	2300      	movs	r3, #0
 8001712:	75fb      	strb	r3, [r7, #23]
 8001714:	e01a      	b.n	800174c <ucg_handle_st7735_l90se+0x44>
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	f103 0146 	add.w	r1, r3, #70	; 0x46
 800171c:	7dfa      	ldrb	r2, [r7, #23]
 800171e:	4613      	mov	r3, r2
 8001720:	00db      	lsls	r3, r3, #3
 8001722:	1a9b      	subs	r3, r3, r2
 8001724:	005b      	lsls	r3, r3, #1
 8001726:	18c8      	adds	r0, r1, r3
 8001728:	7dfb      	ldrb	r3, [r7, #23]
 800172a:	687a      	ldr	r2, [r7, #4]
 800172c:	4413      	add	r3, r2
 800172e:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 8001732:	7dfb      	ldrb	r3, [r7, #23]
 8001734:	687a      	ldr	r2, [r7, #4]
 8001736:	4413      	add	r3, r2
 8001738:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 800173c:	687b      	ldr	r3, [r7, #4]
 800173e:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8001742:	f7ff fe40 	bl	80013c6 <ucg_ccs_init>
 8001746:	7dfb      	ldrb	r3, [r7, #23]
 8001748:	3301      	adds	r3, #1
 800174a:	75fb      	strb	r3, [r7, #23]
 800174c:	7dfb      	ldrb	r3, [r7, #23]
 800174e:	2b02      	cmp	r3, #2
 8001750:	d9e1      	bls.n	8001716 <ucg_handle_st7735_l90se+0xe>
 8001752:	6878      	ldr	r0, [r7, #4]
 8001754:	f001 fb3a 	bl	8002dcc <ucg_clip_l90se>
 8001758:	4603      	mov	r3, r0
 800175a:	2b00      	cmp	r3, #0
 800175c:	d071      	beq.n	8001842 <ucg_handle_st7735_l90se+0x13a>
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8001764:	2b01      	cmp	r3, #1
 8001766:	d008      	beq.n	800177a <ucg_handle_st7735_l90se+0x72>
 8001768:	2b02      	cmp	r3, #2
 800176a:	d00b      	beq.n	8001784 <ucg_handle_st7735_l90se+0x7c>
 800176c:	2b00      	cmp	r3, #0
 800176e:	d11b      	bne.n	80017a8 <ucg_handle_st7735_l90se+0xa0>
 8001770:	4936      	ldr	r1, [pc, #216]	; (800184c <ucg_handle_st7735_l90se+0x144>)
 8001772:	6878      	ldr	r0, [r7, #4]
 8001774:	f001 fcd8 	bl	8003128 <ucg_com_SendCmdSeq>
 8001778:	e028      	b.n	80017cc <ucg_handle_st7735_l90se+0xc4>
 800177a:	4935      	ldr	r1, [pc, #212]	; (8001850 <ucg_handle_st7735_l90se+0x148>)
 800177c:	6878      	ldr	r0, [r7, #4]
 800177e:	f001 fcd3 	bl	8003128 <ucg_com_SendCmdSeq>
 8001782:	e023      	b.n	80017cc <ucg_handle_st7735_l90se+0xc4>
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8001788:	827b      	strh	r3, [r7, #18]
 800178a:	8a7b      	ldrh	r3, [r7, #18]
 800178c:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8001790:	b29b      	uxth	r3, r3
 8001792:	b21a      	sxth	r2, r3
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	849a      	strh	r2, [r3, #36]	; 0x24
 8001798:	492e      	ldr	r1, [pc, #184]	; (8001854 <ucg_handle_st7735_l90se+0x14c>)
 800179a:	6878      	ldr	r0, [r7, #4]
 800179c:	f001 fcc4 	bl	8003128 <ucg_com_SendCmdSeq>
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	8a7a      	ldrh	r2, [r7, #18]
 80017a4:	849a      	strh	r2, [r3, #36]	; 0x24
 80017a6:	e011      	b.n	80017cc <ucg_handle_st7735_l90se+0xc4>
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80017ac:	827b      	strh	r3, [r7, #18]
 80017ae:	8a7b      	ldrh	r3, [r7, #18]
 80017b0:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 80017b4:	b29b      	uxth	r3, r3
 80017b6:	b21a      	sxth	r2, r3
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	84da      	strh	r2, [r3, #38]	; 0x26
 80017bc:	4926      	ldr	r1, [pc, #152]	; (8001858 <ucg_handle_st7735_l90se+0x150>)
 80017be:	6878      	ldr	r0, [r7, #4]
 80017c0:	f001 fcb2 	bl	8003128 <ucg_com_SendCmdSeq>
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	8a7a      	ldrh	r2, [r7, #18]
 80017c8:	84da      	strh	r2, [r3, #38]	; 0x26
 80017ca:	bf00      	nop
 80017cc:	2300      	movs	r3, #0
 80017ce:	82bb      	strh	r3, [r7, #20]
 80017d0:	e02a      	b.n	8001828 <ucg_handle_st7735_l90se+0x120>
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 80017d8:	733b      	strb	r3, [r7, #12]
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80017e0:	737b      	strb	r3, [r7, #13]
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80017e8:	73bb      	strb	r3, [r7, #14]
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	69dc      	ldr	r4, [r3, #28]
 80017ee:	f107 030c 	add.w	r3, r7, #12
 80017f2:	2201      	movs	r2, #1
 80017f4:	2113      	movs	r1, #19
 80017f6:	6878      	ldr	r0, [r7, #4]
 80017f8:	47a0      	blx	r4
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	3346      	adds	r3, #70	; 0x46
 80017fe:	4618      	mov	r0, r3
 8001800:	f7ff fe41 	bl	8001486 <ucg_ccs_step>
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	3346      	adds	r3, #70	; 0x46
 8001808:	330e      	adds	r3, #14
 800180a:	4618      	mov	r0, r3
 800180c:	f7ff fe3b 	bl	8001486 <ucg_ccs_step>
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	3346      	adds	r3, #70	; 0x46
 8001814:	331c      	adds	r3, #28
 8001816:	4618      	mov	r0, r3
 8001818:	f7ff fe35 	bl	8001486 <ucg_ccs_step>
 800181c:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8001820:	b29b      	uxth	r3, r3
 8001822:	3301      	adds	r3, #1
 8001824:	b29b      	uxth	r3, r3
 8001826:	82bb      	strh	r3, [r7, #20]
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800182e:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8001832:	429a      	cmp	r2, r3
 8001834:	dbcd      	blt.n	80017d2 <ucg_handle_st7735_l90se+0xca>
 8001836:	2101      	movs	r1, #1
 8001838:	6878      	ldr	r0, [r7, #4]
 800183a:	f001 fbc1 	bl	8002fc0 <ucg_com_SetCSLineStatus>
 800183e:	2301      	movs	r3, #1
 8001840:	e000      	b.n	8001844 <ucg_handle_st7735_l90se+0x13c>
 8001842:	2300      	movs	r3, #0
 8001844:	4618      	mov	r0, r3
 8001846:	371c      	adds	r7, #28
 8001848:	46bd      	mov	sp, r7
 800184a:	bd90      	pop	{r4, r7, pc}
 800184c:	08003450 	.word	0x08003450
 8001850:	08003470 	.word	0x08003470
 8001854:	08003494 	.word	0x08003494
 8001858:	080034b8 	.word	0x080034b8

0800185c <ucg_dev_ic_st7735_18>:
 800185c:	b590      	push	{r4, r7, lr}
 800185e:	b087      	sub	sp, #28
 8001860:	af00      	add	r7, sp, #0
 8001862:	60f8      	str	r0, [r7, #12]
 8001864:	460b      	mov	r3, r1
 8001866:	607a      	str	r2, [r7, #4]
 8001868:	817b      	strh	r3, [r7, #10]
 800186a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800186e:	3b0a      	subs	r3, #10
 8001870:	2b0b      	cmp	r3, #11
 8001872:	d85f      	bhi.n	8001934 <ucg_dev_ic_st7735_18+0xd8>
 8001874:	a201      	add	r2, pc, #4	; (adr r2, 800187c <ucg_dev_ic_st7735_18+0x20>)
 8001876:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800187a:	bf00      	nop
 800187c:	080018ad 	.word	0x080018ad
 8001880:	080018c7 	.word	0x080018c7
 8001884:	08001935 	.word	0x08001935
 8001888:	08001935 	.word	0x08001935
 800188c:	08001935 	.word	0x08001935
 8001890:	080018d3 	.word	0x080018d3
 8001894:	08001935 	.word	0x08001935
 8001898:	08001935 	.word	0x08001935
 800189c:	08001935 	.word	0x08001935
 80018a0:	08001935 	.word	0x08001935
 80018a4:	080018e3 	.word	0x080018e3
 80018a8:	0800192b 	.word	0x0800192b
 80018ac:	68fb      	ldr	r3, [r7, #12]
 80018ae:	2202      	movs	r2, #2
 80018b0:	841a      	strh	r2, [r3, #32]
 80018b2:	68fb      	ldr	r3, [r7, #12]
 80018b4:	2201      	movs	r2, #1
 80018b6:	845a      	strh	r2, [r3, #34]	; 0x22
 80018b8:	2242      	movs	r2, #66	; 0x42
 80018ba:	2164      	movs	r1, #100	; 0x64
 80018bc:	68f8      	ldr	r0, [r7, #12]
 80018be:	f001 face 	bl	8002e5e <ucg_com_PowerUp>
 80018c2:	4603      	mov	r3, r0
 80018c4:	e03e      	b.n	8001944 <ucg_dev_ic_st7735_18+0xe8>
 80018c6:	4921      	ldr	r1, [pc, #132]	; (800194c <ucg_dev_ic_st7735_18+0xf0>)
 80018c8:	68f8      	ldr	r0, [r7, #12]
 80018ca:	f001 fc2d 	bl	8003128 <ucg_com_SendCmdSeq>
 80018ce:	2301      	movs	r3, #1
 80018d0:	e038      	b.n	8001944 <ucg_dev_ic_st7735_18+0xe8>
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	2280      	movs	r2, #128	; 0x80
 80018d6:	801a      	strh	r2, [r3, #0]
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	2280      	movs	r2, #128	; 0x80
 80018dc:	805a      	strh	r2, [r3, #2]
 80018de:	2301      	movs	r3, #1
 80018e0:	e030      	b.n	8001944 <ucg_dev_ic_st7735_18+0xe8>
 80018e2:	68f8      	ldr	r0, [r7, #12]
 80018e4:	f001 f8d8 	bl	8002a98 <ucg_clip_is_pixel_visible>
 80018e8:	4603      	mov	r3, r0
 80018ea:	2b00      	cmp	r3, #0
 80018ec:	d01b      	beq.n	8001926 <ucg_dev_ic_st7735_18+0xca>
 80018ee:	4918      	ldr	r1, [pc, #96]	; (8001950 <ucg_dev_ic_st7735_18+0xf4>)
 80018f0:	68f8      	ldr	r0, [r7, #12]
 80018f2:	f001 fc19 	bl	8003128 <ucg_com_SendCmdSeq>
 80018f6:	68fb      	ldr	r3, [r7, #12]
 80018f8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80018fc:	753b      	strb	r3, [r7, #20]
 80018fe:	68fb      	ldr	r3, [r7, #12]
 8001900:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8001904:	757b      	strb	r3, [r7, #21]
 8001906:	68fb      	ldr	r3, [r7, #12]
 8001908:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 800190c:	75bb      	strb	r3, [r7, #22]
 800190e:	68fb      	ldr	r3, [r7, #12]
 8001910:	69dc      	ldr	r4, [r3, #28]
 8001912:	f107 0314 	add.w	r3, r7, #20
 8001916:	2201      	movs	r2, #1
 8001918:	2113      	movs	r1, #19
 800191a:	68f8      	ldr	r0, [r7, #12]
 800191c:	47a0      	blx	r4
 800191e:	2101      	movs	r1, #1
 8001920:	68f8      	ldr	r0, [r7, #12]
 8001922:	f001 fb4d 	bl	8002fc0 <ucg_com_SetCSLineStatus>
 8001926:	2301      	movs	r3, #1
 8001928:	e00c      	b.n	8001944 <ucg_dev_ic_st7735_18+0xe8>
 800192a:	68f8      	ldr	r0, [r7, #12]
 800192c:	f7ff fe80 	bl	8001630 <ucg_handle_st7735_l90fx>
 8001930:	2301      	movs	r3, #1
 8001932:	e007      	b.n	8001944 <ucg_dev_ic_st7735_18+0xe8>
 8001934:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001938:	687a      	ldr	r2, [r7, #4]
 800193a:	4619      	mov	r1, r3
 800193c:	68f8      	ldr	r0, [r7, #12]
 800193e:	f7ff fe47 	bl	80015d0 <ucg_dev_default_cb>
 8001942:	4603      	mov	r3, r0
 8001944:	4618      	mov	r0, r3
 8001946:	371c      	adds	r7, #28
 8001948:	46bd      	mov	sp, r7
 800194a:	bd90      	pop	{r4, r7, pc}
 800194c:	080034dc 	.word	0x080034dc
 8001950:	08003430 	.word	0x08003430

08001954 <ucg_ext_st7735_18>:
 8001954:	b580      	push	{r7, lr}
 8001956:	b084      	sub	sp, #16
 8001958:	af00      	add	r7, sp, #0
 800195a:	60f8      	str	r0, [r7, #12]
 800195c:	460b      	mov	r3, r1
 800195e:	607a      	str	r2, [r7, #4]
 8001960:	817b      	strh	r3, [r7, #10]
 8001962:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001966:	2b17      	cmp	r3, #23
 8001968:	d103      	bne.n	8001972 <ucg_ext_st7735_18+0x1e>
 800196a:	68f8      	ldr	r0, [r7, #12]
 800196c:	f7ff fecc 	bl	8001708 <ucg_handle_st7735_l90se>
 8001970:	bf00      	nop
 8001972:	2301      	movs	r3, #1
 8001974:	4618      	mov	r0, r3
 8001976:	3710      	adds	r7, #16
 8001978:	46bd      	mov	sp, r7
 800197a:	bd80      	pop	{r7, pc}

0800197c <ucg_PowerDown>:
 800197c:	b580      	push	{r7, lr}
 800197e:	b082      	sub	sp, #8
 8001980:	af00      	add	r7, sp, #0
 8001982:	6078      	str	r0, [r7, #4]
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	781b      	ldrb	r3, [r3, #0]
 8001988:	f003 0301 	and.w	r3, r3, #1
 800198c:	b2db      	uxtb	r3, r3
 800198e:	2b00      	cmp	r3, #0
 8001990:	d00a      	beq.n	80019a8 <ucg_PowerDown+0x2c>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	689b      	ldr	r3, [r3, #8]
 8001996:	2200      	movs	r2, #0
 8001998:	210b      	movs	r1, #11
 800199a:	6878      	ldr	r0, [r7, #4]
 800199c:	4798      	blx	r3
 800199e:	687a      	ldr	r2, [r7, #4]
 80019a0:	7813      	ldrb	r3, [r2, #0]
 80019a2:	f36f 0300 	bfc	r3, #0, #1
 80019a6:	7013      	strb	r3, [r2, #0]
 80019a8:	bf00      	nop
 80019aa:	3708      	adds	r7, #8
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bd80      	pop	{r7, pc}

080019b0 <ucg_PowerUp>:
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b084      	sub	sp, #16
 80019b4:	af00      	add	r7, sp, #0
 80019b6:	6078      	str	r0, [r7, #4]
 80019b8:	6878      	ldr	r0, [r7, #4]
 80019ba:	f7ff ffdf 	bl	800197c <ucg_PowerDown>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	689b      	ldr	r3, [r3, #8]
 80019c2:	2200      	movs	r2, #0
 80019c4:	210a      	movs	r1, #10
 80019c6:	6878      	ldr	r0, [r7, #4]
 80019c8:	4798      	blx	r3
 80019ca:	4603      	mov	r3, r0
 80019cc:	81fb      	strh	r3, [r7, #14]
 80019ce:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80019d2:	2b00      	cmp	r3, #0
 80019d4:	d004      	beq.n	80019e0 <ucg_PowerUp+0x30>
 80019d6:	687a      	ldr	r2, [r7, #4]
 80019d8:	7813      	ldrb	r3, [r2, #0]
 80019da:	f043 0301 	orr.w	r3, r3, #1
 80019de:	7013      	strb	r3, [r2, #0]
 80019e0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80019e4:	4618      	mov	r0, r3
 80019e6:	3710      	adds	r7, #16
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}

080019ec <ucg_SetClipBox>:
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b082      	sub	sp, #8
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
 80019f4:	6039      	str	r1, [r7, #0]
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	689b      	ldr	r3, [r3, #8]
 80019fa:	683a      	ldr	r2, [r7, #0]
 80019fc:	210c      	movs	r1, #12
 80019fe:	6878      	ldr	r0, [r7, #4]
 8001a00:	4798      	blx	r3
 8001a02:	bf00      	nop
 8001a04:	3708      	adds	r7, #8
 8001a06:	46bd      	mov	sp, r7
 8001a08:	bd80      	pop	{r7, pc}

08001a0a <ucg_SetMaxClipRange>:
 8001a0a:	b580      	push	{r7, lr}
 8001a0c:	b084      	sub	sp, #16
 8001a0e:	af00      	add	r7, sp, #0
 8001a10:	6078      	str	r0, [r7, #4]
 8001a12:	687a      	ldr	r2, [r7, #4]
 8001a14:	f107 030c 	add.w	r3, r7, #12
 8001a18:	3202      	adds	r2, #2
 8001a1a:	6810      	ldr	r0, [r2, #0]
 8001a1c:	6018      	str	r0, [r3, #0]
 8001a1e:	2300      	movs	r3, #0
 8001a20:	813b      	strh	r3, [r7, #8]
 8001a22:	2300      	movs	r3, #0
 8001a24:	817b      	strh	r3, [r7, #10]
 8001a26:	f107 0308 	add.w	r3, r7, #8
 8001a2a:	4619      	mov	r1, r3
 8001a2c:	6878      	ldr	r0, [r7, #4]
 8001a2e:	f7ff ffdd 	bl	80019ec <ucg_SetClipBox>
 8001a32:	bf00      	nop
 8001a34:	3710      	adds	r7, #16
 8001a36:	46bd      	mov	sp, r7
 8001a38:	bd80      	pop	{r7, pc}

08001a3a <ucg_GetDimension>:
 8001a3a:	b580      	push	{r7, lr}
 8001a3c:	b082      	sub	sp, #8
 8001a3e:	af00      	add	r7, sp, #0
 8001a40:	6078      	str	r0, [r7, #4]
 8001a42:	687b      	ldr	r3, [r7, #4]
 8001a44:	689b      	ldr	r3, [r3, #8]
 8001a46:	687a      	ldr	r2, [r7, #4]
 8001a48:	3202      	adds	r2, #2
 8001a4a:	210f      	movs	r1, #15
 8001a4c:	6878      	ldr	r0, [r7, #4]
 8001a4e:	4798      	blx	r3
 8001a50:	6878      	ldr	r0, [r7, #4]
 8001a52:	f7ff ffda 	bl	8001a0a <ucg_SetMaxClipRange>
 8001a56:	bf00      	nop
 8001a58:	3708      	adds	r7, #8
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}

08001a5e <ucg_DrawL90FXWithArg>:
 8001a5e:	b580      	push	{r7, lr}
 8001a60:	b082      	sub	sp, #8
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	6078      	str	r0, [r7, #4]
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	689b      	ldr	r3, [r3, #8]
 8001a6a:	687a      	ldr	r2, [r7, #4]
 8001a6c:	3224      	adds	r2, #36	; 0x24
 8001a6e:	2115      	movs	r1, #21
 8001a70:	6878      	ldr	r0, [r7, #4]
 8001a72:	4798      	blx	r3
 8001a74:	bf00      	nop
 8001a76:	3708      	adds	r7, #8
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	bd80      	pop	{r7, pc}

08001a7c <ucg_dev_st7735_18x128x128>:
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	b084      	sub	sp, #16
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	60f8      	str	r0, [r7, #12]
 8001a84:	460b      	mov	r3, r1
 8001a86:	607a      	str	r2, [r7, #4]
 8001a88:	817b      	strh	r3, [r7, #10]
 8001a8a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001a8e:	2b0b      	cmp	r3, #11
 8001a90:	d015      	beq.n	8001abe <ucg_dev_st7735_18x128x128+0x42>
 8001a92:	2b0f      	cmp	r3, #15
 8001a94:	d01c      	beq.n	8001ad0 <ucg_dev_st7735_18x128x128+0x54>
 8001a96:	2b0a      	cmp	r3, #10
 8001a98:	d122      	bne.n	8001ae0 <ucg_dev_st7735_18x128x128+0x64>
 8001a9a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001a9e:	687a      	ldr	r2, [r7, #4]
 8001aa0:	4619      	mov	r1, r3
 8001aa2:	68f8      	ldr	r0, [r7, #12]
 8001aa4:	f7ff feda 	bl	800185c <ucg_dev_ic_st7735_18>
 8001aa8:	4603      	mov	r3, r0
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d101      	bne.n	8001ab2 <ucg_dev_st7735_18x128x128+0x36>
 8001aae:	2300      	movs	r3, #0
 8001ab0:	e01e      	b.n	8001af0 <ucg_dev_st7735_18x128x128+0x74>
 8001ab2:	4911      	ldr	r1, [pc, #68]	; (8001af8 <ucg_dev_st7735_18x128x128+0x7c>)
 8001ab4:	68f8      	ldr	r0, [r7, #12]
 8001ab6:	f001 fb37 	bl	8003128 <ucg_com_SendCmdSeq>
 8001aba:	2301      	movs	r3, #1
 8001abc:	e018      	b.n	8001af0 <ucg_dev_st7735_18x128x128+0x74>
 8001abe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001ac2:	687a      	ldr	r2, [r7, #4]
 8001ac4:	4619      	mov	r1, r3
 8001ac6:	68f8      	ldr	r0, [r7, #12]
 8001ac8:	f7ff fec8 	bl	800185c <ucg_dev_ic_st7735_18>
 8001acc:	4603      	mov	r3, r0
 8001ace:	e00f      	b.n	8001af0 <ucg_dev_st7735_18x128x128+0x74>
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	2280      	movs	r2, #128	; 0x80
 8001ad4:	801a      	strh	r2, [r3, #0]
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	2280      	movs	r2, #128	; 0x80
 8001ada:	805a      	strh	r2, [r3, #2]
 8001adc:	2301      	movs	r3, #1
 8001ade:	e007      	b.n	8001af0 <ucg_dev_st7735_18x128x128+0x74>
 8001ae0:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001ae4:	687a      	ldr	r2, [r7, #4]
 8001ae6:	4619      	mov	r1, r3
 8001ae8:	68f8      	ldr	r0, [r7, #12]
 8001aea:	f7ff feb7 	bl	800185c <ucg_dev_ic_st7735_18>
 8001aee:	4603      	mov	r3, r0
 8001af0:	4618      	mov	r0, r3
 8001af2:	3710      	adds	r7, #16
 8001af4:	46bd      	mov	sp, r7
 8001af6:	bd80      	pop	{r7, pc}
 8001af8:	080034e4 	.word	0x080034e4

08001afc <ucg_font_get_byte>:
 8001afc:	b480      	push	{r7}
 8001afe:	b083      	sub	sp, #12
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	460b      	mov	r3, r1
 8001b06:	70fb      	strb	r3, [r7, #3]
 8001b08:	78fb      	ldrb	r3, [r7, #3]
 8001b0a:	687a      	ldr	r2, [r7, #4]
 8001b0c:	4413      	add	r3, r2
 8001b0e:	607b      	str	r3, [r7, #4]
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	781b      	ldrb	r3, [r3, #0]
 8001b14:	4618      	mov	r0, r3
 8001b16:	370c      	adds	r7, #12
 8001b18:	46bd      	mov	sp, r7
 8001b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b1e:	4770      	bx	lr

08001b20 <ucg_font_get_word>:
 8001b20:	b480      	push	{r7}
 8001b22:	b085      	sub	sp, #20
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	6078      	str	r0, [r7, #4]
 8001b28:	460b      	mov	r3, r1
 8001b2a:	70fb      	strb	r3, [r7, #3]
 8001b2c:	78fb      	ldrb	r3, [r7, #3]
 8001b2e:	687a      	ldr	r2, [r7, #4]
 8001b30:	4413      	add	r3, r2
 8001b32:	607b      	str	r3, [r7, #4]
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	781b      	ldrb	r3, [r3, #0]
 8001b38:	81fb      	strh	r3, [r7, #14]
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	3301      	adds	r3, #1
 8001b3e:	607b      	str	r3, [r7, #4]
 8001b40:	89fb      	ldrh	r3, [r7, #14]
 8001b42:	021b      	lsls	r3, r3, #8
 8001b44:	81fb      	strh	r3, [r7, #14]
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	781b      	ldrb	r3, [r3, #0]
 8001b4a:	b29a      	uxth	r2, r3
 8001b4c:	89fb      	ldrh	r3, [r7, #14]
 8001b4e:	4413      	add	r3, r2
 8001b50:	81fb      	strh	r3, [r7, #14]
 8001b52:	89fb      	ldrh	r3, [r7, #14]
 8001b54:	4618      	mov	r0, r3
 8001b56:	3714      	adds	r7, #20
 8001b58:	46bd      	mov	sp, r7
 8001b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b5e:	4770      	bx	lr

08001b60 <ucg_read_font_info>:
 8001b60:	b580      	push	{r7, lr}
 8001b62:	b082      	sub	sp, #8
 8001b64:	af00      	add	r7, sp, #0
 8001b66:	6078      	str	r0, [r7, #4]
 8001b68:	6039      	str	r1, [r7, #0]
 8001b6a:	2100      	movs	r1, #0
 8001b6c:	6838      	ldr	r0, [r7, #0]
 8001b6e:	f7ff ffc5 	bl	8001afc <ucg_font_get_byte>
 8001b72:	4603      	mov	r3, r0
 8001b74:	461a      	mov	r2, r3
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	701a      	strb	r2, [r3, #0]
 8001b7a:	2101      	movs	r1, #1
 8001b7c:	6838      	ldr	r0, [r7, #0]
 8001b7e:	f7ff ffbd 	bl	8001afc <ucg_font_get_byte>
 8001b82:	4603      	mov	r3, r0
 8001b84:	461a      	mov	r2, r3
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	705a      	strb	r2, [r3, #1]
 8001b8a:	2102      	movs	r1, #2
 8001b8c:	6838      	ldr	r0, [r7, #0]
 8001b8e:	f7ff ffb5 	bl	8001afc <ucg_font_get_byte>
 8001b92:	4603      	mov	r3, r0
 8001b94:	461a      	mov	r2, r3
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	709a      	strb	r2, [r3, #2]
 8001b9a:	2103      	movs	r1, #3
 8001b9c:	6838      	ldr	r0, [r7, #0]
 8001b9e:	f7ff ffad 	bl	8001afc <ucg_font_get_byte>
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	461a      	mov	r2, r3
 8001ba6:	687b      	ldr	r3, [r7, #4]
 8001ba8:	70da      	strb	r2, [r3, #3]
 8001baa:	2104      	movs	r1, #4
 8001bac:	6838      	ldr	r0, [r7, #0]
 8001bae:	f7ff ffa5 	bl	8001afc <ucg_font_get_byte>
 8001bb2:	4603      	mov	r3, r0
 8001bb4:	461a      	mov	r2, r3
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	711a      	strb	r2, [r3, #4]
 8001bba:	2105      	movs	r1, #5
 8001bbc:	6838      	ldr	r0, [r7, #0]
 8001bbe:	f7ff ff9d 	bl	8001afc <ucg_font_get_byte>
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	461a      	mov	r2, r3
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	715a      	strb	r2, [r3, #5]
 8001bca:	2106      	movs	r1, #6
 8001bcc:	6838      	ldr	r0, [r7, #0]
 8001bce:	f7ff ff95 	bl	8001afc <ucg_font_get_byte>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	461a      	mov	r2, r3
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	719a      	strb	r2, [r3, #6]
 8001bda:	2107      	movs	r1, #7
 8001bdc:	6838      	ldr	r0, [r7, #0]
 8001bde:	f7ff ff8d 	bl	8001afc <ucg_font_get_byte>
 8001be2:	4603      	mov	r3, r0
 8001be4:	461a      	mov	r2, r3
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	71da      	strb	r2, [r3, #7]
 8001bea:	2108      	movs	r1, #8
 8001bec:	6838      	ldr	r0, [r7, #0]
 8001bee:	f7ff ff85 	bl	8001afc <ucg_font_get_byte>
 8001bf2:	4603      	mov	r3, r0
 8001bf4:	461a      	mov	r2, r3
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	721a      	strb	r2, [r3, #8]
 8001bfa:	2109      	movs	r1, #9
 8001bfc:	6838      	ldr	r0, [r7, #0]
 8001bfe:	f7ff ff7d 	bl	8001afc <ucg_font_get_byte>
 8001c02:	4603      	mov	r3, r0
 8001c04:	b25a      	sxtb	r2, r3
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	725a      	strb	r2, [r3, #9]
 8001c0a:	210a      	movs	r1, #10
 8001c0c:	6838      	ldr	r0, [r7, #0]
 8001c0e:	f7ff ff75 	bl	8001afc <ucg_font_get_byte>
 8001c12:	4603      	mov	r3, r0
 8001c14:	b25a      	sxtb	r2, r3
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	729a      	strb	r2, [r3, #10]
 8001c1a:	210b      	movs	r1, #11
 8001c1c:	6838      	ldr	r0, [r7, #0]
 8001c1e:	f7ff ff6d 	bl	8001afc <ucg_font_get_byte>
 8001c22:	4603      	mov	r3, r0
 8001c24:	b25a      	sxtb	r2, r3
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	72da      	strb	r2, [r3, #11]
 8001c2a:	210c      	movs	r1, #12
 8001c2c:	6838      	ldr	r0, [r7, #0]
 8001c2e:	f7ff ff65 	bl	8001afc <ucg_font_get_byte>
 8001c32:	4603      	mov	r3, r0
 8001c34:	b25a      	sxtb	r2, r3
 8001c36:	687b      	ldr	r3, [r7, #4]
 8001c38:	731a      	strb	r2, [r3, #12]
 8001c3a:	210d      	movs	r1, #13
 8001c3c:	6838      	ldr	r0, [r7, #0]
 8001c3e:	f7ff ff5d 	bl	8001afc <ucg_font_get_byte>
 8001c42:	4603      	mov	r3, r0
 8001c44:	b25a      	sxtb	r2, r3
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	735a      	strb	r2, [r3, #13]
 8001c4a:	210e      	movs	r1, #14
 8001c4c:	6838      	ldr	r0, [r7, #0]
 8001c4e:	f7ff ff55 	bl	8001afc <ucg_font_get_byte>
 8001c52:	4603      	mov	r3, r0
 8001c54:	b25a      	sxtb	r2, r3
 8001c56:	687b      	ldr	r3, [r7, #4]
 8001c58:	739a      	strb	r2, [r3, #14]
 8001c5a:	210f      	movs	r1, #15
 8001c5c:	6838      	ldr	r0, [r7, #0]
 8001c5e:	f7ff ff4d 	bl	8001afc <ucg_font_get_byte>
 8001c62:	4603      	mov	r3, r0
 8001c64:	b25a      	sxtb	r2, r3
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	73da      	strb	r2, [r3, #15]
 8001c6a:	2110      	movs	r1, #16
 8001c6c:	6838      	ldr	r0, [r7, #0]
 8001c6e:	f7ff ff45 	bl	8001afc <ucg_font_get_byte>
 8001c72:	4603      	mov	r3, r0
 8001c74:	b25a      	sxtb	r2, r3
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	741a      	strb	r2, [r3, #16]
 8001c7a:	2111      	movs	r1, #17
 8001c7c:	6838      	ldr	r0, [r7, #0]
 8001c7e:	f7ff ff4f 	bl	8001b20 <ucg_font_get_word>
 8001c82:	4603      	mov	r3, r0
 8001c84:	461a      	mov	r2, r3
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	825a      	strh	r2, [r3, #18]
 8001c8a:	2113      	movs	r1, #19
 8001c8c:	6838      	ldr	r0, [r7, #0]
 8001c8e:	f7ff ff47 	bl	8001b20 <ucg_font_get_word>
 8001c92:	4603      	mov	r3, r0
 8001c94:	461a      	mov	r2, r3
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	829a      	strh	r2, [r3, #20]
 8001c9a:	bf00      	nop
 8001c9c:	3708      	adds	r7, #8
 8001c9e:	46bd      	mov	sp, r7
 8001ca0:	bd80      	pop	{r7, pc}

08001ca2 <ucg_font_decode_get_unsigned_bits>:
 8001ca2:	b480      	push	{r7}
 8001ca4:	b085      	sub	sp, #20
 8001ca6:	af00      	add	r7, sp, #0
 8001ca8:	6078      	str	r0, [r7, #4]
 8001caa:	460b      	mov	r3, r1
 8001cac:	70fb      	strb	r3, [r7, #3]
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	7b1b      	ldrb	r3, [r3, #12]
 8001cb2:	737b      	strb	r3, [r7, #13]
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	781b      	ldrb	r3, [r3, #0]
 8001cba:	73fb      	strb	r3, [r7, #15]
 8001cbc:	7bfa      	ldrb	r2, [r7, #15]
 8001cbe:	7b7b      	ldrb	r3, [r7, #13]
 8001cc0:	fa42 f303 	asr.w	r3, r2, r3
 8001cc4:	73fb      	strb	r3, [r7, #15]
 8001cc6:	7b7b      	ldrb	r3, [r7, #13]
 8001cc8:	73bb      	strb	r3, [r7, #14]
 8001cca:	7bba      	ldrb	r2, [r7, #14]
 8001ccc:	78fb      	ldrb	r3, [r7, #3]
 8001cce:	4413      	add	r3, r2
 8001cd0:	73bb      	strb	r3, [r7, #14]
 8001cd2:	7bbb      	ldrb	r3, [r7, #14]
 8001cd4:	2b07      	cmp	r3, #7
 8001cd6:	d91a      	bls.n	8001d0e <ucg_font_decode_get_unsigned_bits+0x6c>
 8001cd8:	2308      	movs	r3, #8
 8001cda:	733b      	strb	r3, [r7, #12]
 8001cdc:	7b3a      	ldrb	r2, [r7, #12]
 8001cde:	7b7b      	ldrb	r3, [r7, #13]
 8001ce0:	1ad3      	subs	r3, r2, r3
 8001ce2:	733b      	strb	r3, [r7, #12]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	1c5a      	adds	r2, r3, #1
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	601a      	str	r2, [r3, #0]
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	781b      	ldrb	r3, [r3, #0]
 8001cf4:	461a      	mov	r2, r3
 8001cf6:	7b3b      	ldrb	r3, [r7, #12]
 8001cf8:	fa02 f303 	lsl.w	r3, r2, r3
 8001cfc:	b25a      	sxtb	r2, r3
 8001cfe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d02:	4313      	orrs	r3, r2
 8001d04:	b25b      	sxtb	r3, r3
 8001d06:	73fb      	strb	r3, [r7, #15]
 8001d08:	7bbb      	ldrb	r3, [r7, #14]
 8001d0a:	3b08      	subs	r3, #8
 8001d0c:	73bb      	strb	r3, [r7, #14]
 8001d0e:	78fb      	ldrb	r3, [r7, #3]
 8001d10:	f04f 32ff 	mov.w	r2, #4294967295
 8001d14:	fa02 f303 	lsl.w	r3, r2, r3
 8001d18:	b2db      	uxtb	r3, r3
 8001d1a:	43db      	mvns	r3, r3
 8001d1c:	b2da      	uxtb	r2, r3
 8001d1e:	7bfb      	ldrb	r3, [r7, #15]
 8001d20:	4013      	ands	r3, r2
 8001d22:	73fb      	strb	r3, [r7, #15]
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	7bba      	ldrb	r2, [r7, #14]
 8001d28:	731a      	strb	r2, [r3, #12]
 8001d2a:	7bfb      	ldrb	r3, [r7, #15]
 8001d2c:	4618      	mov	r0, r3
 8001d2e:	3714      	adds	r7, #20
 8001d30:	46bd      	mov	sp, r7
 8001d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d36:	4770      	bx	lr

08001d38 <ucg_font_decode_get_signed_bits>:
 8001d38:	b580      	push	{r7, lr}
 8001d3a:	b084      	sub	sp, #16
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
 8001d40:	460b      	mov	r3, r1
 8001d42:	70fb      	strb	r3, [r7, #3]
 8001d44:	78fb      	ldrb	r3, [r7, #3]
 8001d46:	4619      	mov	r1, r3
 8001d48:	6878      	ldr	r0, [r7, #4]
 8001d4a:	f7ff ffaa 	bl	8001ca2 <ucg_font_decode_get_unsigned_bits>
 8001d4e:	4603      	mov	r3, r0
 8001d50:	73fb      	strb	r3, [r7, #15]
 8001d52:	2301      	movs	r3, #1
 8001d54:	73bb      	strb	r3, [r7, #14]
 8001d56:	78fb      	ldrb	r3, [r7, #3]
 8001d58:	3b01      	subs	r3, #1
 8001d5a:	70fb      	strb	r3, [r7, #3]
 8001d5c:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8001d60:	78fb      	ldrb	r3, [r7, #3]
 8001d62:	fa02 f303 	lsl.w	r3, r2, r3
 8001d66:	73bb      	strb	r3, [r7, #14]
 8001d68:	7bfa      	ldrb	r2, [r7, #15]
 8001d6a:	7bbb      	ldrb	r3, [r7, #14]
 8001d6c:	1ad3      	subs	r3, r2, r3
 8001d6e:	b2db      	uxtb	r3, r3
 8001d70:	73fb      	strb	r3, [r7, #15]
 8001d72:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d76:	4618      	mov	r0, r3
 8001d78:	3710      	adds	r7, #16
 8001d7a:	46bd      	mov	sp, r7
 8001d7c:	bd80      	pop	{r7, pc}

08001d7e <ucg_add_vector_y>:
 8001d7e:	b490      	push	{r4, r7}
 8001d80:	b082      	sub	sp, #8
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	4604      	mov	r4, r0
 8001d86:	4608      	mov	r0, r1
 8001d88:	4611      	mov	r1, r2
 8001d8a:	461a      	mov	r2, r3
 8001d8c:	4623      	mov	r3, r4
 8001d8e:	80fb      	strh	r3, [r7, #6]
 8001d90:	4603      	mov	r3, r0
 8001d92:	717b      	strb	r3, [r7, #5]
 8001d94:	460b      	mov	r3, r1
 8001d96:	713b      	strb	r3, [r7, #4]
 8001d98:	4613      	mov	r3, r2
 8001d9a:	70fb      	strb	r3, [r7, #3]
 8001d9c:	78fb      	ldrb	r3, [r7, #3]
 8001d9e:	2b01      	cmp	r3, #1
 8001da0:	d00b      	beq.n	8001dba <ucg_add_vector_y+0x3c>
 8001da2:	2b02      	cmp	r3, #2
 8001da4:	d011      	beq.n	8001dca <ucg_add_vector_y+0x4c>
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d117      	bne.n	8001dda <ucg_add_vector_y+0x5c>
 8001daa:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001dae:	b29a      	uxth	r2, r3
 8001db0:	88fb      	ldrh	r3, [r7, #6]
 8001db2:	4413      	add	r3, r2
 8001db4:	b29b      	uxth	r3, r3
 8001db6:	80fb      	strh	r3, [r7, #6]
 8001db8:	e017      	b.n	8001dea <ucg_add_vector_y+0x6c>
 8001dba:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001dbe:	b29a      	uxth	r2, r3
 8001dc0:	88fb      	ldrh	r3, [r7, #6]
 8001dc2:	4413      	add	r3, r2
 8001dc4:	b29b      	uxth	r3, r3
 8001dc6:	80fb      	strh	r3, [r7, #6]
 8001dc8:	e00f      	b.n	8001dea <ucg_add_vector_y+0x6c>
 8001dca:	88fa      	ldrh	r2, [r7, #6]
 8001dcc:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001dd0:	b29b      	uxth	r3, r3
 8001dd2:	1ad3      	subs	r3, r2, r3
 8001dd4:	b29b      	uxth	r3, r3
 8001dd6:	80fb      	strh	r3, [r7, #6]
 8001dd8:	e007      	b.n	8001dea <ucg_add_vector_y+0x6c>
 8001dda:	88fa      	ldrh	r2, [r7, #6]
 8001ddc:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001de0:	b29b      	uxth	r3, r3
 8001de2:	1ad3      	subs	r3, r2, r3
 8001de4:	b29b      	uxth	r3, r3
 8001de6:	80fb      	strh	r3, [r7, #6]
 8001de8:	bf00      	nop
 8001dea:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001dee:	4618      	mov	r0, r3
 8001df0:	3708      	adds	r7, #8
 8001df2:	46bd      	mov	sp, r7
 8001df4:	bc90      	pop	{r4, r7}
 8001df6:	4770      	bx	lr

08001df8 <ucg_add_vector_x>:
 8001df8:	b490      	push	{r4, r7}
 8001dfa:	b082      	sub	sp, #8
 8001dfc:	af00      	add	r7, sp, #0
 8001dfe:	4604      	mov	r4, r0
 8001e00:	4608      	mov	r0, r1
 8001e02:	4611      	mov	r1, r2
 8001e04:	461a      	mov	r2, r3
 8001e06:	4623      	mov	r3, r4
 8001e08:	80fb      	strh	r3, [r7, #6]
 8001e0a:	4603      	mov	r3, r0
 8001e0c:	717b      	strb	r3, [r7, #5]
 8001e0e:	460b      	mov	r3, r1
 8001e10:	713b      	strb	r3, [r7, #4]
 8001e12:	4613      	mov	r3, r2
 8001e14:	70fb      	strb	r3, [r7, #3]
 8001e16:	78fb      	ldrb	r3, [r7, #3]
 8001e18:	2b01      	cmp	r3, #1
 8001e1a:	d00b      	beq.n	8001e34 <ucg_add_vector_x+0x3c>
 8001e1c:	2b02      	cmp	r3, #2
 8001e1e:	d011      	beq.n	8001e44 <ucg_add_vector_x+0x4c>
 8001e20:	2b00      	cmp	r3, #0
 8001e22:	d117      	bne.n	8001e54 <ucg_add_vector_x+0x5c>
 8001e24:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001e28:	b29a      	uxth	r2, r3
 8001e2a:	88fb      	ldrh	r3, [r7, #6]
 8001e2c:	4413      	add	r3, r2
 8001e2e:	b29b      	uxth	r3, r3
 8001e30:	80fb      	strh	r3, [r7, #6]
 8001e32:	e017      	b.n	8001e64 <ucg_add_vector_x+0x6c>
 8001e34:	88fa      	ldrh	r2, [r7, #6]
 8001e36:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001e3a:	b29b      	uxth	r3, r3
 8001e3c:	1ad3      	subs	r3, r2, r3
 8001e3e:	b29b      	uxth	r3, r3
 8001e40:	80fb      	strh	r3, [r7, #6]
 8001e42:	e00f      	b.n	8001e64 <ucg_add_vector_x+0x6c>
 8001e44:	88fa      	ldrh	r2, [r7, #6]
 8001e46:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001e4a:	b29b      	uxth	r3, r3
 8001e4c:	1ad3      	subs	r3, r2, r3
 8001e4e:	b29b      	uxth	r3, r3
 8001e50:	80fb      	strh	r3, [r7, #6]
 8001e52:	e007      	b.n	8001e64 <ucg_add_vector_x+0x6c>
 8001e54:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001e58:	b29a      	uxth	r2, r3
 8001e5a:	88fb      	ldrh	r3, [r7, #6]
 8001e5c:	4413      	add	r3, r2
 8001e5e:	b29b      	uxth	r3, r3
 8001e60:	80fb      	strh	r3, [r7, #6]
 8001e62:	bf00      	nop
 8001e64:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001e68:	4618      	mov	r0, r3
 8001e6a:	3708      	adds	r7, #8
 8001e6c:	46bd      	mov	sp, r7
 8001e6e:	bc90      	pop	{r4, r7}
 8001e70:	4770      	bx	lr

08001e72 <ucg_font_decode_len>:
 8001e72:	b590      	push	{r4, r7, lr}
 8001e74:	b089      	sub	sp, #36	; 0x24
 8001e76:	af02      	add	r7, sp, #8
 8001e78:	6078      	str	r0, [r7, #4]
 8001e7a:	460b      	mov	r3, r1
 8001e7c:	70fb      	strb	r3, [r7, #3]
 8001e7e:	4613      	mov	r3, r2
 8001e80:	70bb      	strb	r3, [r7, #2]
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	3380      	adds	r3, #128	; 0x80
 8001e86:	613b      	str	r3, [r7, #16]
 8001e88:	78fb      	ldrb	r3, [r7, #3]
 8001e8a:	75fb      	strb	r3, [r7, #23]
 8001e8c:	693b      	ldr	r3, [r7, #16]
 8001e8e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8001e92:	757b      	strb	r3, [r7, #21]
 8001e94:	693b      	ldr	r3, [r7, #16]
 8001e96:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8001e9a:	753b      	strb	r3, [r7, #20]
 8001e9c:	693b      	ldr	r3, [r7, #16]
 8001e9e:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8001ea2:	73fb      	strb	r3, [r7, #15]
 8001ea4:	7bfa      	ldrb	r2, [r7, #15]
 8001ea6:	7d7b      	ldrb	r3, [r7, #21]
 8001ea8:	1ad3      	subs	r3, r2, r3
 8001eaa:	73fb      	strb	r3, [r7, #15]
 8001eac:	7bfb      	ldrb	r3, [r7, #15]
 8001eae:	75bb      	strb	r3, [r7, #22]
 8001eb0:	7dfa      	ldrb	r2, [r7, #23]
 8001eb2:	7bfb      	ldrb	r3, [r7, #15]
 8001eb4:	429a      	cmp	r2, r3
 8001eb6:	d201      	bcs.n	8001ebc <ucg_font_decode_len+0x4a>
 8001eb8:	7dfb      	ldrb	r3, [r7, #23]
 8001eba:	75bb      	strb	r3, [r7, #22]
 8001ebc:	693b      	ldr	r3, [r7, #16]
 8001ebe:	889b      	ldrh	r3, [r3, #4]
 8001ec0:	81bb      	strh	r3, [r7, #12]
 8001ec2:	693b      	ldr	r3, [r7, #16]
 8001ec4:	88db      	ldrh	r3, [r3, #6]
 8001ec6:	817b      	strh	r3, [r7, #10]
 8001ec8:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8001ecc:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8001ed0:	693b      	ldr	r3, [r7, #16]
 8001ed2:	7b9b      	ldrb	r3, [r3, #14]
 8001ed4:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8001ed8:	f7ff ff8e 	bl	8001df8 <ucg_add_vector_x>
 8001edc:	4603      	mov	r3, r0
 8001ede:	81bb      	strh	r3, [r7, #12]
 8001ee0:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8001ee4:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8001ee8:	693b      	ldr	r3, [r7, #16]
 8001eea:	7b9b      	ldrb	r3, [r3, #14]
 8001eec:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8001ef0:	f7ff ff45 	bl	8001d7e <ucg_add_vector_y>
 8001ef4:	4603      	mov	r3, r0
 8001ef6:	817b      	strh	r3, [r7, #10]
 8001ef8:	78bb      	ldrb	r3, [r7, #2]
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d011      	beq.n	8001f22 <ucg_font_decode_len+0xb0>
 8001efe:	7dbb      	ldrb	r3, [r7, #22]
 8001f00:	b21c      	sxth	r4, r3
 8001f02:	693b      	ldr	r3, [r7, #16]
 8001f04:	7b9b      	ldrb	r3, [r3, #14]
 8001f06:	b21b      	sxth	r3, r3
 8001f08:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8001f0c:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8001f10:	2200      	movs	r2, #0
 8001f12:	9201      	str	r2, [sp, #4]
 8001f14:	9300      	str	r3, [sp, #0]
 8001f16:	4623      	mov	r3, r4
 8001f18:	4602      	mov	r2, r0
 8001f1a:	6878      	ldr	r0, [r7, #4]
 8001f1c:	f000 fbc0 	bl	80026a0 <ucg_Draw90Line>
 8001f20:	e014      	b.n	8001f4c <ucg_font_decode_len+0xda>
 8001f22:	693b      	ldr	r3, [r7, #16]
 8001f24:	7b5b      	ldrb	r3, [r3, #13]
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d110      	bne.n	8001f4c <ucg_font_decode_len+0xda>
 8001f2a:	7dbb      	ldrb	r3, [r7, #22]
 8001f2c:	b21c      	sxth	r4, r3
 8001f2e:	693b      	ldr	r3, [r7, #16]
 8001f30:	7b9b      	ldrb	r3, [r3, #14]
 8001f32:	b21b      	sxth	r3, r3
 8001f34:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8001f38:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8001f3c:	2201      	movs	r2, #1
 8001f3e:	9201      	str	r2, [sp, #4]
 8001f40:	9300      	str	r3, [sp, #0]
 8001f42:	4623      	mov	r3, r4
 8001f44:	4602      	mov	r2, r0
 8001f46:	6878      	ldr	r0, [r7, #4]
 8001f48:	f000 fbaa 	bl	80026a0 <ucg_Draw90Line>
 8001f4c:	7dfa      	ldrb	r2, [r7, #23]
 8001f4e:	7bfb      	ldrb	r3, [r7, #15]
 8001f50:	429a      	cmp	r2, r3
 8001f52:	d309      	bcc.n	8001f68 <ucg_font_decode_len+0xf6>
 8001f54:	7dfa      	ldrb	r2, [r7, #23]
 8001f56:	7bfb      	ldrb	r3, [r7, #15]
 8001f58:	1ad3      	subs	r3, r2, r3
 8001f5a:	75fb      	strb	r3, [r7, #23]
 8001f5c:	2300      	movs	r3, #0
 8001f5e:	757b      	strb	r3, [r7, #21]
 8001f60:	7d3b      	ldrb	r3, [r7, #20]
 8001f62:	3301      	adds	r3, #1
 8001f64:	753b      	strb	r3, [r7, #20]
 8001f66:	e799      	b.n	8001e9c <ucg_font_decode_len+0x2a>
 8001f68:	bf00      	nop
 8001f6a:	7d7a      	ldrb	r2, [r7, #21]
 8001f6c:	7dfb      	ldrb	r3, [r7, #23]
 8001f6e:	4413      	add	r3, r2
 8001f70:	757b      	strb	r3, [r7, #21]
 8001f72:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8001f76:	693b      	ldr	r3, [r7, #16]
 8001f78:	721a      	strb	r2, [r3, #8]
 8001f7a:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8001f7e:	693b      	ldr	r3, [r7, #16]
 8001f80:	725a      	strb	r2, [r3, #9]
 8001f82:	bf00      	nop
 8001f84:	371c      	adds	r7, #28
 8001f86:	46bd      	mov	sp, r7
 8001f88:	bd90      	pop	{r4, r7, pc}

08001f8a <ucg_font_setup_decode>:
 8001f8a:	b580      	push	{r7, lr}
 8001f8c:	b084      	sub	sp, #16
 8001f8e:	af00      	add	r7, sp, #0
 8001f90:	6078      	str	r0, [r7, #4]
 8001f92:	6039      	str	r1, [r7, #0]
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	3380      	adds	r3, #128	; 0x80
 8001f98:	60fb      	str	r3, [r7, #12]
 8001f9a:	68fb      	ldr	r3, [r7, #12]
 8001f9c:	683a      	ldr	r2, [r7, #0]
 8001f9e:	601a      	str	r2, [r3, #0]
 8001fa0:	68fb      	ldr	r3, [r7, #12]
 8001fa2:	2200      	movs	r2, #0
 8001fa4:	731a      	strb	r2, [r3, #12]
 8001fa6:	68fb      	ldr	r3, [r7, #12]
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	1c5a      	adds	r2, r3, #1
 8001fac:	68fb      	ldr	r3, [r7, #12]
 8001fae:	601a      	str	r2, [r3, #0]
 8001fb0:	68fb      	ldr	r3, [r7, #12]
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	1c5a      	adds	r2, r3, #1
 8001fb6:	68fb      	ldr	r3, [r7, #12]
 8001fb8:	601a      	str	r2, [r3, #0]
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8001fc0:	4619      	mov	r1, r3
 8001fc2:	68f8      	ldr	r0, [r7, #12]
 8001fc4:	f7ff fe6d 	bl	8001ca2 <ucg_font_decode_get_unsigned_bits>
 8001fc8:	4603      	mov	r3, r0
 8001fca:	b25a      	sxtb	r2, r3
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	729a      	strb	r2, [r3, #10]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 8001fd6:	4619      	mov	r1, r3
 8001fd8:	68f8      	ldr	r0, [r7, #12]
 8001fda:	f7ff fe62 	bl	8001ca2 <ucg_font_decode_get_unsigned_bits>
 8001fde:	4603      	mov	r3, r0
 8001fe0:	b25a      	sxtb	r2, r3
 8001fe2:	68fb      	ldr	r3, [r7, #12]
 8001fe4:	72da      	strb	r2, [r3, #11]
 8001fe6:	bf00      	nop
 8001fe8:	3710      	adds	r7, #16
 8001fea:	46bd      	mov	sp, r7
 8001fec:	bd80      	pop	{r7, pc}

08001fee <ucg_font_decode_glyph>:
 8001fee:	b580      	push	{r7, lr}
 8001ff0:	b084      	sub	sp, #16
 8001ff2:	af00      	add	r7, sp, #0
 8001ff4:	6078      	str	r0, [r7, #4]
 8001ff6:	6039      	str	r1, [r7, #0]
 8001ff8:	6839      	ldr	r1, [r7, #0]
 8001ffa:	6878      	ldr	r0, [r7, #4]
 8001ffc:	f7ff ffc5 	bl	8001f8a <ucg_font_setup_decode>
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 8002006:	73fb      	strb	r3, [r7, #15]
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8002014:	4619      	mov	r1, r3
 8002016:	4610      	mov	r0, r2
 8002018:	f7ff fe8e 	bl	8001d38 <ucg_font_decode_get_signed_bits>
 800201c:	4603      	mov	r3, r0
 800201e:	73bb      	strb	r3, [r7, #14]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 800202c:	4619      	mov	r1, r3
 800202e:	4610      	mov	r0, r2
 8002030:	f7ff fe82 	bl	8001d38 <ucg_font_decode_get_signed_bits>
 8002034:	4603      	mov	r3, r0
 8002036:	737b      	strb	r3, [r7, #13]
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8002044:	4619      	mov	r1, r3
 8002046:	4610      	mov	r0, r2
 8002048:	f7ff fe76 	bl	8001d38 <ucg_font_decode_get_signed_bits>
 800204c:	4603      	mov	r3, r0
 800204e:	733b      	strb	r3, [r7, #12]
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8002056:	2b00      	cmp	r3, #0
 8002058:	dd69      	ble.n	800212e <ucg_font_decode_glyph+0x140>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8002060:	7bfa      	ldrb	r2, [r7, #15]
 8002062:	7b7b      	ldrb	r3, [r7, #13]
 8002064:	4413      	add	r3, r2
 8002066:	b2db      	uxtb	r3, r3
 8002068:	425b      	negs	r3, r3
 800206a:	b2db      	uxtb	r3, r3
 800206c:	b25a      	sxtb	r2, r3
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002074:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002078:	f7ff febe 	bl	8001df8 <ucg_add_vector_x>
 800207c:	4603      	mov	r3, r0
 800207e:	461a      	mov	r2, r3
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 800208c:	7bfa      	ldrb	r2, [r7, #15]
 800208e:	7b7b      	ldrb	r3, [r7, #13]
 8002090:	4413      	add	r3, r2
 8002092:	b2db      	uxtb	r3, r3
 8002094:	425b      	negs	r3, r3
 8002096:	b2db      	uxtb	r3, r3
 8002098:	b25a      	sxtb	r2, r3
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 80020a0:	f997 100e 	ldrsb.w	r1, [r7, #14]
 80020a4:	f7ff fe6b 	bl	8001d7e <ucg_add_vector_y>
 80020a8:	4603      	mov	r3, r0
 80020aa:	461a      	mov	r2, r3
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	2200      	movs	r2, #0
 80020b6:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	2200      	movs	r2, #0
 80020be:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 80020ce:	4619      	mov	r1, r3
 80020d0:	4610      	mov	r0, r2
 80020d2:	f7ff fde6 	bl	8001ca2 <ucg_font_decode_get_unsigned_bits>
 80020d6:	4603      	mov	r3, r0
 80020d8:	72fb      	strb	r3, [r7, #11]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80020e6:	4619      	mov	r1, r3
 80020e8:	4610      	mov	r0, r2
 80020ea:	f7ff fdda 	bl	8001ca2 <ucg_font_decode_get_unsigned_bits>
 80020ee:	4603      	mov	r3, r0
 80020f0:	72bb      	strb	r3, [r7, #10]
 80020f2:	7afb      	ldrb	r3, [r7, #11]
 80020f4:	2200      	movs	r2, #0
 80020f6:	4619      	mov	r1, r3
 80020f8:	6878      	ldr	r0, [r7, #4]
 80020fa:	f7ff feba 	bl	8001e72 <ucg_font_decode_len>
 80020fe:	7abb      	ldrb	r3, [r7, #10]
 8002100:	2201      	movs	r2, #1
 8002102:	4619      	mov	r1, r3
 8002104:	6878      	ldr	r0, [r7, #4]
 8002106:	f7ff feb4 	bl	8001e72 <ucg_font_decode_len>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	3380      	adds	r3, #128	; 0x80
 800210e:	2101      	movs	r1, #1
 8002110:	4618      	mov	r0, r3
 8002112:	f7ff fdc6 	bl	8001ca2 <ucg_font_decode_get_unsigned_bits>
 8002116:	4603      	mov	r3, r0
 8002118:	2b00      	cmp	r3, #0
 800211a:	d1ea      	bne.n	80020f2 <ucg_font_decode_glyph+0x104>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 8002122:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8002126:	429a      	cmp	r2, r3
 8002128:	dd00      	ble.n	800212c <ucg_font_decode_glyph+0x13e>
 800212a:	e7ca      	b.n	80020c2 <ucg_font_decode_glyph+0xd4>
 800212c:	bf00      	nop
 800212e:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8002132:	4618      	mov	r0, r3
 8002134:	3710      	adds	r7, #16
 8002136:	46bd      	mov	sp, r7
 8002138:	bd80      	pop	{r7, pc}

0800213a <ucg_font_get_glyph_data>:
 800213a:	b480      	push	{r7}
 800213c:	b085      	sub	sp, #20
 800213e:	af00      	add	r7, sp, #0
 8002140:	6078      	str	r0, [r7, #4]
 8002142:	460b      	mov	r3, r1
 8002144:	70fb      	strb	r3, [r7, #3]
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800214a:	60fb      	str	r3, [r7, #12]
 800214c:	68fb      	ldr	r3, [r7, #12]
 800214e:	3315      	adds	r3, #21
 8002150:	60fb      	str	r3, [r7, #12]
 8002152:	78fb      	ldrb	r3, [r7, #3]
 8002154:	2b60      	cmp	r3, #96	; 0x60
 8002156:	d907      	bls.n	8002168 <ucg_font_get_glyph_data+0x2e>
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 800215e:	461a      	mov	r2, r3
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	4413      	add	r3, r2
 8002164:	60fb      	str	r3, [r7, #12]
 8002166:	e009      	b.n	800217c <ucg_font_get_glyph_data+0x42>
 8002168:	78fb      	ldrb	r3, [r7, #3]
 800216a:	2b40      	cmp	r3, #64	; 0x40
 800216c:	d906      	bls.n	800217c <ucg_font_get_glyph_data+0x42>
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 8002174:	461a      	mov	r2, r3
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	4413      	add	r3, r2
 800217a:	60fb      	str	r3, [r7, #12]
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	3301      	adds	r3, #1
 8002180:	781b      	ldrb	r3, [r3, #0]
 8002182:	2b00      	cmp	r3, #0
 8002184:	d00e      	beq.n	80021a4 <ucg_font_get_glyph_data+0x6a>
 8002186:	68fb      	ldr	r3, [r7, #12]
 8002188:	781b      	ldrb	r3, [r3, #0]
 800218a:	78fa      	ldrb	r2, [r7, #3]
 800218c:	429a      	cmp	r2, r3
 800218e:	d101      	bne.n	8002194 <ucg_font_get_glyph_data+0x5a>
 8002190:	68fb      	ldr	r3, [r7, #12]
 8002192:	e009      	b.n	80021a8 <ucg_font_get_glyph_data+0x6e>
 8002194:	68fb      	ldr	r3, [r7, #12]
 8002196:	3301      	adds	r3, #1
 8002198:	781b      	ldrb	r3, [r3, #0]
 800219a:	461a      	mov	r2, r3
 800219c:	68fb      	ldr	r3, [r7, #12]
 800219e:	4413      	add	r3, r2
 80021a0:	60fb      	str	r3, [r7, #12]
 80021a2:	e7eb      	b.n	800217c <ucg_font_get_glyph_data+0x42>
 80021a4:	bf00      	nop
 80021a6:	2300      	movs	r3, #0
 80021a8:	4618      	mov	r0, r3
 80021aa:	3714      	adds	r7, #20
 80021ac:	46bd      	mov	sp, r7
 80021ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b2:	4770      	bx	lr

080021b4 <ucg_font_draw_glyph>:
 80021b4:	b580      	push	{r7, lr}
 80021b6:	b086      	sub	sp, #24
 80021b8:	af00      	add	r7, sp, #0
 80021ba:	60f8      	str	r0, [r7, #12]
 80021bc:	4608      	mov	r0, r1
 80021be:	4611      	mov	r1, r2
 80021c0:	461a      	mov	r2, r3
 80021c2:	4603      	mov	r3, r0
 80021c4:	817b      	strh	r3, [r7, #10]
 80021c6:	460b      	mov	r3, r1
 80021c8:	813b      	strh	r3, [r7, #8]
 80021ca:	4613      	mov	r3, r2
 80021cc:	71fb      	strb	r3, [r7, #7]
 80021ce:	2300      	movs	r3, #0
 80021d0:	82fb      	strh	r3, [r7, #22]
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	897a      	ldrh	r2, [r7, #10]
 80021d6:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 80021da:	68fb      	ldr	r3, [r7, #12]
 80021dc:	893a      	ldrh	r2, [r7, #8]
 80021de:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 80021e2:	68fb      	ldr	r3, [r7, #12]
 80021e4:	79fa      	ldrb	r2, [r7, #7]
 80021e6:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80021ea:	f897 3020 	ldrb.w	r3, [r7, #32]
 80021ee:	4619      	mov	r1, r3
 80021f0:	68f8      	ldr	r0, [r7, #12]
 80021f2:	f7ff ffa2 	bl	800213a <ucg_font_get_glyph_data>
 80021f6:	6138      	str	r0, [r7, #16]
 80021f8:	693b      	ldr	r3, [r7, #16]
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d005      	beq.n	800220a <ucg_font_draw_glyph+0x56>
 80021fe:	6939      	ldr	r1, [r7, #16]
 8002200:	68f8      	ldr	r0, [r7, #12]
 8002202:	f7ff fef4 	bl	8001fee <ucg_font_decode_glyph>
 8002206:	4603      	mov	r3, r0
 8002208:	82fb      	strh	r3, [r7, #22]
 800220a:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800220e:	4618      	mov	r0, r3
 8002210:	3718      	adds	r7, #24
 8002212:	46bd      	mov	sp, r7
 8002214:	bd80      	pop	{r7, pc}

08002216 <ucg_SetFontMode>:
 8002216:	b480      	push	{r7}
 8002218:	b083      	sub	sp, #12
 800221a:	af00      	add	r7, sp, #0
 800221c:	6078      	str	r0, [r7, #4]
 800221e:	460b      	mov	r3, r1
 8002220:	70fb      	strb	r3, [r7, #3]
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	78fa      	ldrb	r2, [r7, #3]
 8002226:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 800222a:	bf00      	nop
 800222c:	370c      	adds	r7, #12
 800222e:	46bd      	mov	sp, r7
 8002230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002234:	4770      	bx	lr
	...

08002238 <ucg_DrawGlyph>:
 8002238:	b580      	push	{r7, lr}
 800223a:	b086      	sub	sp, #24
 800223c:	af02      	add	r7, sp, #8
 800223e:	60f8      	str	r0, [r7, #12]
 8002240:	4608      	mov	r0, r1
 8002242:	4611      	mov	r1, r2
 8002244:	461a      	mov	r2, r3
 8002246:	4603      	mov	r3, r0
 8002248:	817b      	strh	r3, [r7, #10]
 800224a:	460b      	mov	r3, r1
 800224c:	813b      	strh	r3, [r7, #8]
 800224e:	4613      	mov	r3, r2
 8002250:	71fb      	strb	r3, [r7, #7]
 8002252:	79fb      	ldrb	r3, [r7, #7]
 8002254:	2b03      	cmp	r3, #3
 8002256:	d837      	bhi.n	80022c8 <ucg_DrawGlyph+0x90>
 8002258:	a201      	add	r2, pc, #4	; (adr r2, 8002260 <ucg_DrawGlyph+0x28>)
 800225a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800225e:	bf00      	nop
 8002260:	08002271 	.word	0x08002271
 8002264:	08002287 	.word	0x08002287
 8002268:	0800229d 	.word	0x0800229d
 800226c:	080022b3 	.word	0x080022b3
 8002270:	68fb      	ldr	r3, [r7, #12]
 8002272:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002274:	68f8      	ldr	r0, [r7, #12]
 8002276:	4798      	blx	r3
 8002278:	4603      	mov	r3, r0
 800227a:	b29a      	uxth	r2, r3
 800227c:	893b      	ldrh	r3, [r7, #8]
 800227e:	4413      	add	r3, r2
 8002280:	b29b      	uxth	r3, r3
 8002282:	813b      	strh	r3, [r7, #8]
 8002284:	e020      	b.n	80022c8 <ucg_DrawGlyph+0x90>
 8002286:	68fb      	ldr	r3, [r7, #12]
 8002288:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800228a:	68f8      	ldr	r0, [r7, #12]
 800228c:	4798      	blx	r3
 800228e:	4603      	mov	r3, r0
 8002290:	897a      	ldrh	r2, [r7, #10]
 8002292:	b29b      	uxth	r3, r3
 8002294:	1ad3      	subs	r3, r2, r3
 8002296:	b29b      	uxth	r3, r3
 8002298:	817b      	strh	r3, [r7, #10]
 800229a:	e015      	b.n	80022c8 <ucg_DrawGlyph+0x90>
 800229c:	68fb      	ldr	r3, [r7, #12]
 800229e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80022a0:	68f8      	ldr	r0, [r7, #12]
 80022a2:	4798      	blx	r3
 80022a4:	4603      	mov	r3, r0
 80022a6:	893a      	ldrh	r2, [r7, #8]
 80022a8:	b29b      	uxth	r3, r3
 80022aa:	1ad3      	subs	r3, r2, r3
 80022ac:	b29b      	uxth	r3, r3
 80022ae:	813b      	strh	r3, [r7, #8]
 80022b0:	e00a      	b.n	80022c8 <ucg_DrawGlyph+0x90>
 80022b2:	68fb      	ldr	r3, [r7, #12]
 80022b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80022b6:	68f8      	ldr	r0, [r7, #12]
 80022b8:	4798      	blx	r3
 80022ba:	4603      	mov	r3, r0
 80022bc:	b29a      	uxth	r2, r3
 80022be:	897b      	ldrh	r3, [r7, #10]
 80022c0:	4413      	add	r3, r2
 80022c2:	b29b      	uxth	r3, r3
 80022c4:	817b      	strh	r3, [r7, #10]
 80022c6:	bf00      	nop
 80022c8:	79f8      	ldrb	r0, [r7, #7]
 80022ca:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80022ce:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80022d2:	7e3b      	ldrb	r3, [r7, #24]
 80022d4:	9300      	str	r3, [sp, #0]
 80022d6:	4603      	mov	r3, r0
 80022d8:	68f8      	ldr	r0, [r7, #12]
 80022da:	f7ff ff6b 	bl	80021b4 <ucg_font_draw_glyph>
 80022de:	4603      	mov	r3, r0
 80022e0:	4618      	mov	r0, r3
 80022e2:	3710      	adds	r7, #16
 80022e4:	46bd      	mov	sp, r7
 80022e6:	bd80      	pop	{r7, pc}

080022e8 <task_drawString>:
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b086      	sub	sp, #24
 80022ec:	af02      	add	r7, sp, #8
 80022ee:	6078      	str	r0, [r7, #4]
 80022f0:	2300      	movs	r3, #0
 80022f2:	81fb      	strh	r3, [r7, #14]
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	60bb      	str	r3, [r7, #8]
 80022f8:	4b45      	ldr	r3, [pc, #276]	; (8002410 <task_drawString+0x128>)
 80022fa:	781b      	ldrb	r3, [r3, #0]
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	d002      	beq.n	8002306 <task_drawString+0x1e>
 8002300:	2b01      	cmp	r3, #1
 8002302:	d01e      	beq.n	8002342 <task_drawString+0x5a>
 8002304:	e07b      	b.n	80023fe <task_drawString+0x116>
 8002306:	4843      	ldr	r0, [pc, #268]	; (8002414 <task_drawString+0x12c>)
 8002308:	f7fe f957 	bl	80005ba <bufNumItems>
 800230c:	4603      	mov	r3, r0
 800230e:	2b00      	cmp	r3, #0
 8002310:	d007      	beq.n	8002322 <task_drawString+0x3a>
 8002312:	4941      	ldr	r1, [pc, #260]	; (8002418 <task_drawString+0x130>)
 8002314:	483f      	ldr	r0, [pc, #252]	; (8002414 <task_drawString+0x12c>)
 8002316:	f7fe f9eb 	bl	80006f0 <bufDeDat>
 800231a:	4b3d      	ldr	r3, [pc, #244]	; (8002410 <task_drawString+0x128>)
 800231c:	2201      	movs	r2, #1
 800231e:	701a      	strb	r2, [r3, #0]
 8002320:	e071      	b.n	8002406 <task_drawString+0x11e>
 8002322:	4b3e      	ldr	r3, [pc, #248]	; (800241c <task_drawString+0x134>)
 8002324:	781b      	ldrb	r3, [r3, #0]
 8002326:	2bff      	cmp	r3, #255	; 0xff
 8002328:	d007      	beq.n	800233a <task_drawString+0x52>
 800232a:	4b3c      	ldr	r3, [pc, #240]	; (800241c <task_drawString+0x134>)
 800232c:	781b      	ldrb	r3, [r3, #0]
 800232e:	4618      	mov	r0, r3
 8002330:	f7fe fd28 	bl	8000d84 <TimerStop>
 8002334:	4b39      	ldr	r3, [pc, #228]	; (800241c <task_drawString+0x134>)
 8002336:	22ff      	movs	r2, #255	; 0xff
 8002338:	701a      	strb	r2, [r3, #0]
 800233a:	4b35      	ldr	r3, [pc, #212]	; (8002410 <task_drawString+0x128>)
 800233c:	2200      	movs	r2, #0
 800233e:	701a      	strb	r2, [r3, #0]
 8002340:	e061      	b.n	8002406 <task_drawString+0x11e>
 8002342:	4b35      	ldr	r3, [pc, #212]	; (8002418 <task_drawString+0x130>)
 8002344:	689b      	ldr	r3, [r3, #8]
 8002346:	781b      	ldrb	r3, [r3, #0]
 8002348:	2b00      	cmp	r3, #0
 800234a:	d054      	beq.n	80023f6 <task_drawString+0x10e>
 800234c:	4b32      	ldr	r3, [pc, #200]	; (8002418 <task_drawString+0x130>)
 800234e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8002352:	4b31      	ldr	r3, [pc, #196]	; (8002418 <task_drawString+0x130>)
 8002354:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002358:	4b2f      	ldr	r3, [pc, #188]	; (8002418 <task_drawString+0x130>)
 800235a:	7918      	ldrb	r0, [r3, #4]
 800235c:	4b2e      	ldr	r3, [pc, #184]	; (8002418 <task_drawString+0x130>)
 800235e:	689b      	ldr	r3, [r3, #8]
 8002360:	781b      	ldrb	r3, [r3, #0]
 8002362:	9300      	str	r3, [sp, #0]
 8002364:	4603      	mov	r3, r0
 8002366:	68b8      	ldr	r0, [r7, #8]
 8002368:	f7ff ff66 	bl	8002238 <ucg_DrawGlyph>
 800236c:	4603      	mov	r3, r0
 800236e:	81fb      	strh	r3, [r7, #14]
 8002370:	4b29      	ldr	r3, [pc, #164]	; (8002418 <task_drawString+0x130>)
 8002372:	791b      	ldrb	r3, [r3, #4]
 8002374:	2b03      	cmp	r3, #3
 8002376:	d837      	bhi.n	80023e8 <task_drawString+0x100>
 8002378:	a201      	add	r2, pc, #4	; (adr r2, 8002380 <task_drawString+0x98>)
 800237a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800237e:	bf00      	nop
 8002380:	08002391 	.word	0x08002391
 8002384:	080023a7 	.word	0x080023a7
 8002388:	080023bd 	.word	0x080023bd
 800238c:	080023d3 	.word	0x080023d3
 8002390:	4b21      	ldr	r3, [pc, #132]	; (8002418 <task_drawString+0x130>)
 8002392:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002396:	b29a      	uxth	r2, r3
 8002398:	89fb      	ldrh	r3, [r7, #14]
 800239a:	4413      	add	r3, r2
 800239c:	b29b      	uxth	r3, r3
 800239e:	b21a      	sxth	r2, r3
 80023a0:	4b1d      	ldr	r3, [pc, #116]	; (8002418 <task_drawString+0x130>)
 80023a2:	801a      	strh	r2, [r3, #0]
 80023a4:	e021      	b.n	80023ea <task_drawString+0x102>
 80023a6:	4b1c      	ldr	r3, [pc, #112]	; (8002418 <task_drawString+0x130>)
 80023a8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80023ac:	b29a      	uxth	r2, r3
 80023ae:	89fb      	ldrh	r3, [r7, #14]
 80023b0:	4413      	add	r3, r2
 80023b2:	b29b      	uxth	r3, r3
 80023b4:	b21a      	sxth	r2, r3
 80023b6:	4b18      	ldr	r3, [pc, #96]	; (8002418 <task_drawString+0x130>)
 80023b8:	805a      	strh	r2, [r3, #2]
 80023ba:	e016      	b.n	80023ea <task_drawString+0x102>
 80023bc:	4b16      	ldr	r3, [pc, #88]	; (8002418 <task_drawString+0x130>)
 80023be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80023c2:	b29a      	uxth	r2, r3
 80023c4:	89fb      	ldrh	r3, [r7, #14]
 80023c6:	1ad3      	subs	r3, r2, r3
 80023c8:	b29b      	uxth	r3, r3
 80023ca:	b21a      	sxth	r2, r3
 80023cc:	4b12      	ldr	r3, [pc, #72]	; (8002418 <task_drawString+0x130>)
 80023ce:	801a      	strh	r2, [r3, #0]
 80023d0:	e00b      	b.n	80023ea <task_drawString+0x102>
 80023d2:	4b11      	ldr	r3, [pc, #68]	; (8002418 <task_drawString+0x130>)
 80023d4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80023d8:	b29a      	uxth	r2, r3
 80023da:	89fb      	ldrh	r3, [r7, #14]
 80023dc:	1ad3      	subs	r3, r2, r3
 80023de:	b29b      	uxth	r3, r3
 80023e0:	b21a      	sxth	r2, r3
 80023e2:	4b0d      	ldr	r3, [pc, #52]	; (8002418 <task_drawString+0x130>)
 80023e4:	805a      	strh	r2, [r3, #2]
 80023e6:	e000      	b.n	80023ea <task_drawString+0x102>
 80023e8:	bf00      	nop
 80023ea:	4b0b      	ldr	r3, [pc, #44]	; (8002418 <task_drawString+0x130>)
 80023ec:	689b      	ldr	r3, [r3, #8]
 80023ee:	3301      	adds	r3, #1
 80023f0:	4a09      	ldr	r2, [pc, #36]	; (8002418 <task_drawString+0x130>)
 80023f2:	6093      	str	r3, [r2, #8]
 80023f4:	e007      	b.n	8002406 <task_drawString+0x11e>
 80023f6:	4b06      	ldr	r3, [pc, #24]	; (8002410 <task_drawString+0x128>)
 80023f8:	2200      	movs	r2, #0
 80023fa:	701a      	strb	r2, [r3, #0]
 80023fc:	e003      	b.n	8002406 <task_drawString+0x11e>
 80023fe:	4b04      	ldr	r3, [pc, #16]	; (8002410 <task_drawString+0x128>)
 8002400:	2200      	movs	r2, #0
 8002402:	701a      	strb	r2, [r3, #0]
 8002404:	bf00      	nop
 8002406:	bf00      	nop
 8002408:	3710      	adds	r7, #16
 800240a:	46bd      	mov	sp, r7
 800240c:	bd80      	pop	{r7, pc}
 800240e:	bf00      	nop
 8002410:	2000128c 	.word	0x2000128c
 8002414:	2000027c 	.word	0x2000027c
 8002418:	20001290 	.word	0x20001290
 800241c:	20000024 	.word	0x20000024

08002420 <ucg_DrawString>:
 8002420:	b580      	push	{r7, lr}
 8002422:	b08a      	sub	sp, #40	; 0x28
 8002424:	af02      	add	r7, sp, #8
 8002426:	60f8      	str	r0, [r7, #12]
 8002428:	4608      	mov	r0, r1
 800242a:	4611      	mov	r1, r2
 800242c:	461a      	mov	r2, r3
 800242e:	4603      	mov	r3, r0
 8002430:	817b      	strh	r3, [r7, #10]
 8002432:	460b      	mov	r3, r1
 8002434:	813b      	strh	r3, [r7, #8]
 8002436:	4613      	mov	r3, r2
 8002438:	71fb      	strb	r3, [r7, #7]
 800243a:	2300      	movs	r3, #0
 800243c:	83fb      	strh	r3, [r7, #30]
 800243e:	897b      	ldrh	r3, [r7, #10]
 8002440:	823b      	strh	r3, [r7, #16]
 8002442:	893b      	ldrh	r3, [r7, #8]
 8002444:	827b      	strh	r3, [r7, #18]
 8002446:	79fb      	ldrb	r3, [r7, #7]
 8002448:	753b      	strb	r3, [r7, #20]
 800244a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800244c:	61bb      	str	r3, [r7, #24]
 800244e:	f107 0310 	add.w	r3, r7, #16
 8002452:	4619      	mov	r1, r3
 8002454:	480c      	ldr	r0, [pc, #48]	; (8002488 <ucg_DrawString+0x68>)
 8002456:	f7fe f8fb 	bl	8000650 <bufEnDat>
 800245a:	4b0c      	ldr	r3, [pc, #48]	; (800248c <ucg_DrawString+0x6c>)
 800245c:	781b      	ldrb	r3, [r3, #0]
 800245e:	2bff      	cmp	r3, #255	; 0xff
 8002460:	d10b      	bne.n	800247a <ucg_DrawString+0x5a>
 8002462:	68fb      	ldr	r3, [r7, #12]
 8002464:	9300      	str	r3, [sp, #0]
 8002466:	4b0a      	ldr	r3, [pc, #40]	; (8002490 <ucg_DrawString+0x70>)
 8002468:	22ff      	movs	r2, #255	; 0xff
 800246a:	211e      	movs	r1, #30
 800246c:	4809      	ldr	r0, [pc, #36]	; (8002494 <ucg_DrawString+0x74>)
 800246e:	f7fe fc27 	bl	8000cc0 <TimerStart>
 8002472:	4603      	mov	r3, r0
 8002474:	461a      	mov	r2, r3
 8002476:	4b05      	ldr	r3, [pc, #20]	; (800248c <ucg_DrawString+0x6c>)
 8002478:	701a      	strb	r2, [r3, #0]
 800247a:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 800247e:	4618      	mov	r0, r3
 8002480:	3720      	adds	r7, #32
 8002482:	46bd      	mov	sp, r7
 8002484:	bd80      	pop	{r7, pc}
 8002486:	bf00      	nop
 8002488:	2000027c 	.word	0x2000027c
 800248c:	20000024 	.word	0x20000024
 8002490:	080022e9 	.word	0x080022e9
 8002494:	08003420 	.word	0x08003420

08002498 <ucg_UpdateRefHeight>:
 8002498:	b480      	push	{r7}
 800249a:	b083      	sub	sp, #12
 800249c:	af00      	add	r7, sp, #0
 800249e:	6078      	str	r0, [r7, #4]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	d05d      	beq.n	8002564 <ucg_UpdateRefHeight+0xcc>
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d04d      	beq.n	8002566 <ucg_UpdateRefHeight+0xce>
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 80024d0:	2b01      	cmp	r3, #1
 80024d2:	d11c      	bne.n	800250e <ucg_UpdateRefHeight+0x76>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 80024e0:	429a      	cmp	r2, r3
 80024e2:	da05      	bge.n	80024f0 <ucg_UpdateRefHeight+0x58>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 80024fc:	429a      	cmp	r2, r3
 80024fe:	dd32      	ble.n	8002566 <ucg_UpdateRefHeight+0xce>
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800250c:	e02b      	b.n	8002566 <ucg_UpdateRefHeight+0xce>
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 8002514:	461a      	mov	r2, r3
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 800251c:	4619      	mov	r1, r3
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8002524:	440b      	add	r3, r1
 8002526:	429a      	cmp	r2, r3
 8002528:	da0d      	bge.n	8002546 <ucg_UpdateRefHeight+0xae>
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8002530:	b2da      	uxtb	r2, r3
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8002538:	b2db      	uxtb	r3, r3
 800253a:	4413      	add	r3, r2
 800253c:	b2db      	uxtb	r3, r3
 800253e:	b25a      	sxtb	r2, r3
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8002552:	429a      	cmp	r2, r3
 8002554:	dd07      	ble.n	8002566 <ucg_UpdateRefHeight+0xce>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8002562:	e000      	b.n	8002566 <ucg_UpdateRefHeight+0xce>
 8002564:	bf00      	nop
 8002566:	370c      	adds	r7, #12
 8002568:	46bd      	mov	sp, r7
 800256a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800256e:	4770      	bx	lr

08002570 <ucg_font_calc_vref_font>:
 8002570:	b480      	push	{r7}
 8002572:	b083      	sub	sp, #12
 8002574:	af00      	add	r7, sp, #0
 8002576:	6078      	str	r0, [r7, #4]
 8002578:	2300      	movs	r3, #0
 800257a:	4618      	mov	r0, r3
 800257c:	370c      	adds	r7, #12
 800257e:	46bd      	mov	sp, r7
 8002580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002584:	4770      	bx	lr
	...

08002588 <ucg_SetFontPosBaseline>:
 8002588:	b480      	push	{r7}
 800258a:	b083      	sub	sp, #12
 800258c:	af00      	add	r7, sp, #0
 800258e:	6078      	str	r0, [r7, #4]
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	4a04      	ldr	r2, [pc, #16]	; (80025a4 <ucg_SetFontPosBaseline+0x1c>)
 8002594:	67da      	str	r2, [r3, #124]	; 0x7c
 8002596:	bf00      	nop
 8002598:	370c      	adds	r7, #12
 800259a:	46bd      	mov	sp, r7
 800259c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a0:	4770      	bx	lr
 80025a2:	bf00      	nop
 80025a4:	08002571 	.word	0x08002571

080025a8 <ucg_SetFont>:
 80025a8:	b580      	push	{r7, lr}
 80025aa:	b082      	sub	sp, #8
 80025ac:	af00      	add	r7, sp, #0
 80025ae:	6078      	str	r0, [r7, #4]
 80025b0:	6039      	str	r1, [r7, #0]
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80025b6:	683a      	ldr	r2, [r7, #0]
 80025b8:	429a      	cmp	r2, r3
 80025ba:	d012      	beq.n	80025e2 <ucg_SetFont+0x3a>
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	683a      	ldr	r2, [r7, #0]
 80025c0:	679a      	str	r2, [r3, #120]	; 0x78
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	3390      	adds	r3, #144	; 0x90
 80025c6:	6839      	ldr	r1, [r7, #0]
 80025c8:	4618      	mov	r0, r3
 80025ca:	f7ff fac9 	bl	8001b60 <ucg_read_font_info>
 80025ce:	6878      	ldr	r0, [r7, #4]
 80025d0:	f7ff ff62 	bl	8002498 <ucg_UpdateRefHeight>
 80025d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80025d8:	220c      	movs	r2, #12
 80025da:	4904      	ldr	r1, [pc, #16]	; (80025ec <ucg_SetFont+0x44>)
 80025dc:	4804      	ldr	r0, [pc, #16]	; (80025f0 <ucg_SetFont+0x48>)
 80025de:	f7fd ffd1 	bl	8000584 <bufInit>
 80025e2:	bf00      	nop
 80025e4:	3708      	adds	r7, #8
 80025e6:	46bd      	mov	sp, r7
 80025e8:	bd80      	pop	{r7, pc}
 80025ea:	bf00      	nop
 80025ec:	2000027c 	.word	0x2000027c
 80025f0:	2000028c 	.word	0x2000028c

080025f4 <ucg_init_struct>:
 80025f4:	b480      	push	{r7}
 80025f6:	b083      	sub	sp, #12
 80025f8:	af00      	add	r7, sp, #0
 80025fa:	6078      	str	r0, [r7, #4]
 80025fc:	687a      	ldr	r2, [r7, #4]
 80025fe:	7813      	ldrb	r3, [r2, #0]
 8002600:	f36f 0300 	bfc	r3, #0, #1
 8002604:	7013      	strb	r3, [r2, #0]
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	2200      	movs	r2, #0
 800260a:	611a      	str	r2, [r3, #16]
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	2201      	movs	r2, #1
 8002610:	865a      	strh	r2, [r3, #50]	; 0x32
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	2200      	movs	r2, #0
 8002616:	679a      	str	r2, [r3, #120]	; 0x78
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	2201      	movs	r2, #1
 800261c:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	2200      	movs	r2, #0
 8002624:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	2200      	movs	r2, #0
 800262c:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	2200      	movs	r2, #0
 8002634:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8002638:	bf00      	nop
 800263a:	370c      	adds	r7, #12
 800263c:	46bd      	mov	sp, r7
 800263e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002642:	4770      	bx	lr

08002644 <ucg_Init>:
 8002644:	b580      	push	{r7, lr}
 8002646:	b086      	sub	sp, #24
 8002648:	af00      	add	r7, sp, #0
 800264a:	60f8      	str	r0, [r7, #12]
 800264c:	60b9      	str	r1, [r7, #8]
 800264e:	607a      	str	r2, [r7, #4]
 8002650:	603b      	str	r3, [r7, #0]
 8002652:	68f8      	ldr	r0, [r7, #12]
 8002654:	f7ff ffce 	bl	80025f4 <ucg_init_struct>
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	2b00      	cmp	r3, #0
 800265c:	d103      	bne.n	8002666 <ucg_Init+0x22>
 800265e:	68fb      	ldr	r3, [r7, #12]
 8002660:	4a0e      	ldr	r2, [pc, #56]	; (800269c <ucg_Init+0x58>)
 8002662:	60da      	str	r2, [r3, #12]
 8002664:	e002      	b.n	800266c <ucg_Init+0x28>
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	687a      	ldr	r2, [r7, #4]
 800266a:	60da      	str	r2, [r3, #12]
 800266c:	68fb      	ldr	r3, [r7, #12]
 800266e:	68ba      	ldr	r2, [r7, #8]
 8002670:	609a      	str	r2, [r3, #8]
 8002672:	68fb      	ldr	r3, [r7, #12]
 8002674:	683a      	ldr	r2, [r7, #0]
 8002676:	61da      	str	r2, [r3, #28]
 8002678:	68f8      	ldr	r0, [r7, #12]
 800267a:	f7ff ff85 	bl	8002588 <ucg_SetFontPosBaseline>
 800267e:	68f8      	ldr	r0, [r7, #12]
 8002680:	f7ff f996 	bl	80019b0 <ucg_PowerUp>
 8002684:	4603      	mov	r3, r0
 8002686:	82fb      	strh	r3, [r7, #22]
 8002688:	68f8      	ldr	r0, [r7, #12]
 800268a:	f7ff f9d6 	bl	8001a3a <ucg_GetDimension>
 800268e:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002692:	4618      	mov	r0, r3
 8002694:	3718      	adds	r7, #24
 8002696:	46bd      	mov	sp, r7
 8002698:	bd80      	pop	{r7, pc}
 800269a:	bf00      	nop
 800269c:	08001615 	.word	0x08001615

080026a0 <ucg_Draw90Line>:
 80026a0:	b580      	push	{r7, lr}
 80026a2:	b084      	sub	sp, #16
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	60f8      	str	r0, [r7, #12]
 80026a8:	4608      	mov	r0, r1
 80026aa:	4611      	mov	r1, r2
 80026ac:	461a      	mov	r2, r3
 80026ae:	4603      	mov	r3, r0
 80026b0:	817b      	strh	r3, [r7, #10]
 80026b2:	460b      	mov	r3, r1
 80026b4:	813b      	strh	r3, [r7, #8]
 80026b6:	4613      	mov	r3, r2
 80026b8:	80fb      	strh	r3, [r7, #6]
 80026ba:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 80026be:	68f9      	ldr	r1, [r7, #12]
 80026c0:	4613      	mov	r3, r2
 80026c2:	005b      	lsls	r3, r3, #1
 80026c4:	4413      	add	r3, r2
 80026c6:	440b      	add	r3, r1
 80026c8:	333a      	adds	r3, #58	; 0x3a
 80026ca:	781a      	ldrb	r2, [r3, #0]
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80026d2:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 80026d6:	68f9      	ldr	r1, [r7, #12]
 80026d8:	4613      	mov	r3, r2
 80026da:	005b      	lsls	r3, r3, #1
 80026dc:	4413      	add	r3, r2
 80026de:	440b      	add	r3, r1
 80026e0:	333b      	adds	r3, #59	; 0x3b
 80026e2:	781a      	ldrb	r2, [r3, #0]
 80026e4:	68fb      	ldr	r3, [r7, #12]
 80026e6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 80026ea:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 80026ee:	68f9      	ldr	r1, [r7, #12]
 80026f0:	4613      	mov	r3, r2
 80026f2:	005b      	lsls	r3, r3, #1
 80026f4:	4413      	add	r3, r2
 80026f6:	440b      	add	r3, r1
 80026f8:	333c      	adds	r3, #60	; 0x3c
 80026fa:	781a      	ldrb	r2, [r3, #0]
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	897a      	ldrh	r2, [r7, #10]
 8002706:	849a      	strh	r2, [r3, #36]	; 0x24
 8002708:	68fb      	ldr	r3, [r7, #12]
 800270a:	893a      	ldrh	r2, [r7, #8]
 800270c:	84da      	strh	r2, [r3, #38]	; 0x26
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	88fa      	ldrh	r2, [r7, #6]
 8002712:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	8b3a      	ldrh	r2, [r7, #24]
 8002718:	85da      	strh	r2, [r3, #46]	; 0x2e
 800271a:	68f8      	ldr	r0, [r7, #12]
 800271c:	f7ff f99f 	bl	8001a5e <ucg_DrawL90FXWithArg>
 8002720:	bf00      	nop
 8002722:	3710      	adds	r7, #16
 8002724:	46bd      	mov	sp, r7
 8002726:	bd80      	pop	{r7, pc}

08002728 <ucg_DrawHLine>:
 8002728:	b580      	push	{r7, lr}
 800272a:	b086      	sub	sp, #24
 800272c:	af02      	add	r7, sp, #8
 800272e:	60f8      	str	r0, [r7, #12]
 8002730:	4608      	mov	r0, r1
 8002732:	4611      	mov	r1, r2
 8002734:	461a      	mov	r2, r3
 8002736:	4603      	mov	r3, r0
 8002738:	817b      	strh	r3, [r7, #10]
 800273a:	460b      	mov	r3, r1
 800273c:	813b      	strh	r3, [r7, #8]
 800273e:	4613      	mov	r3, r2
 8002740:	80fb      	strh	r3, [r7, #6]
 8002742:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8002746:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800274a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800274e:	2300      	movs	r3, #0
 8002750:	9301      	str	r3, [sp, #4]
 8002752:	2300      	movs	r3, #0
 8002754:	9300      	str	r3, [sp, #0]
 8002756:	4603      	mov	r3, r0
 8002758:	68f8      	ldr	r0, [r7, #12]
 800275a:	f7ff ffa1 	bl	80026a0 <ucg_Draw90Line>
 800275e:	bf00      	nop
 8002760:	3710      	adds	r7, #16
 8002762:	46bd      	mov	sp, r7
 8002764:	bd80      	pop	{r7, pc}

08002766 <ucg_SetColor>:
 8002766:	b480      	push	{r7}
 8002768:	b083      	sub	sp, #12
 800276a:	af00      	add	r7, sp, #0
 800276c:	6078      	str	r0, [r7, #4]
 800276e:	4608      	mov	r0, r1
 8002770:	4611      	mov	r1, r2
 8002772:	461a      	mov	r2, r3
 8002774:	4603      	mov	r3, r0
 8002776:	70fb      	strb	r3, [r7, #3]
 8002778:	460b      	mov	r3, r1
 800277a:	70bb      	strb	r3, [r7, #2]
 800277c:	4613      	mov	r3, r2
 800277e:	707b      	strb	r3, [r7, #1]
 8002780:	78fa      	ldrb	r2, [r7, #3]
 8002782:	6879      	ldr	r1, [r7, #4]
 8002784:	4613      	mov	r3, r2
 8002786:	005b      	lsls	r3, r3, #1
 8002788:	4413      	add	r3, r2
 800278a:	440b      	add	r3, r1
 800278c:	333a      	adds	r3, #58	; 0x3a
 800278e:	78ba      	ldrb	r2, [r7, #2]
 8002790:	701a      	strb	r2, [r3, #0]
 8002792:	78fa      	ldrb	r2, [r7, #3]
 8002794:	6879      	ldr	r1, [r7, #4]
 8002796:	4613      	mov	r3, r2
 8002798:	005b      	lsls	r3, r3, #1
 800279a:	4413      	add	r3, r2
 800279c:	440b      	add	r3, r1
 800279e:	333b      	adds	r3, #59	; 0x3b
 80027a0:	787a      	ldrb	r2, [r7, #1]
 80027a2:	701a      	strb	r2, [r3, #0]
 80027a4:	78fa      	ldrb	r2, [r7, #3]
 80027a6:	6879      	ldr	r1, [r7, #4]
 80027a8:	4613      	mov	r3, r2
 80027aa:	005b      	lsls	r3, r3, #1
 80027ac:	4413      	add	r3, r2
 80027ae:	440b      	add	r3, r1
 80027b0:	333c      	adds	r3, #60	; 0x3c
 80027b2:	7c3a      	ldrb	r2, [r7, #16]
 80027b4:	701a      	strb	r2, [r3, #0]
 80027b6:	bf00      	nop
 80027b8:	370c      	adds	r7, #12
 80027ba:	46bd      	mov	sp, r7
 80027bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c0:	4770      	bx	lr

080027c2 <ucg_UndoRotate>:
 80027c2:	b580      	push	{r7, lr}
 80027c4:	b082      	sub	sp, #8
 80027c6:	af00      	add	r7, sp, #0
 80027c8:	6078      	str	r0, [r7, #4]
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	691b      	ldr	r3, [r3, #16]
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	d006      	beq.n	80027e0 <ucg_UndoRotate+0x1e>
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	691a      	ldr	r2, [r3, #16]
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	609a      	str	r2, [r3, #8]
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	2200      	movs	r2, #0
 80027de:	611a      	str	r2, [r3, #16]
 80027e0:	6878      	ldr	r0, [r7, #4]
 80027e2:	f7ff f92a 	bl	8001a3a <ucg_GetDimension>
 80027e6:	6878      	ldr	r0, [r7, #4]
 80027e8:	f7ff f90f 	bl	8001a0a <ucg_SetMaxClipRange>
 80027ec:	bf00      	nop
 80027ee:	3708      	adds	r7, #8
 80027f0:	46bd      	mov	sp, r7
 80027f2:	bd80      	pop	{r7, pc}

080027f4 <ucg_rotate_180_xy>:
 80027f4:	b480      	push	{r7}
 80027f6:	b085      	sub	sp, #20
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
 80027fc:	6039      	str	r1, [r7, #0]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	8adb      	ldrh	r3, [r3, #22]
 8002802:	81fb      	strh	r3, [r7, #14]
 8002804:	89fa      	ldrh	r2, [r7, #14]
 8002806:	683b      	ldr	r3, [r7, #0]
 8002808:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800280c:	b29b      	uxth	r3, r3
 800280e:	1ad3      	subs	r3, r2, r3
 8002810:	b29b      	uxth	r3, r3
 8002812:	81fb      	strh	r3, [r7, #14]
 8002814:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002818:	b29b      	uxth	r3, r3
 800281a:	3b01      	subs	r3, #1
 800281c:	b29b      	uxth	r3, r3
 800281e:	81fb      	strh	r3, [r7, #14]
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	89fa      	ldrh	r2, [r7, #14]
 8002824:	805a      	strh	r2, [r3, #2]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	8a9b      	ldrh	r3, [r3, #20]
 800282a:	81bb      	strh	r3, [r7, #12]
 800282c:	89ba      	ldrh	r2, [r7, #12]
 800282e:	683b      	ldr	r3, [r7, #0]
 8002830:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002834:	b29b      	uxth	r3, r3
 8002836:	1ad3      	subs	r3, r2, r3
 8002838:	b29b      	uxth	r3, r3
 800283a:	81bb      	strh	r3, [r7, #12]
 800283c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002840:	b29b      	uxth	r3, r3
 8002842:	3b01      	subs	r3, #1
 8002844:	b29b      	uxth	r3, r3
 8002846:	81bb      	strh	r3, [r7, #12]
 8002848:	683b      	ldr	r3, [r7, #0]
 800284a:	89ba      	ldrh	r2, [r7, #12]
 800284c:	801a      	strh	r2, [r3, #0]
 800284e:	bf00      	nop
 8002850:	3714      	adds	r7, #20
 8002852:	46bd      	mov	sp, r7
 8002854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002858:	4770      	bx	lr
	...

0800285c <ucg_dev_rotate180>:
 800285c:	b580      	push	{r7, lr}
 800285e:	b084      	sub	sp, #16
 8002860:	af00      	add	r7, sp, #0
 8002862:	60f8      	str	r0, [r7, #12]
 8002864:	460b      	mov	r3, r1
 8002866:	607a      	str	r2, [r7, #4]
 8002868:	817b      	strh	r3, [r7, #10]
 800286a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800286e:	3b0c      	subs	r3, #12
 8002870:	2b0b      	cmp	r3, #11
 8002872:	d866      	bhi.n	8002942 <ucg_dev_rotate180+0xe6>
 8002874:	a201      	add	r2, pc, #4	; (adr r2, 800287c <ucg_dev_rotate180+0x20>)
 8002876:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800287a:	bf00      	nop
 800287c:	080028cb 	.word	0x080028cb
 8002880:	08002943 	.word	0x08002943
 8002884:	08002943 	.word	0x08002943
 8002888:	080028ad 	.word	0x080028ad
 800288c:	08002943 	.word	0x08002943
 8002890:	08002943 	.word	0x08002943
 8002894:	08002943 	.word	0x08002943
 8002898:	08002943 	.word	0x08002943
 800289c:	08002913 	.word	0x08002913
 80028a0:	08002913 	.word	0x08002913
 80028a4:	08002943 	.word	0x08002943
 80028a8:	08002913 	.word	0x08002913
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	691b      	ldr	r3, [r3, #16]
 80028b0:	68fa      	ldr	r2, [r7, #12]
 80028b2:	3214      	adds	r2, #20
 80028b4:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80028b8:	68f8      	ldr	r0, [r7, #12]
 80028ba:	4798      	blx	r3
 80028bc:	687a      	ldr	r2, [r7, #4]
 80028be:	68fb      	ldr	r3, [r7, #12]
 80028c0:	3314      	adds	r3, #20
 80028c2:	6818      	ldr	r0, [r3, #0]
 80028c4:	6010      	str	r0, [r2, #0]
 80028c6:	2301      	movs	r3, #1
 80028c8:	e043      	b.n	8002952 <ucg_dev_rotate180+0xf6>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80028d0:	b29a      	uxth	r2, r3
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80028d8:	b29b      	uxth	r3, r3
 80028da:	4413      	add	r3, r2
 80028dc:	b29b      	uxth	r3, r3
 80028de:	3b01      	subs	r3, #1
 80028e0:	b29b      	uxth	r3, r3
 80028e2:	b21a      	sxth	r2, r3
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	805a      	strh	r2, [r3, #2]
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 80028ee:	b29a      	uxth	r2, r3
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80028f6:	b29b      	uxth	r3, r3
 80028f8:	4413      	add	r3, r2
 80028fa:	b29b      	uxth	r3, r3
 80028fc:	3b01      	subs	r3, #1
 80028fe:	b29b      	uxth	r3, r3
 8002900:	b21a      	sxth	r2, r3
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	801a      	strh	r2, [r3, #0]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	4619      	mov	r1, r3
 800290a:	68f8      	ldr	r0, [r7, #12]
 800290c:	f7ff ff72 	bl	80027f4 <ucg_rotate_180_xy>
 8002910:	e017      	b.n	8002942 <ucg_dev_rotate180+0xe6>
 8002912:	68fb      	ldr	r3, [r7, #12]
 8002914:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002918:	b29b      	uxth	r3, r3
 800291a:	3302      	adds	r3, #2
 800291c:	b29b      	uxth	r3, r3
 800291e:	b21a      	sxth	r2, r3
 8002920:	68fb      	ldr	r3, [r7, #12]
 8002922:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002924:	68fb      	ldr	r3, [r7, #12]
 8002926:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 800292a:	f003 0303 	and.w	r3, r3, #3
 800292e:	b21a      	sxth	r2, r3
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002934:	68fb      	ldr	r3, [r7, #12]
 8002936:	3324      	adds	r3, #36	; 0x24
 8002938:	4619      	mov	r1, r3
 800293a:	68f8      	ldr	r0, [r7, #12]
 800293c:	f7ff ff5a 	bl	80027f4 <ucg_rotate_180_xy>
 8002940:	bf00      	nop
 8002942:	68fb      	ldr	r3, [r7, #12]
 8002944:	691b      	ldr	r3, [r3, #16]
 8002946:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800294a:	687a      	ldr	r2, [r7, #4]
 800294c:	68f8      	ldr	r0, [r7, #12]
 800294e:	4798      	blx	r3
 8002950:	4603      	mov	r3, r0
 8002952:	4618      	mov	r0, r3
 8002954:	3710      	adds	r7, #16
 8002956:	46bd      	mov	sp, r7
 8002958:	bd80      	pop	{r7, pc}
 800295a:	bf00      	nop

0800295c <ucg_SetRotate180>:
 800295c:	b580      	push	{r7, lr}
 800295e:	b082      	sub	sp, #8
 8002960:	af00      	add	r7, sp, #0
 8002962:	6078      	str	r0, [r7, #4]
 8002964:	6878      	ldr	r0, [r7, #4]
 8002966:	f7ff ff2c 	bl	80027c2 <ucg_UndoRotate>
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	689a      	ldr	r2, [r3, #8]
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	611a      	str	r2, [r3, #16]
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	4a05      	ldr	r2, [pc, #20]	; (800298c <ucg_SetRotate180+0x30>)
 8002976:	609a      	str	r2, [r3, #8]
 8002978:	6878      	ldr	r0, [r7, #4]
 800297a:	f7ff f85e 	bl	8001a3a <ucg_GetDimension>
 800297e:	6878      	ldr	r0, [r7, #4]
 8002980:	f7ff f843 	bl	8001a0a <ucg_SetMaxClipRange>
 8002984:	bf00      	nop
 8002986:	3708      	adds	r7, #8
 8002988:	46bd      	mov	sp, r7
 800298a:	bd80      	pop	{r7, pc}
 800298c:	0800285d 	.word	0x0800285d

08002990 <ucg_clip_is_x_visible>:
 8002990:	b480      	push	{r7}
 8002992:	b085      	sub	sp, #20
 8002994:	af00      	add	r7, sp, #0
 8002996:	6078      	str	r0, [r7, #4]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800299c:	81fb      	strh	r3, [r7, #14]
 800299e:	89fa      	ldrh	r2, [r7, #14]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80029a6:	b29b      	uxth	r3, r3
 80029a8:	1ad3      	subs	r3, r2, r3
 80029aa:	b29b      	uxth	r3, r3
 80029ac:	81fb      	strh	r3, [r7, #14]
 80029ae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	da01      	bge.n	80029ba <ucg_clip_is_x_visible+0x2a>
 80029b6:	2300      	movs	r3, #0
 80029b8:	e009      	b.n	80029ce <ucg_clip_is_x_visible+0x3e>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80029c0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80029c4:	429a      	cmp	r2, r3
 80029c6:	db01      	blt.n	80029cc <ucg_clip_is_x_visible+0x3c>
 80029c8:	2300      	movs	r3, #0
 80029ca:	e000      	b.n	80029ce <ucg_clip_is_x_visible+0x3e>
 80029cc:	2301      	movs	r3, #1
 80029ce:	4618      	mov	r0, r3
 80029d0:	3714      	adds	r7, #20
 80029d2:	46bd      	mov	sp, r7
 80029d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d8:	4770      	bx	lr

080029da <ucg_clip_is_y_visible>:
 80029da:	b480      	push	{r7}
 80029dc:	b085      	sub	sp, #20
 80029de:	af00      	add	r7, sp, #0
 80029e0:	6078      	str	r0, [r7, #4]
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80029e6:	81fb      	strh	r3, [r7, #14]
 80029e8:	89fa      	ldrh	r2, [r7, #14]
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 80029f0:	b29b      	uxth	r3, r3
 80029f2:	1ad3      	subs	r3, r2, r3
 80029f4:	b29b      	uxth	r3, r3
 80029f6:	81fb      	strh	r3, [r7, #14]
 80029f8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	da01      	bge.n	8002a04 <ucg_clip_is_y_visible+0x2a>
 8002a00:	2300      	movs	r3, #0
 8002a02:	e009      	b.n	8002a18 <ucg_clip_is_y_visible+0x3e>
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8002a0a:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8002a0e:	429a      	cmp	r2, r3
 8002a10:	db01      	blt.n	8002a16 <ucg_clip_is_y_visible+0x3c>
 8002a12:	2300      	movs	r3, #0
 8002a14:	e000      	b.n	8002a18 <ucg_clip_is_y_visible+0x3e>
 8002a16:	2301      	movs	r3, #1
 8002a18:	4618      	mov	r0, r3
 8002a1a:	3714      	adds	r7, #20
 8002a1c:	46bd      	mov	sp, r7
 8002a1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a22:	4770      	bx	lr

08002a24 <ucg_clip_intersection>:
 8002a24:	b480      	push	{r7}
 8002a26:	b087      	sub	sp, #28
 8002a28:	af00      	add	r7, sp, #0
 8002a2a:	60f8      	str	r0, [r7, #12]
 8002a2c:	60b9      	str	r1, [r7, #8]
 8002a2e:	4611      	mov	r1, r2
 8002a30:	461a      	mov	r2, r3
 8002a32:	460b      	mov	r3, r1
 8002a34:	80fb      	strh	r3, [r7, #6]
 8002a36:	4613      	mov	r3, r2
 8002a38:	80bb      	strh	r3, [r7, #4]
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	881b      	ldrh	r3, [r3, #0]
 8002a3e:	82fb      	strh	r3, [r7, #22]
 8002a40:	68bb      	ldr	r3, [r7, #8]
 8002a42:	881b      	ldrh	r3, [r3, #0]
 8002a44:	82bb      	strh	r3, [r7, #20]
 8002a46:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8002a4a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8002a4e:	429a      	cmp	r2, r3
 8002a50:	db01      	blt.n	8002a56 <ucg_clip_intersection+0x32>
 8002a52:	2300      	movs	r3, #0
 8002a54:	e01a      	b.n	8002a8c <ucg_clip_intersection+0x68>
 8002a56:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8002a5a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002a5e:	429a      	cmp	r2, r3
 8002a60:	dc01      	bgt.n	8002a66 <ucg_clip_intersection+0x42>
 8002a62:	2300      	movs	r3, #0
 8002a64:	e012      	b.n	8002a8c <ucg_clip_intersection+0x68>
 8002a66:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8002a6a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002a6e:	429a      	cmp	r2, r3
 8002a70:	da02      	bge.n	8002a78 <ucg_clip_intersection+0x54>
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	88fa      	ldrh	r2, [r7, #6]
 8002a76:	801a      	strh	r2, [r3, #0]
 8002a78:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8002a7c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8002a80:	429a      	cmp	r2, r3
 8002a82:	dd02      	ble.n	8002a8a <ucg_clip_intersection+0x66>
 8002a84:	68bb      	ldr	r3, [r7, #8]
 8002a86:	88ba      	ldrh	r2, [r7, #4]
 8002a88:	801a      	strh	r2, [r3, #0]
 8002a8a:	2301      	movs	r3, #1
 8002a8c:	4618      	mov	r0, r3
 8002a8e:	371c      	adds	r7, #28
 8002a90:	46bd      	mov	sp, r7
 8002a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a96:	4770      	bx	lr

08002a98 <ucg_clip_is_pixel_visible>:
 8002a98:	b580      	push	{r7, lr}
 8002a9a:	b082      	sub	sp, #8
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	6878      	ldr	r0, [r7, #4]
 8002aa2:	f7ff ff75 	bl	8002990 <ucg_clip_is_x_visible>
 8002aa6:	4603      	mov	r3, r0
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	d101      	bne.n	8002ab0 <ucg_clip_is_pixel_visible+0x18>
 8002aac:	2300      	movs	r3, #0
 8002aae:	e008      	b.n	8002ac2 <ucg_clip_is_pixel_visible+0x2a>
 8002ab0:	6878      	ldr	r0, [r7, #4]
 8002ab2:	f7ff ff92 	bl	80029da <ucg_clip_is_y_visible>
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d101      	bne.n	8002ac0 <ucg_clip_is_pixel_visible+0x28>
 8002abc:	2300      	movs	r3, #0
 8002abe:	e000      	b.n	8002ac2 <ucg_clip_is_pixel_visible+0x2a>
 8002ac0:	2301      	movs	r3, #1
 8002ac2:	4618      	mov	r0, r3
 8002ac4:	3708      	adds	r7, #8
 8002ac6:	46bd      	mov	sp, r7
 8002ac8:	bd80      	pop	{r7, pc}
	...

08002acc <ucg_clip_l90fx>:
 8002acc:	b590      	push	{r4, r7, lr}
 8002ace:	b085      	sub	sp, #20
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	6078      	str	r0, [r7, #4]
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	2200      	movs	r2, #0
 8002ad8:	861a      	strh	r2, [r3, #48]	; 0x30
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002ae0:	2b03      	cmp	r3, #3
 8002ae2:	f200 816d 	bhi.w	8002dc0 <ucg_clip_l90fx+0x2f4>
 8002ae6:	a201      	add	r2, pc, #4	; (adr r2, 8002aec <ucg_clip_l90fx+0x20>)
 8002ae8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002aec:	08002afd 	.word	0x08002afd
 8002af0:	08002ba3 	.word	0x08002ba3
 8002af4:	08002c49 	.word	0x08002c49
 8002af8:	08002d05 	.word	0x08002d05
 8002afc:	6878      	ldr	r0, [r7, #4]
 8002afe:	f7ff ff6c 	bl	80029da <ucg_clip_is_y_visible>
 8002b02:	4603      	mov	r3, r0
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d101      	bne.n	8002b0c <ucg_clip_l90fx+0x40>
 8002b08:	2300      	movs	r3, #0
 8002b0a:	e15a      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8002b12:	81fb      	strh	r3, [r7, #14]
 8002b14:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002b18:	81bb      	strh	r3, [r7, #12]
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002b20:	b29a      	uxth	r2, r3
 8002b22:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002b26:	b29b      	uxth	r3, r3
 8002b28:	4413      	add	r3, r2
 8002b2a:	b29b      	uxth	r3, r3
 8002b2c:	b21b      	sxth	r3, r3
 8002b2e:	81bb      	strh	r3, [r7, #12]
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8002b3c:	b29a      	uxth	r2, r3
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8002b44:	b29b      	uxth	r3, r3
 8002b46:	4413      	add	r3, r2
 8002b48:	b29b      	uxth	r3, r3
 8002b4a:	b21b      	sxth	r3, r3
 8002b4c:	f107 010c 	add.w	r1, r7, #12
 8002b50:	f107 000e 	add.w	r0, r7, #14
 8002b54:	4622      	mov	r2, r4
 8002b56:	f7ff ff65 	bl	8002a24 <ucg_clip_intersection>
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	2b00      	cmp	r3, #0
 8002b5e:	d101      	bne.n	8002b64 <ucg_clip_l90fx+0x98>
 8002b60:	2300      	movs	r3, #0
 8002b62:	e12e      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002b64:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002b68:	b29a      	uxth	r2, r3
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8002b70:	b29b      	uxth	r3, r3
 8002b72:	1ad3      	subs	r3, r2, r3
 8002b74:	b29b      	uxth	r3, r3
 8002b76:	b21a      	sxth	r2, r3
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	861a      	strh	r2, [r3, #48]	; 0x30
 8002b7c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	849a      	strh	r2, [r3, #36]	; 0x24
 8002b84:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002b88:	b29a      	uxth	r2, r3
 8002b8a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002b8e:	b29b      	uxth	r3, r3
 8002b90:	1ad3      	subs	r3, r2, r3
 8002b92:	b29b      	uxth	r3, r3
 8002b94:	b21b      	sxth	r3, r3
 8002b96:	81bb      	strh	r3, [r7, #12]
 8002b98:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002ba0:	e10e      	b.n	8002dc0 <ucg_clip_l90fx+0x2f4>
 8002ba2:	6878      	ldr	r0, [r7, #4]
 8002ba4:	f7ff fef4 	bl	8002990 <ucg_clip_is_x_visible>
 8002ba8:	4603      	mov	r3, r0
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d101      	bne.n	8002bb2 <ucg_clip_l90fx+0xe6>
 8002bae:	2300      	movs	r3, #0
 8002bb0:	e107      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8002bb8:	81fb      	strh	r3, [r7, #14]
 8002bba:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002bbe:	81bb      	strh	r3, [r7, #12]
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002bc6:	b29a      	uxth	r2, r3
 8002bc8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002bcc:	b29b      	uxth	r3, r3
 8002bce:	4413      	add	r3, r2
 8002bd0:	b29b      	uxth	r3, r3
 8002bd2:	b21b      	sxth	r3, r3
 8002bd4:	81bb      	strh	r3, [r7, #12]
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8002be2:	b29a      	uxth	r2, r3
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8002bea:	b29b      	uxth	r3, r3
 8002bec:	4413      	add	r3, r2
 8002bee:	b29b      	uxth	r3, r3
 8002bf0:	b21b      	sxth	r3, r3
 8002bf2:	f107 010c 	add.w	r1, r7, #12
 8002bf6:	f107 000e 	add.w	r0, r7, #14
 8002bfa:	4622      	mov	r2, r4
 8002bfc:	f7ff ff12 	bl	8002a24 <ucg_clip_intersection>
 8002c00:	4603      	mov	r3, r0
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d101      	bne.n	8002c0a <ucg_clip_l90fx+0x13e>
 8002c06:	2300      	movs	r3, #0
 8002c08:	e0db      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002c0a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002c0e:	b29a      	uxth	r2, r3
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8002c16:	b29b      	uxth	r3, r3
 8002c18:	1ad3      	subs	r3, r2, r3
 8002c1a:	b29b      	uxth	r3, r3
 8002c1c:	b21a      	sxth	r2, r3
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	861a      	strh	r2, [r3, #48]	; 0x30
 8002c22:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	84da      	strh	r2, [r3, #38]	; 0x26
 8002c2a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002c2e:	b29a      	uxth	r2, r3
 8002c30:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002c34:	b29b      	uxth	r3, r3
 8002c36:	1ad3      	subs	r3, r2, r3
 8002c38:	b29b      	uxth	r3, r3
 8002c3a:	b21b      	sxth	r3, r3
 8002c3c:	81bb      	strh	r3, [r7, #12]
 8002c3e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002c46:	e0bb      	b.n	8002dc0 <ucg_clip_l90fx+0x2f4>
 8002c48:	6878      	ldr	r0, [r7, #4]
 8002c4a:	f7ff fec6 	bl	80029da <ucg_clip_is_y_visible>
 8002c4e:	4603      	mov	r3, r0
 8002c50:	2b00      	cmp	r3, #0
 8002c52:	d101      	bne.n	8002c58 <ucg_clip_l90fx+0x18c>
 8002c54:	2300      	movs	r3, #0
 8002c56:	e0b4      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8002c5e:	81bb      	strh	r3, [r7, #12]
 8002c60:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002c64:	b29b      	uxth	r3, r3
 8002c66:	3301      	adds	r3, #1
 8002c68:	b29b      	uxth	r3, r3
 8002c6a:	b21b      	sxth	r3, r3
 8002c6c:	81bb      	strh	r3, [r7, #12]
 8002c6e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002c72:	81fb      	strh	r3, [r7, #14]
 8002c74:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002c78:	b29a      	uxth	r2, r3
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002c80:	b29b      	uxth	r3, r3
 8002c82:	1ad3      	subs	r3, r2, r3
 8002c84:	b29b      	uxth	r3, r3
 8002c86:	b21b      	sxth	r3, r3
 8002c88:	81fb      	strh	r3, [r7, #14]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8002c96:	b29a      	uxth	r2, r3
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8002c9e:	b29b      	uxth	r3, r3
 8002ca0:	4413      	add	r3, r2
 8002ca2:	b29b      	uxth	r3, r3
 8002ca4:	b21b      	sxth	r3, r3
 8002ca6:	f107 010c 	add.w	r1, r7, #12
 8002caa:	f107 000e 	add.w	r0, r7, #14
 8002cae:	4622      	mov	r2, r4
 8002cb0:	f7ff feb8 	bl	8002a24 <ucg_clip_intersection>
 8002cb4:	4603      	mov	r3, r0
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d101      	bne.n	8002cbe <ucg_clip_l90fx+0x1f2>
 8002cba:	2300      	movs	r3, #0
 8002cbc:	e081      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002cbe:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002cc2:	b29a      	uxth	r2, r3
 8002cc4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002cc8:	b29b      	uxth	r3, r3
 8002cca:	1ad3      	subs	r3, r2, r3
 8002ccc:	b29b      	uxth	r3, r3
 8002cce:	b21a      	sxth	r2, r3
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002cd4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002cd8:	b29b      	uxth	r3, r3
 8002cda:	3b01      	subs	r3, #1
 8002cdc:	b29b      	uxth	r3, r3
 8002cde:	b21b      	sxth	r3, r3
 8002ce0:	81bb      	strh	r3, [r7, #12]
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8002ce8:	b29a      	uxth	r2, r3
 8002cea:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002cee:	b29b      	uxth	r3, r3
 8002cf0:	1ad3      	subs	r3, r2, r3
 8002cf2:	b29b      	uxth	r3, r3
 8002cf4:	b21a      	sxth	r2, r3
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	861a      	strh	r2, [r3, #48]	; 0x30
 8002cfa:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	849a      	strh	r2, [r3, #36]	; 0x24
 8002d02:	e05d      	b.n	8002dc0 <ucg_clip_l90fx+0x2f4>
 8002d04:	6878      	ldr	r0, [r7, #4]
 8002d06:	f7ff fe43 	bl	8002990 <ucg_clip_is_x_visible>
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d101      	bne.n	8002d14 <ucg_clip_l90fx+0x248>
 8002d10:	2300      	movs	r3, #0
 8002d12:	e056      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8002d1a:	81bb      	strh	r3, [r7, #12]
 8002d1c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002d20:	b29b      	uxth	r3, r3
 8002d22:	3301      	adds	r3, #1
 8002d24:	b29b      	uxth	r3, r3
 8002d26:	b21b      	sxth	r3, r3
 8002d28:	81bb      	strh	r3, [r7, #12]
 8002d2a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002d2e:	81fb      	strh	r3, [r7, #14]
 8002d30:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d34:	b29a      	uxth	r2, r3
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002d3c:	b29b      	uxth	r3, r3
 8002d3e:	1ad3      	subs	r3, r2, r3
 8002d40:	b29b      	uxth	r3, r3
 8002d42:	b21b      	sxth	r3, r3
 8002d44:	81fb      	strh	r3, [r7, #14]
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8002d52:	b29a      	uxth	r2, r3
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8002d5a:	b29b      	uxth	r3, r3
 8002d5c:	4413      	add	r3, r2
 8002d5e:	b29b      	uxth	r3, r3
 8002d60:	b21b      	sxth	r3, r3
 8002d62:	f107 010c 	add.w	r1, r7, #12
 8002d66:	f107 000e 	add.w	r0, r7, #14
 8002d6a:	4622      	mov	r2, r4
 8002d6c:	f7ff fe5a 	bl	8002a24 <ucg_clip_intersection>
 8002d70:	4603      	mov	r3, r0
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d101      	bne.n	8002d7a <ucg_clip_l90fx+0x2ae>
 8002d76:	2300      	movs	r3, #0
 8002d78:	e023      	b.n	8002dc2 <ucg_clip_l90fx+0x2f6>
 8002d7a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002d7e:	b29a      	uxth	r2, r3
 8002d80:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d84:	b29b      	uxth	r3, r3
 8002d86:	1ad3      	subs	r3, r2, r3
 8002d88:	b29b      	uxth	r3, r3
 8002d8a:	b21a      	sxth	r2, r3
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002d90:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002d94:	b29b      	uxth	r3, r3
 8002d96:	3b01      	subs	r3, #1
 8002d98:	b29b      	uxth	r3, r3
 8002d9a:	b21b      	sxth	r3, r3
 8002d9c:	81bb      	strh	r3, [r7, #12]
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8002da4:	b29a      	uxth	r2, r3
 8002da6:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8002daa:	b29b      	uxth	r3, r3
 8002dac:	1ad3      	subs	r3, r2, r3
 8002dae:	b29b      	uxth	r3, r3
 8002db0:	b21a      	sxth	r2, r3
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	861a      	strh	r2, [r3, #48]	; 0x30
 8002db6:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	84da      	strh	r2, [r3, #38]	; 0x26
 8002dbe:	bf00      	nop
 8002dc0:	2301      	movs	r3, #1
 8002dc2:	4618      	mov	r0, r3
 8002dc4:	3714      	adds	r7, #20
 8002dc6:	46bd      	mov	sp, r7
 8002dc8:	bd90      	pop	{r4, r7, pc}
 8002dca:	bf00      	nop

08002dcc <ucg_clip_l90se>:
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b084      	sub	sp, #16
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
 8002dd4:	6878      	ldr	r0, [r7, #4]
 8002dd6:	f7ff fe79 	bl	8002acc <ucg_clip_l90fx>
 8002dda:	4603      	mov	r3, r0
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d101      	bne.n	8002de4 <ucg_clip_l90se+0x18>
 8002de0:	2300      	movs	r3, #0
 8002de2:	e019      	b.n	8002e18 <ucg_clip_l90se+0x4c>
 8002de4:	2300      	movs	r3, #0
 8002de6:	73fb      	strb	r3, [r7, #15]
 8002de8:	e012      	b.n	8002e10 <ucg_clip_l90se+0x44>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8002df0:	7bfa      	ldrb	r2, [r7, #15]
 8002df2:	4613      	mov	r3, r2
 8002df4:	00db      	lsls	r3, r3, #3
 8002df6:	1a9b      	subs	r3, r3, r2
 8002df8:	005b      	lsls	r3, r3, #1
 8002dfa:	18ca      	adds	r2, r1, r3
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8002e02:	4619      	mov	r1, r3
 8002e04:	4610      	mov	r0, r2
 8002e06:	f7fe fb7e 	bl	8001506 <ucg_ccs_seek>
 8002e0a:	7bfb      	ldrb	r3, [r7, #15]
 8002e0c:	3301      	adds	r3, #1
 8002e0e:	73fb      	strb	r3, [r7, #15]
 8002e10:	7bfb      	ldrb	r3, [r7, #15]
 8002e12:	2b02      	cmp	r3, #2
 8002e14:	d9e9      	bls.n	8002dea <ucg_clip_l90se+0x1e>
 8002e16:	2301      	movs	r3, #1
 8002e18:	4618      	mov	r0, r3
 8002e1a:	3710      	adds	r7, #16
 8002e1c:	46bd      	mov	sp, r7
 8002e1e:	bd80      	pop	{r7, pc}

08002e20 <ucg_com_PowerDown>:
 8002e20:	b590      	push	{r4, r7, lr}
 8002e22:	b083      	sub	sp, #12
 8002e24:	af00      	add	r7, sp, #0
 8002e26:	6078      	str	r0, [r7, #4]
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8002e2e:	f003 0308 	and.w	r3, r3, #8
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d006      	beq.n	8002e44 <ucg_com_PowerDown+0x24>
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	69dc      	ldr	r4, [r3, #28]
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	210b      	movs	r1, #11
 8002e40:	6878      	ldr	r0, [r7, #4]
 8002e42:	47a0      	blx	r4
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8002e4a:	f023 0308 	bic.w	r3, r3, #8
 8002e4e:	b2da      	uxtb	r2, r3
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8002e56:	bf00      	nop
 8002e58:	370c      	adds	r7, #12
 8002e5a:	46bd      	mov	sp, r7
 8002e5c:	bd90      	pop	{r4, r7, pc}

08002e5e <ucg_com_PowerUp>:
 8002e5e:	b590      	push	{r4, r7, lr}
 8002e60:	b085      	sub	sp, #20
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	6078      	str	r0, [r7, #4]
 8002e66:	460b      	mov	r3, r1
 8002e68:	807b      	strh	r3, [r7, #2]
 8002e6a:	4613      	mov	r3, r2
 8002e6c:	803b      	strh	r3, [r7, #0]
 8002e6e:	887b      	ldrh	r3, [r7, #2]
 8002e70:	813b      	strh	r3, [r7, #8]
 8002e72:	883b      	ldrh	r3, [r7, #0]
 8002e74:	817b      	strh	r3, [r7, #10]
 8002e76:	6878      	ldr	r0, [r7, #4]
 8002e78:	f7ff ffd2 	bl	8002e20 <ucg_com_PowerDown>
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	2200      	movs	r2, #0
 8002e80:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	69dc      	ldr	r4, [r3, #28]
 8002e88:	f107 0308 	add.w	r3, r7, #8
 8002e8c:	2200      	movs	r2, #0
 8002e8e:	210a      	movs	r1, #10
 8002e90:	6878      	ldr	r0, [r7, #4]
 8002e92:	47a0      	blx	r4
 8002e94:	4603      	mov	r3, r0
 8002e96:	81fb      	strh	r3, [r7, #14]
 8002e98:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002e9c:	2b00      	cmp	r3, #0
 8002e9e:	d008      	beq.n	8002eb2 <ucg_com_PowerUp+0x54>
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8002ea6:	f043 0308 	orr.w	r3, r3, #8
 8002eaa:	b2da      	uxtb	r2, r3
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8002eb2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002eb6:	4618      	mov	r0, r3
 8002eb8:	3714      	adds	r7, #20
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	bd90      	pop	{r4, r7, pc}

08002ebe <ucg_com_SetLineStatus>:
 8002ebe:	b590      	push	{r4, r7, lr}
 8002ec0:	b083      	sub	sp, #12
 8002ec2:	af00      	add	r7, sp, #0
 8002ec4:	6078      	str	r0, [r7, #4]
 8002ec6:	4608      	mov	r0, r1
 8002ec8:	4611      	mov	r1, r2
 8002eca:	461a      	mov	r2, r3
 8002ecc:	4603      	mov	r3, r0
 8002ece:	70fb      	strb	r3, [r7, #3]
 8002ed0:	460b      	mov	r3, r1
 8002ed2:	70bb      	strb	r3, [r7, #2]
 8002ed4:	4613      	mov	r3, r2
 8002ed6:	707b      	strb	r3, [r7, #1]
 8002ed8:	78fb      	ldrb	r3, [r7, #3]
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d131      	bne.n	8002f42 <ucg_com_SetLineStatus+0x84>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8002ee4:	78bb      	ldrb	r3, [r7, #2]
 8002ee6:	4013      	ands	r3, r2
 8002ee8:	b2db      	uxtb	r3, r3
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d008      	beq.n	8002f00 <ucg_com_SetLineStatus+0x42>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8002ef4:	78bb      	ldrb	r3, [r7, #2]
 8002ef6:	4013      	ands	r3, r2
 8002ef8:	b2db      	uxtb	r3, r3
 8002efa:	78ba      	ldrb	r2, [r7, #2]
 8002efc:	429a      	cmp	r2, r3
 8002efe:	d14b      	bne.n	8002f98 <ucg_com_SetLineStatus+0xda>
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	69dc      	ldr	r4, [r3, #28]
 8002f04:	787b      	ldrb	r3, [r7, #1]
 8002f06:	b219      	sxth	r1, r3
 8002f08:	78fb      	ldrb	r3, [r7, #3]
 8002f0a:	b29a      	uxth	r2, r3
 8002f0c:	2300      	movs	r3, #0
 8002f0e:	6878      	ldr	r0, [r7, #4]
 8002f10:	47a0      	blx	r4
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8002f18:	b25a      	sxtb	r2, r3
 8002f1a:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8002f1e:	43db      	mvns	r3, r3
 8002f20:	b25b      	sxtb	r3, r3
 8002f22:	4013      	ands	r3, r2
 8002f24:	b25b      	sxtb	r3, r3
 8002f26:	b2da      	uxtb	r2, r3
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8002f34:	78bb      	ldrb	r3, [r7, #2]
 8002f36:	4313      	orrs	r3, r2
 8002f38:	b2da      	uxtb	r2, r3
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8002f40:	e02a      	b.n	8002f98 <ucg_com_SetLineStatus+0xda>
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8002f48:	78bb      	ldrb	r3, [r7, #2]
 8002f4a:	4013      	ands	r3, r2
 8002f4c:	b2db      	uxtb	r3, r3
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d007      	beq.n	8002f62 <ucg_com_SetLineStatus+0xa4>
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8002f58:	78bb      	ldrb	r3, [r7, #2]
 8002f5a:	4013      	ands	r3, r2
 8002f5c:	b2db      	uxtb	r3, r3
 8002f5e:	2b00      	cmp	r3, #0
 8002f60:	d11a      	bne.n	8002f98 <ucg_com_SetLineStatus+0xda>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	69dc      	ldr	r4, [r3, #28]
 8002f66:	787b      	ldrb	r3, [r7, #1]
 8002f68:	b219      	sxth	r1, r3
 8002f6a:	78fb      	ldrb	r3, [r7, #3]
 8002f6c:	b29a      	uxth	r2, r3
 8002f6e:	2300      	movs	r3, #0
 8002f70:	6878      	ldr	r0, [r7, #4]
 8002f72:	47a0      	blx	r4
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8002f7a:	78bb      	ldrb	r3, [r7, #2]
 8002f7c:	4313      	orrs	r3, r2
 8002f7e:	b2da      	uxtb	r2, r3
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8002f8c:	78bb      	ldrb	r3, [r7, #2]
 8002f8e:	4313      	orrs	r3, r2
 8002f90:	b2da      	uxtb	r2, r3
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8002f98:	bf00      	nop
 8002f9a:	370c      	adds	r7, #12
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd90      	pop	{r4, r7, pc}

08002fa0 <ucg_com_SetResetLineStatus>:
 8002fa0:	b580      	push	{r7, lr}
 8002fa2:	b082      	sub	sp, #8
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	6078      	str	r0, [r7, #4]
 8002fa8:	460b      	mov	r3, r1
 8002faa:	70fb      	strb	r3, [r7, #3]
 8002fac:	78f9      	ldrb	r1, [r7, #3]
 8002fae:	230d      	movs	r3, #13
 8002fb0:	2204      	movs	r2, #4
 8002fb2:	6878      	ldr	r0, [r7, #4]
 8002fb4:	f7ff ff83 	bl	8002ebe <ucg_com_SetLineStatus>
 8002fb8:	bf00      	nop
 8002fba:	3708      	adds	r7, #8
 8002fbc:	46bd      	mov	sp, r7
 8002fbe:	bd80      	pop	{r7, pc}

08002fc0 <ucg_com_SetCSLineStatus>:
 8002fc0:	b580      	push	{r7, lr}
 8002fc2:	b082      	sub	sp, #8
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
 8002fc8:	460b      	mov	r3, r1
 8002fca:	70fb      	strb	r3, [r7, #3]
 8002fcc:	78f9      	ldrb	r1, [r7, #3]
 8002fce:	230e      	movs	r3, #14
 8002fd0:	2202      	movs	r2, #2
 8002fd2:	6878      	ldr	r0, [r7, #4]
 8002fd4:	f7ff ff73 	bl	8002ebe <ucg_com_SetLineStatus>
 8002fd8:	bf00      	nop
 8002fda:	3708      	adds	r7, #8
 8002fdc:	46bd      	mov	sp, r7
 8002fde:	bd80      	pop	{r7, pc}

08002fe0 <ucg_com_SetCDLineStatus>:
 8002fe0:	b580      	push	{r7, lr}
 8002fe2:	b082      	sub	sp, #8
 8002fe4:	af00      	add	r7, sp, #0
 8002fe6:	6078      	str	r0, [r7, #4]
 8002fe8:	460b      	mov	r3, r1
 8002fea:	70fb      	strb	r3, [r7, #3]
 8002fec:	78f9      	ldrb	r1, [r7, #3]
 8002fee:	230f      	movs	r3, #15
 8002ff0:	2201      	movs	r2, #1
 8002ff2:	6878      	ldr	r0, [r7, #4]
 8002ff4:	f7ff ff63 	bl	8002ebe <ucg_com_SetLineStatus>
 8002ff8:	bf00      	nop
 8002ffa:	3708      	adds	r7, #8
 8002ffc:	46bd      	mov	sp, r7
 8002ffe:	bd80      	pop	{r7, pc}

08003000 <ucg_com_DelayMicroseconds>:
 8003000:	b590      	push	{r4, r7, lr}
 8003002:	b083      	sub	sp, #12
 8003004:	af00      	add	r7, sp, #0
 8003006:	6078      	str	r0, [r7, #4]
 8003008:	460b      	mov	r3, r1
 800300a:	807b      	strh	r3, [r7, #2]
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	69dc      	ldr	r4, [r3, #28]
 8003010:	887a      	ldrh	r2, [r7, #2]
 8003012:	2300      	movs	r3, #0
 8003014:	210c      	movs	r1, #12
 8003016:	6878      	ldr	r0, [r7, #4]
 8003018:	47a0      	blx	r4
 800301a:	bf00      	nop
 800301c:	370c      	adds	r7, #12
 800301e:	46bd      	mov	sp, r7
 8003020:	bd90      	pop	{r4, r7, pc}

08003022 <ucg_com_DelayMilliseconds>:
 8003022:	b580      	push	{r7, lr}
 8003024:	b082      	sub	sp, #8
 8003026:	af00      	add	r7, sp, #0
 8003028:	6078      	str	r0, [r7, #4]
 800302a:	460b      	mov	r3, r1
 800302c:	807b      	strh	r3, [r7, #2]
 800302e:	e007      	b.n	8003040 <ucg_com_DelayMilliseconds+0x1e>
 8003030:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003034:	6878      	ldr	r0, [r7, #4]
 8003036:	f7ff ffe3 	bl	8003000 <ucg_com_DelayMicroseconds>
 800303a:	887b      	ldrh	r3, [r7, #2]
 800303c:	3b01      	subs	r3, #1
 800303e:	807b      	strh	r3, [r7, #2]
 8003040:	887b      	ldrh	r3, [r7, #2]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d1f4      	bne.n	8003030 <ucg_com_DelayMilliseconds+0xe>
 8003046:	bf00      	nop
 8003048:	3708      	adds	r7, #8
 800304a:	46bd      	mov	sp, r7
 800304c:	bd80      	pop	{r7, pc}

0800304e <ucg_com_SendByte>:
 800304e:	b590      	push	{r4, r7, lr}
 8003050:	b083      	sub	sp, #12
 8003052:	af00      	add	r7, sp, #0
 8003054:	6078      	str	r0, [r7, #4]
 8003056:	460b      	mov	r3, r1
 8003058:	70fb      	strb	r3, [r7, #3]
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	69dc      	ldr	r4, [r3, #28]
 800305e:	78fb      	ldrb	r3, [r7, #3]
 8003060:	b29a      	uxth	r2, r3
 8003062:	2300      	movs	r3, #0
 8003064:	2110      	movs	r1, #16
 8003066:	6878      	ldr	r0, [r7, #4]
 8003068:	47a0      	blx	r4
 800306a:	bf00      	nop
 800306c:	370c      	adds	r7, #12
 800306e:	46bd      	mov	sp, r7
 8003070:	bd90      	pop	{r4, r7, pc}

08003072 <ucg_com_SendStringP>:
 8003072:	b590      	push	{r4, r7, lr}
 8003074:	b087      	sub	sp, #28
 8003076:	af00      	add	r7, sp, #0
 8003078:	60f8      	str	r0, [r7, #12]
 800307a:	460b      	mov	r3, r1
 800307c:	607a      	str	r2, [r7, #4]
 800307e:	817b      	strh	r3, [r7, #10]
 8003080:	e010      	b.n	80030a4 <ucg_com_SendStringP+0x32>
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	781b      	ldrb	r3, [r3, #0]
 8003086:	75fb      	strb	r3, [r7, #23]
 8003088:	68fb      	ldr	r3, [r7, #12]
 800308a:	69dc      	ldr	r4, [r3, #28]
 800308c:	7dfb      	ldrb	r3, [r7, #23]
 800308e:	b29a      	uxth	r2, r3
 8003090:	2300      	movs	r3, #0
 8003092:	2110      	movs	r1, #16
 8003094:	68f8      	ldr	r0, [r7, #12]
 8003096:	47a0      	blx	r4
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	3301      	adds	r3, #1
 800309c:	607b      	str	r3, [r7, #4]
 800309e:	897b      	ldrh	r3, [r7, #10]
 80030a0:	3b01      	subs	r3, #1
 80030a2:	817b      	strh	r3, [r7, #10]
 80030a4:	897b      	ldrh	r3, [r7, #10]
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d1eb      	bne.n	8003082 <ucg_com_SendStringP+0x10>
 80030aa:	bf00      	nop
 80030ac:	371c      	adds	r7, #28
 80030ae:	46bd      	mov	sp, r7
 80030b0:	bd90      	pop	{r4, r7, pc}

080030b2 <ucg_com_SendCmdArg>:
 80030b2:	b580      	push	{r7, lr}
 80030b4:	b084      	sub	sp, #16
 80030b6:	af00      	add	r7, sp, #0
 80030b8:	60f8      	str	r0, [r7, #12]
 80030ba:	60b9      	str	r1, [r7, #8]
 80030bc:	4611      	mov	r1, r2
 80030be:	461a      	mov	r2, r3
 80030c0:	460b      	mov	r3, r1
 80030c2:	71fb      	strb	r3, [r7, #7]
 80030c4:	4613      	mov	r3, r2
 80030c6:	71bb      	strb	r3, [r7, #6]
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80030ce:	085b      	lsrs	r3, r3, #1
 80030d0:	b2db      	uxtb	r3, r3
 80030d2:	f003 0301 	and.w	r3, r3, #1
 80030d6:	b2db      	uxtb	r3, r3
 80030d8:	4619      	mov	r1, r3
 80030da:	68f8      	ldr	r0, [r7, #12]
 80030dc:	f7ff ff80 	bl	8002fe0 <ucg_com_SetCDLineStatus>
 80030e0:	79fb      	ldrb	r3, [r7, #7]
 80030e2:	b29b      	uxth	r3, r3
 80030e4:	68ba      	ldr	r2, [r7, #8]
 80030e6:	4619      	mov	r1, r3
 80030e8:	68f8      	ldr	r0, [r7, #12]
 80030ea:	f7ff ffc2 	bl	8003072 <ucg_com_SendStringP>
 80030ee:	79bb      	ldrb	r3, [r7, #6]
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d014      	beq.n	800311e <ucg_com_SendCmdArg+0x6c>
 80030f4:	79fb      	ldrb	r3, [r7, #7]
 80030f6:	68ba      	ldr	r2, [r7, #8]
 80030f8:	4413      	add	r3, r2
 80030fa:	60bb      	str	r3, [r7, #8]
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003102:	f003 0301 	and.w	r3, r3, #1
 8003106:	b2db      	uxtb	r3, r3
 8003108:	4619      	mov	r1, r3
 800310a:	68f8      	ldr	r0, [r7, #12]
 800310c:	f7ff ff68 	bl	8002fe0 <ucg_com_SetCDLineStatus>
 8003110:	79bb      	ldrb	r3, [r7, #6]
 8003112:	b29b      	uxth	r3, r3
 8003114:	68ba      	ldr	r2, [r7, #8]
 8003116:	4619      	mov	r1, r3
 8003118:	68f8      	ldr	r0, [r7, #12]
 800311a:	f7ff ffaa 	bl	8003072 <ucg_com_SendStringP>
 800311e:	bf00      	nop
 8003120:	3710      	adds	r7, #16
 8003122:	46bd      	mov	sp, r7
 8003124:	bd80      	pop	{r7, pc}
	...

08003128 <ucg_com_SendCmdSeq>:
 8003128:	b580      	push	{r7, lr}
 800312a:	b084      	sub	sp, #16
 800312c:	af00      	add	r7, sp, #0
 800312e:	6078      	str	r0, [r7, #4]
 8003130:	6039      	str	r1, [r7, #0]
 8003132:	683b      	ldr	r3, [r7, #0]
 8003134:	781b      	ldrb	r3, [r3, #0]
 8003136:	73fb      	strb	r3, [r7, #15]
 8003138:	7bfb      	ldrb	r3, [r7, #15]
 800313a:	091b      	lsrs	r3, r3, #4
 800313c:	73bb      	strb	r3, [r7, #14]
 800313e:	7bfb      	ldrb	r3, [r7, #15]
 8003140:	f003 030f 	and.w	r3, r3, #15
 8003144:	737b      	strb	r3, [r7, #13]
 8003146:	7bbb      	ldrb	r3, [r7, #14]
 8003148:	2b0f      	cmp	r3, #15
 800314a:	f200 8124 	bhi.w	8003396 <ucg_com_SendCmdSeq+0x26e>
 800314e:	a201      	add	r2, pc, #4	; (adr r2, 8003154 <ucg_com_SendCmdSeq+0x2c>)
 8003150:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003154:	08003397 	.word	0x08003397
 8003158:	08003195 	.word	0x08003195
 800315c:	08003195 	.word	0x08003195
 8003160:	08003195 	.word	0x08003195
 8003164:	08003397 	.word	0x08003397
 8003168:	08003397 	.word	0x08003397
 800316c:	080031b5 	.word	0x080031b5
 8003170:	080031e7 	.word	0x080031e7
 8003174:	0800322b 	.word	0x0800322b
 8003178:	08003257 	.word	0x08003257
 800317c:	08003283 	.word	0x08003283
 8003180:	080032e3 	.word	0x080032e3
 8003184:	08003397 	.word	0x08003397
 8003188:	08003397 	.word	0x08003397
 800318c:	08003397 	.word	0x08003397
 8003190:	08003343 	.word	0x08003343
 8003194:	683b      	ldr	r3, [r7, #0]
 8003196:	1c59      	adds	r1, r3, #1
 8003198:	7b7b      	ldrb	r3, [r7, #13]
 800319a:	7bba      	ldrb	r2, [r7, #14]
 800319c:	6878      	ldr	r0, [r7, #4]
 800319e:	f7ff ff88 	bl	80030b2 <ucg_com_SendCmdArg>
 80031a2:	7bbb      	ldrb	r3, [r7, #14]
 80031a4:	1c5a      	adds	r2, r3, #1
 80031a6:	7b7b      	ldrb	r3, [r7, #13]
 80031a8:	4413      	add	r3, r2
 80031aa:	461a      	mov	r2, r3
 80031ac:	683b      	ldr	r3, [r7, #0]
 80031ae:	4413      	add	r3, r2
 80031b0:	603b      	str	r3, [r7, #0]
 80031b2:	e0ef      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80031ba:	f003 0301 	and.w	r3, r3, #1
 80031be:	b2db      	uxtb	r3, r3
 80031c0:	4619      	mov	r1, r3
 80031c2:	6878      	ldr	r0, [r7, #4]
 80031c4:	f7ff ff0c 	bl	8002fe0 <ucg_com_SetCDLineStatus>
 80031c8:	7b7b      	ldrb	r3, [r7, #13]
 80031ca:	b299      	uxth	r1, r3
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	3301      	adds	r3, #1
 80031d0:	461a      	mov	r2, r3
 80031d2:	6878      	ldr	r0, [r7, #4]
 80031d4:	f7ff ff4d 	bl	8003072 <ucg_com_SendStringP>
 80031d8:	7b7b      	ldrb	r3, [r7, #13]
 80031da:	3301      	adds	r3, #1
 80031dc:	461a      	mov	r2, r3
 80031de:	683b      	ldr	r3, [r7, #0]
 80031e0:	4413      	add	r3, r2
 80031e2:	603b      	str	r3, [r7, #0]
 80031e4:	e0d6      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80031ec:	085b      	lsrs	r3, r3, #1
 80031ee:	b2db      	uxtb	r3, r3
 80031f0:	f003 0301 	and.w	r3, r3, #1
 80031f4:	2b00      	cmp	r3, #0
 80031f6:	bf0c      	ite	eq
 80031f8:	2301      	moveq	r3, #1
 80031fa:	2300      	movne	r3, #0
 80031fc:	b2db      	uxtb	r3, r3
 80031fe:	4619      	mov	r1, r3
 8003200:	6878      	ldr	r0, [r7, #4]
 8003202:	f7ff feed 	bl	8002fe0 <ucg_com_SetCDLineStatus>
 8003206:	7b7b      	ldrb	r3, [r7, #13]
 8003208:	2b00      	cmp	r3, #0
 800320a:	d007      	beq.n	800321c <ucg_com_SendCmdSeq+0xf4>
 800320c:	7b7b      	ldrb	r3, [r7, #13]
 800320e:	b299      	uxth	r1, r3
 8003210:	683b      	ldr	r3, [r7, #0]
 8003212:	3301      	adds	r3, #1
 8003214:	461a      	mov	r2, r3
 8003216:	6878      	ldr	r0, [r7, #4]
 8003218:	f7ff ff2b 	bl	8003072 <ucg_com_SendStringP>
 800321c:	7b7b      	ldrb	r3, [r7, #13]
 800321e:	3301      	adds	r3, #1
 8003220:	461a      	mov	r2, r3
 8003222:	683b      	ldr	r3, [r7, #0]
 8003224:	4413      	add	r3, r2
 8003226:	603b      	str	r3, [r7, #0]
 8003228:	e0b4      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 800322a:	683b      	ldr	r3, [r7, #0]
 800322c:	3301      	adds	r3, #1
 800322e:	603b      	str	r3, [r7, #0]
 8003230:	683b      	ldr	r3, [r7, #0]
 8003232:	781b      	ldrb	r3, [r3, #0]
 8003234:	73fb      	strb	r3, [r7, #15]
 8003236:	7b7b      	ldrb	r3, [r7, #13]
 8003238:	b29b      	uxth	r3, r3
 800323a:	021b      	lsls	r3, r3, #8
 800323c:	b29a      	uxth	r2, r3
 800323e:	7bfb      	ldrb	r3, [r7, #15]
 8003240:	b29b      	uxth	r3, r3
 8003242:	4413      	add	r3, r2
 8003244:	b29b      	uxth	r3, r3
 8003246:	4619      	mov	r1, r3
 8003248:	6878      	ldr	r0, [r7, #4]
 800324a:	f7ff feea 	bl	8003022 <ucg_com_DelayMilliseconds>
 800324e:	683b      	ldr	r3, [r7, #0]
 8003250:	3301      	adds	r3, #1
 8003252:	603b      	str	r3, [r7, #0]
 8003254:	e09e      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 8003256:	683b      	ldr	r3, [r7, #0]
 8003258:	3301      	adds	r3, #1
 800325a:	603b      	str	r3, [r7, #0]
 800325c:	683b      	ldr	r3, [r7, #0]
 800325e:	781b      	ldrb	r3, [r3, #0]
 8003260:	73fb      	strb	r3, [r7, #15]
 8003262:	7b7b      	ldrb	r3, [r7, #13]
 8003264:	b29b      	uxth	r3, r3
 8003266:	021b      	lsls	r3, r3, #8
 8003268:	b29a      	uxth	r2, r3
 800326a:	7bfb      	ldrb	r3, [r7, #15]
 800326c:	b29b      	uxth	r3, r3
 800326e:	4413      	add	r3, r2
 8003270:	b29b      	uxth	r3, r3
 8003272:	4619      	mov	r1, r3
 8003274:	6878      	ldr	r0, [r7, #4]
 8003276:	f7ff fec3 	bl	8003000 <ucg_com_DelayMicroseconds>
 800327a:	683b      	ldr	r3, [r7, #0]
 800327c:	3301      	adds	r3, #1
 800327e:	603b      	str	r3, [r7, #0]
 8003280:	e088      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 8003282:	683b      	ldr	r3, [r7, #0]
 8003284:	3301      	adds	r3, #1
 8003286:	603b      	str	r3, [r7, #0]
 8003288:	683b      	ldr	r3, [r7, #0]
 800328a:	781b      	ldrb	r3, [r3, #0]
 800328c:	73fb      	strb	r3, [r7, #15]
 800328e:	683b      	ldr	r3, [r7, #0]
 8003290:	3301      	adds	r3, #1
 8003292:	603b      	str	r3, [r7, #0]
 8003294:	683b      	ldr	r3, [r7, #0]
 8003296:	781b      	ldrb	r3, [r3, #0]
 8003298:	733b      	strb	r3, [r7, #12]
 800329a:	683b      	ldr	r3, [r7, #0]
 800329c:	3301      	adds	r3, #1
 800329e:	603b      	str	r3, [r7, #0]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80032a6:	f003 0301 	and.w	r3, r3, #1
 80032aa:	b2db      	uxtb	r3, r3
 80032ac:	4619      	mov	r1, r3
 80032ae:	6878      	ldr	r0, [r7, #4]
 80032b0:	f7ff fe96 	bl	8002fe0 <ucg_com_SetCDLineStatus>
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80032ba:	461a      	mov	r2, r3
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 80032c2:	441a      	add	r2, r3
 80032c4:	7b7b      	ldrb	r3, [r7, #13]
 80032c6:	fa42 f303 	asr.w	r3, r2, r3
 80032ca:	b2da      	uxtb	r2, r3
 80032cc:	7bfb      	ldrb	r3, [r7, #15]
 80032ce:	4013      	ands	r3, r2
 80032d0:	b2da      	uxtb	r2, r3
 80032d2:	7b3b      	ldrb	r3, [r7, #12]
 80032d4:	4313      	orrs	r3, r2
 80032d6:	b2db      	uxtb	r3, r3
 80032d8:	4619      	mov	r1, r3
 80032da:	6878      	ldr	r0, [r7, #4]
 80032dc:	f7ff feb7 	bl	800304e <ucg_com_SendByte>
 80032e0:	e058      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 80032e2:	683b      	ldr	r3, [r7, #0]
 80032e4:	3301      	adds	r3, #1
 80032e6:	603b      	str	r3, [r7, #0]
 80032e8:	683b      	ldr	r3, [r7, #0]
 80032ea:	781b      	ldrb	r3, [r3, #0]
 80032ec:	73fb      	strb	r3, [r7, #15]
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	3301      	adds	r3, #1
 80032f2:	603b      	str	r3, [r7, #0]
 80032f4:	683b      	ldr	r3, [r7, #0]
 80032f6:	781b      	ldrb	r3, [r3, #0]
 80032f8:	733b      	strb	r3, [r7, #12]
 80032fa:	683b      	ldr	r3, [r7, #0]
 80032fc:	3301      	adds	r3, #1
 80032fe:	603b      	str	r3, [r7, #0]
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003306:	f003 0301 	and.w	r3, r3, #1
 800330a:	b2db      	uxtb	r3, r3
 800330c:	4619      	mov	r1, r3
 800330e:	6878      	ldr	r0, [r7, #4]
 8003310:	f7ff fe66 	bl	8002fe0 <ucg_com_SetCDLineStatus>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 800331a:	461a      	mov	r2, r3
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8003322:	441a      	add	r2, r3
 8003324:	7b7b      	ldrb	r3, [r7, #13]
 8003326:	fa42 f303 	asr.w	r3, r2, r3
 800332a:	b2da      	uxtb	r2, r3
 800332c:	7bfb      	ldrb	r3, [r7, #15]
 800332e:	4013      	ands	r3, r2
 8003330:	b2da      	uxtb	r2, r3
 8003332:	7b3b      	ldrb	r3, [r7, #12]
 8003334:	4313      	orrs	r3, r2
 8003336:	b2db      	uxtb	r3, r3
 8003338:	4619      	mov	r1, r3
 800333a:	6878      	ldr	r0, [r7, #4]
 800333c:	f7ff fe87 	bl	800304e <ucg_com_SendByte>
 8003340:	e028      	b.n	8003394 <ucg_com_SendCmdSeq+0x26c>
 8003342:	7b7b      	ldrb	r3, [r7, #13]
 8003344:	089b      	lsrs	r3, r3, #2
 8003346:	73bb      	strb	r3, [r7, #14]
 8003348:	7b7b      	ldrb	r3, [r7, #13]
 800334a:	f003 0303 	and.w	r3, r3, #3
 800334e:	737b      	strb	r3, [r7, #13]
 8003350:	7bbb      	ldrb	r3, [r7, #14]
 8003352:	2b01      	cmp	r3, #1
 8003354:	d00c      	beq.n	8003370 <ucg_com_SendCmdSeq+0x248>
 8003356:	2b03      	cmp	r3, #3
 8003358:	d013      	beq.n	8003382 <ucg_com_SendCmdSeq+0x25a>
 800335a:	2b00      	cmp	r3, #0
 800335c:	d116      	bne.n	800338c <ucg_com_SendCmdSeq+0x264>
 800335e:	7b7b      	ldrb	r3, [r7, #13]
 8003360:	f003 0301 	and.w	r3, r3, #1
 8003364:	b2db      	uxtb	r3, r3
 8003366:	4619      	mov	r1, r3
 8003368:	6878      	ldr	r0, [r7, #4]
 800336a:	f7ff fe19 	bl	8002fa0 <ucg_com_SetResetLineStatus>
 800336e:	e00d      	b.n	800338c <ucg_com_SendCmdSeq+0x264>
 8003370:	7b7b      	ldrb	r3, [r7, #13]
 8003372:	f003 0301 	and.w	r3, r3, #1
 8003376:	b2db      	uxtb	r3, r3
 8003378:	4619      	mov	r1, r3
 800337a:	6878      	ldr	r0, [r7, #4]
 800337c:	f7ff fe20 	bl	8002fc0 <ucg_com_SetCSLineStatus>
 8003380:	e004      	b.n	800338c <ucg_com_SendCmdSeq+0x264>
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	7b7a      	ldrb	r2, [r7, #13]
 8003386:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 800338a:	bf00      	nop
 800338c:	683b      	ldr	r3, [r7, #0]
 800338e:	3301      	adds	r3, #1
 8003390:	603b      	str	r3, [r7, #0]
 8003392:	bf00      	nop
 8003394:	e6cd      	b.n	8003132 <ucg_com_SendCmdSeq+0xa>
 8003396:	bf00      	nop
 8003398:	3710      	adds	r7, #16
 800339a:	46bd      	mov	sp, r7
 800339c:	bd80      	pop	{r7, pc}
 800339e:	bf00      	nop

080033a0 <__libc_init_array>:
 80033a0:	b570      	push	{r4, r5, r6, lr}
 80033a2:	4d0d      	ldr	r5, [pc, #52]	; (80033d8 <__libc_init_array+0x38>)
 80033a4:	4c0d      	ldr	r4, [pc, #52]	; (80033dc <__libc_init_array+0x3c>)
 80033a6:	1b64      	subs	r4, r4, r5
 80033a8:	10a4      	asrs	r4, r4, #2
 80033aa:	2600      	movs	r6, #0
 80033ac:	42a6      	cmp	r6, r4
 80033ae:	d109      	bne.n	80033c4 <__libc_init_array+0x24>
 80033b0:	4d0b      	ldr	r5, [pc, #44]	; (80033e0 <__libc_init_array+0x40>)
 80033b2:	4c0c      	ldr	r4, [pc, #48]	; (80033e4 <__libc_init_array+0x44>)
 80033b4:	f000 f818 	bl	80033e8 <_init>
 80033b8:	1b64      	subs	r4, r4, r5
 80033ba:	10a4      	asrs	r4, r4, #2
 80033bc:	2600      	movs	r6, #0
 80033be:	42a6      	cmp	r6, r4
 80033c0:	d105      	bne.n	80033ce <__libc_init_array+0x2e>
 80033c2:	bd70      	pop	{r4, r5, r6, pc}
 80033c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80033c8:	4798      	blx	r3
 80033ca:	3601      	adds	r6, #1
 80033cc:	e7ee      	b.n	80033ac <__libc_init_array+0xc>
 80033ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80033d2:	4798      	blx	r3
 80033d4:	3601      	adds	r6, #1
 80033d6:	e7f2      	b.n	80033be <__libc_init_array+0x1e>
 80033d8:	08003b14 	.word	0x08003b14
 80033dc:	08003b14 	.word	0x08003b14
 80033e0:	08003b14 	.word	0x08003b14
 80033e4:	08003b18 	.word	0x08003b18

080033e8 <_init>:
 80033e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033ea:	bf00      	nop
 80033ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80033ee:	bc08      	pop	{r3}
 80033f0:	469e      	mov	lr, r3
 80033f2:	4770      	bx	lr

080033f4 <_fini>:
 80033f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033f6:	bf00      	nop
 80033f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80033fa:	bc08      	pop	{r3}
 80033fc:	469e      	mov	lr, r3
 80033fe:	4770      	bx	lr
